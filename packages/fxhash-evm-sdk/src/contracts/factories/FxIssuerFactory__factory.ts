/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FxIssuerFactory,
  FxIssuerFactoryInterface,
} from "../FxIssuerFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPrimaryReceiver",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "feeShare",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "referrerShare",
            type: "uint64",
          },
          {
            internalType: "uint128",
            name: "lockTime",
            type: "uint128",
          },
          {
            internalType: "string",
            name: "defaultMetadata",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct ConfigInfo",
        name: "_configInfo",
        type: "tuple",
      },
    ],
    name: "ConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "ImplementationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint96",
        name: "_projectId",
        type: "uint96",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_genArtToken",
        type: "address",
      },
    ],
    name: "ProjectCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "configInfo",
    outputs: [
      {
        internalType: "uint64",
        name: "feeShare",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "referrerShare",
        type: "uint64",
      },
      {
        internalType: "uint128",
        name: "lockTime",
        type: "uint128",
      },
      {
        internalType: "string",
        name: "defaultMetadata",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_primaryReceiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "onchain",
            type: "bool",
          },
          {
            internalType: "uint240",
            name: "supply",
            type: "uint240",
          },
          {
            internalType: "string",
            name: "contractURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "baseURI",
                type: "string",
              },
              {
                internalType: "string",
                name: "imageURI",
                type: "string",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "name",
                        type: "string",
                      },
                      {
                        internalType: "address",
                        name: "contractAddress",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "contractData",
                        type: "bytes",
                      },
                      {
                        internalType: "enum HTMLTagType",
                        name: "tagType",
                        type: "uint8",
                      },
                      {
                        internalType: "bytes",
                        name: "tagOpen",
                        type: "bytes",
                      },
                      {
                        internalType: "bytes",
                        name: "tagClose",
                        type: "bytes",
                      },
                      {
                        internalType: "bytes",
                        name: "tagContent",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct HTMLTag[]",
                    name: "headTags",
                    type: "tuple[]",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "name",
                        type: "string",
                      },
                      {
                        internalType: "address",
                        name: "contractAddress",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "contractData",
                        type: "bytes",
                      },
                      {
                        internalType: "enum HTMLTagType",
                        name: "tagType",
                        type: "uint8",
                      },
                      {
                        internalType: "bytes",
                        name: "tagOpen",
                        type: "bytes",
                      },
                      {
                        internalType: "bytes",
                        name: "tagClose",
                        type: "bytes",
                      },
                      {
                        internalType: "bytes",
                        name: "tagContent",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct HTMLTag[]",
                    name: "bodyTags",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct HTMLRequest",
                name: "animation",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "name",
                        type: "string",
                      },
                      {
                        internalType: "address",
                        name: "contractAddress",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "contractData",
                        type: "bytes",
                      },
                      {
                        internalType: "enum HTMLTagType",
                        name: "tagType",
                        type: "uint8",
                      },
                      {
                        internalType: "bytes",
                        name: "tagOpen",
                        type: "bytes",
                      },
                      {
                        internalType: "bytes",
                        name: "tagClose",
                        type: "bytes",
                      },
                      {
                        internalType: "bytes",
                        name: "tagContent",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct HTMLTag[]",
                    name: "headTags",
                    type: "tuple[]",
                  },
                  {
                    components: [
                      {
                        internalType: "string",
                        name: "name",
                        type: "string",
                      },
                      {
                        internalType: "address",
                        name: "contractAddress",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "contractData",
                        type: "bytes",
                      },
                      {
                        internalType: "enum HTMLTagType",
                        name: "tagType",
                        type: "uint8",
                      },
                      {
                        internalType: "bytes",
                        name: "tagOpen",
                        type: "bytes",
                      },
                      {
                        internalType: "bytes",
                        name: "tagClose",
                        type: "bytes",
                      },
                      {
                        internalType: "bytes",
                        name: "tagContent",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct HTMLTag[]",
                    name: "bodyTags",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct HTMLRequest",
                name: "attributes",
                type: "tuple",
              },
            ],
            internalType: "struct MetadataInfo",
            name: "metadataInfo",
            type: "tuple",
          },
        ],
        internalType: "struct ProjectInfo",
        name: "_projectInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "minter",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "startTime",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "endTime",
                type: "uint64",
              },
              {
                internalType: "uint128",
                name: "allocation",
                type: "uint128",
              },
            ],
            internalType: "struct ReserveInfo",
            name: "reserveInfo",
            type: "tuple",
          },
        ],
        internalType: "struct MintInfo[]",
        name: "_mintInfo",
        type: "tuple[]",
      },
      {
        internalType: "address payable[]",
        name: "_royaltyReceivers",
        type: "address[]",
      },
      {
        internalType: "uint96[]",
        name: "_basisPoints",
        type: "uint96[]",
      },
    ],
    name: "createProject",
    outputs: [
      {
        internalType: "address",
        name: "genArtToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectId",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    name: "projects",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "feeShare",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "referrerShare",
            type: "uint64",
          },
          {
            internalType: "uint128",
            name: "lockTime",
            type: "uint128",
          },
          {
            internalType: "string",
            name: "defaultMetadata",
            type: "string",
          },
        ],
        internalType: "struct ConfigInfo",
        name: "_configInfo",
        type: "tuple",
      },
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516112ad3803806112ad83398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b6111c1806100ec6000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c80633fafa127146100935780635196effb146100ca5780635c60da1b146100f5578063670017f414610108578063715018a6146101205780638748b4b11461012a5780638da5cb5b1461013d57806394a3793614610145578063d784d4261461016e578063f2fde38b14610181575b600080fd5b6000546100ad90600160a01b90046001600160601b031681565b6040516001600160601b0390911681526020015b60405180910390f35b6100dd6100d8366004610741565b610194565b6040516001600160a01b0390911681526020016100c1565b6001546100dd906001600160a01b031681565b61011061032a565b6040516100c19493929190610822565b6101286103e8565b005b61012861013836600461089f565b6103fc565b6100dd610450565b6100dd6101533660046108f7565b6004602052600090815260409020546001600160a01b031681565b61012861017c366004610912565b61045f565b61012861018f366004610912565b6104b3565b60006001600160a01b038a166101bd576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b0389166101e457604051631e31e7df60e31b815260040160405180910390fd5b6001546101f9906001600160a01b0316610531565b9050806004600080601481819054906101000a90046001600160601b03166102209061092f565b82546001600160601b039182166101009390930a838102920219161790915581526020810191909152604090810160002080546001600160a01b039384166001600160a01b031990911617905551632d37ff4360e21b81529082169063b4dffd0c906102a0908d908d908d908d908d908d908d908d908d90600401610df5565b600060405180830381600087803b1580156102ba57600080fd5b505af11580156102ce573d6000803e3d6000fd5b5050600080546040516001600160a01b0386811695508f169350600160a01b9091046001600160601b0316917f546bc3cd5ff4b322df8339c6833b99285a6333e5e5f90a88ced57d9de7c345fc91a49998505050505050505050565b60028054600380546001600160401b0380841694600160401b850490911693600160801b90046001600160801b031692909161036590610ef2565b80601f016020809104026020016040519081016040528092919081815260200182805461039190610ef2565b80156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905084565b6103f06105cb565b6103fa600061062a565b565b6104046105cb565b806002610411828261104b565b505060405133907f4b419aa818592f22a4ff8add4bde52841376b433a8ab4f875ecf511c53f9e15690610445908490611111565b60405180910390a250565b6000546001600160a01b031690565b6104676105cb565b600180546001600160a01b0319166001600160a01b03831690811790915560405133907faa3f731066a578e5f39b4215468d826cdd15373cbc0dfc9cb9bdc649718ef7da90600090a350565b6104bb6105cb565b6001600160a01b0381166105255760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61052e8161062a565b50565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b0381166105c65760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640161051c565b919050565b336105d4610450565b6001600160a01b0316146103fa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461052e57600080fd5b80356105c68161067a565b600060a082840312156106ac57600080fd5b50919050565b60008083601f8401126106c457600080fd5b5081356001600160401b038111156106db57600080fd5b6020830191508360208260071b85010111156106f657600080fd5b9250929050565b60008083601f84011261070f57600080fd5b5081356001600160401b0381111561072657600080fd5b6020830191508360208260051b85010111156106f657600080fd5b600080600080600080600080600060c08a8c03121561075f57600080fd5b6107688a61068f565b985061077660208b0161068f565b975060408a01356001600160401b038082111561079257600080fd5b61079e8d838e0161069a565b985060608c01359150808211156107b457600080fd5b6107c08d838e016106b2565b909850965060808c01359150808211156107d957600080fd5b6107e58d838e016106fd565b909650945060a08c01359150808211156107fe57600080fd5b5061080b8c828d016106fd565b915080935050809150509295985092959850929598565b6001600160401b03858116825284166020808301919091526001600160801b03841660408301526080606083018190528351908301819052600091825b8281101561087b5785810182015185820160a00152810161085f565b5050600060a0828501015260a0601f19601f83011684010191505095945050505050565b6000602082840312156108b157600080fd5b81356001600160401b038111156108c757600080fd5b8201608081850312156108d957600080fd5b9392505050565b80356001600160601b03811681146105c657600080fd5b60006020828403121561090957600080fd5b6108d9826108e0565b60006020828403121561092457600080fd5b81356108d98161067a565b60006001600160601b038281166002600160601b0319810161096157634e487b7160e01b600052601160045260246000fd5b6001019392505050565b803580151581146105c657600080fd5b6000808335601e1984360301811261099257600080fd5b83016020810192503590506001600160401b038111156109b157600080fd5b8036038213156106f657600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235607e198336030181126109ff57600080fd5b90910192915050565b60008235603e198336030181126109ff57600080fd5b6000808335601e19843603018112610a3557600080fd5b83016020810192503590506001600160401b03811115610a5457600080fd5b8060051b36038213156106f657600080fd5b8035600581106105c657600080fd5b60058110610a9357634e487b7160e01b600052602160045260246000fd5b9052565b81835260006020808501808196508560051b81019150846000805b88811015610bd0578385038a52823560de19893603018112610ad2578283fd5b880160e0610ae0828061097b565b828952610af0838a0182846109c0565b9250505087820135610b018161067a565b6001600160a01b0316888801526040610b1c8382018461097b565b898403838b0152610b2e8482846109c0565b93505050506060610b40818401610a66565b610b4c828a0182610a75565b50506080610b5c8184018461097b565b898403838b0152610b6e8482846109c0565b935050505060a0610b818184018461097b565b898403838b0152610b938482846109c0565b935050505060c0610ba68184018461097b565b9350888303828a0152610bba8385836109c0565b9d8a019d98505050938701935050600101610ab2565b509298975050505050505050565b6000610bea8283610a1e565b60408552610bfc604086018284610a97565b915050610c0c6020840184610a1e565b8583036020870152610c1f838284610a97565b9695505050505050565b6000610c35828361097b565b60808552610c476080860182846109c0565b915050610c57602084018461097b565b8583036020870152610c6a8382846109c0565b92505050610c7b6040840184610a08565b8482036040860152610c8d8282610bde565b915050610c9d6060840184610a08565b8482036060860152610caf8282610bde565b95945050505050565b6001600160401b038116811461052e57600080fd5b6001600160801b038116811461052e57600080fd5b8183526000602080850194508260005b85811015610d70578135610d058161067a565b6001600160a01b0316875281830135610d1d81610cb8565b6001600160401b039081168885015260409083820135610d3c81610cb8565b1690880152606082810135610d5081610ccd565b6001600160801b0316908801526080968701969190910190600101610cf2565b509495945050505050565b8183526000602080850194508260005b85811015610d70578135610d9e8161067a565b6001600160a01b031687529582019590820190600101610d8b565b8183526000602080850194508260005b85811015610d70576001600160601b03610de2836108e0565b1687529582019590820190600101610dc9565b6001600160a01b038a811682528916602082015260c060408201526000610e1b8961096b565b151560c0830152610e2e60208a0161096b565b151560e083015260408901356001600160f01b038116808214610e5057600080fd5b61010084015250610e6460608a018a61097b565b60a0610120850152610e7b610160850182846109c0565b915050610e8b60808b018b6109e9565b83820360bf1901610140850152610ea28282610c29565b9150508281036060840152610eb881898b610ce2565b90508281036080840152610ecd818789610d7b565b905082810360a0840152610ee2818587610db9565b9c9b505050505050505050505050565b600181811c90821680610f0657607f821691505b6020821081036106ac57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f821115610f8657600081815260208120601f850160051c81016020861015610f635750805b601f850160051c820191505b81811015610f8257828155600101610f6f565b5050505b505050565b6001600160401b03831115610fa257610fa2610f26565b610fb683610fb08354610ef2565b83610f3c565b6000601f841160018114610fea5760008515610fd25750838201355b600019600387901b1c1916600186901b178355611044565b600083815260209020601f19861690835b8281101561101b5786850135825560209485019460019092019101610ffb565b50868210156110385760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b813561105681610cb8565b81546001600160401b039182166001600160401b03198216811784559190602085013561108281610cb8565b600160401b600160801b03604091821b166001600160801b031992831685178117865590860135916110b383610ccd565b808360801b1685831717865550505060608401359150601e198436030182126110db57600080fd5b908301908135818111156110ee57600080fd5b60208301925080360383131561110357600080fd5b611044818460018701610f8b565b602081526000823561112281610cb8565b6001600160401b039081166020848101919091528401359061114382610cb8565b1660408381019190915283013561115981610ccd565b6001600160801b03166060838101919091526111779084018461097b565b608080850152610caf60a0850182846109c056fea2646970667358221220cd7d5b3295924fc38be2fe6c4d2f6a22958318f77195d982a83af0ae4c97f8b464736f6c63430008140033";

type FxIssuerFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FxIssuerFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FxIssuerFactory__factory extends ContractFactory {
  constructor(...args: FxIssuerFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _implementation: string,
    overrides?: Overrides & { from?: string }
  ): Promise<FxIssuerFactory> {
    return super.deploy(
      _implementation,
      overrides || {}
    ) as Promise<FxIssuerFactory>;
  }
  override getDeployTransaction(
    _implementation: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_implementation, overrides || {});
  }
  override attach(address: string): FxIssuerFactory {
    return super.attach(address) as FxIssuerFactory;
  }
  override connect(signer: Signer): FxIssuerFactory__factory {
    return super.connect(signer) as FxIssuerFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FxIssuerFactoryInterface {
    return new utils.Interface(_abi) as FxIssuerFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FxIssuerFactory {
    return new Contract(address, _abi, signerOrProvider) as FxIssuerFactory;
  }
}
