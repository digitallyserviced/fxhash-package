/* eslint-disable */

export const AllTypesProps: Record<string,any> = {
	Account:{
		authoredProjects:{
			distinct_on:"Project_select_column",
			order_by:"Project_order_by",
			where:"Project_bool_exp"
		},
		authoredProjects_aggregate:{
			distinct_on:"Project_select_column",
			order_by:"Project_order_by",
			where:"Project_bool_exp"
		},
		curatedProjects:{
			distinct_on:"Project_select_column",
			order_by:"Project_order_by",
			where:"Project_bool_exp"
		},
		curatedProjects_aggregate:{
			distinct_on:"Project_select_column",
			order_by:"Project_order_by",
			where:"Project_bool_exp"
		},
		profile:{
			distinct_on:"Profile_select_column",
			order_by:"Profile_order_by",
			where:"Profile_bool_exp"
		},
		profile_aggregate:{
			distinct_on:"Profile_select_column",
			order_by:"Profile_order_by",
			where:"Profile_bool_exp"
		},
		wallets:{
			distinct_on:"Wallet_select_column",
			order_by:"Wallet_order_by",
			where:"Wallet_bool_exp"
		},
		wallets_aggregate:{
			distinct_on:"Wallet_select_column",
			order_by:"Wallet_order_by",
			where:"Wallet_bool_exp"
		}
	},
	AccountStatus: `scalar.AccountStatus` as const,
	AccountStatus_comparison_exp:{
		_eq:"AccountStatus",
		_gt:"AccountStatus",
		_gte:"AccountStatus",
		_in:"AccountStatus",
		_lt:"AccountStatus",
		_lte:"AccountStatus",
		_neq:"AccountStatus",
		_nin:"AccountStatus"
	},
	Account_aggregate_fields:{
		count:{
			columns:"Account_select_column"
		}
	},
	Account_bool_exp:{
		_and:"Account_bool_exp",
		_not:"Account_bool_exp",
		_or:"Account_bool_exp",
		authoredProjects:"Project_bool_exp",
		authoredProjects_aggregate:"Project_aggregate_bool_exp",
		curatedProjects:"Project_bool_exp",
		curatedProjects_aggregate:"Project_aggregate_bool_exp",
		id:"uuid_comparison_exp",
		profile:"Profile_bool_exp",
		profile_aggregate:"Profile_aggregate_bool_exp",
		roles:"_AccountRoles_comparison_exp",
		status:"AccountStatus_comparison_exp",
		username:"String_comparison_exp",
		wallets:"Wallet_bool_exp",
		wallets_aggregate:"Wallet_aggregate_bool_exp"
	},
	Account_constraint: "enum" as const,
	Account_insert_input:{
		authoredProjects:"Project_arr_rel_insert_input",
		curatedProjects:"Project_arr_rel_insert_input",
		id:"uuid",
		profile:"Profile_arr_rel_insert_input",
		roles:"_AccountRoles",
		status:"AccountStatus",
		wallets:"Wallet_arr_rel_insert_input"
	},
	Account_obj_rel_insert_input:{
		data:"Account_insert_input",
		on_conflict:"Account_on_conflict"
	},
	Account_on_conflict:{
		constraint:"Account_constraint",
		update_columns:"Account_update_column",
		where:"Account_bool_exp"
	},
	Account_order_by:{
		authoredProjects_aggregate:"Project_aggregate_order_by",
		curatedProjects_aggregate:"Project_aggregate_order_by",
		id:"order_by",
		profile_aggregate:"Profile_aggregate_order_by",
		roles:"order_by",
		status:"order_by",
		username:"order_by",
		wallets_aggregate:"Wallet_aggregate_order_by"
	},
	Account_pk_columns_input:{
		id:"uuid"
	},
	Account_select_column: "enum" as const,
	Account_set_input:{
		id:"uuid",
		roles:"_AccountRoles",
		status:"AccountStatus"
	},
	Account_stream_cursor_input:{
		initial_value:"Account_stream_cursor_value_input",
		ordering:"cursor_ordering"
	},
	Account_stream_cursor_value_input:{
		id:"uuid",
		roles:"_AccountRoles",
		status:"AccountStatus"
	},
	Account_update_column: "enum" as const,
	Account_updates:{
		_set:"Account_set_input",
		where:"Account_bool_exp"
	},
	BlockchainNetwork: `scalar.BlockchainNetwork` as const,
	BlockchainNetwork_comparison_exp:{
		_eq:"BlockchainNetwork",
		_gt:"BlockchainNetwork",
		_gte:"BlockchainNetwork",
		_in:"BlockchainNetwork",
		_lt:"BlockchainNetwork",
		_lte:"BlockchainNetwork",
		_neq:"BlockchainNetwork",
		_nin:"BlockchainNetwork"
	},
	Int_comparison_exp:{

	},
	Media:{
		project:{
			distinct_on:"ProjectMedia_select_column",
			order_by:"ProjectMedia_order_by",
			where:"ProjectMedia_bool_exp"
		},
		project_aggregate:{
			distinct_on:"ProjectMedia_select_column",
			order_by:"ProjectMedia_order_by",
			where:"ProjectMedia_bool_exp"
		}
	},
	Media_aggregate_fields:{
		count:{
			columns:"Media_select_column"
		}
	},
	Media_bool_exp:{
		_and:"Media_bool_exp",
		_not:"Media_bool_exp",
		_or:"Media_bool_exp",
		bucketId:"String_comparison_exp",
		createdAt:"timestamp_comparison_exp",
		etag:"String_comparison_exp",
		id:"uuid_comparison_exp",
		name:"String_comparison_exp",
		project:"ProjectMedia_bool_exp",
		project_aggregate:"ProjectMedia_aggregate_bool_exp",
		s3key:"String_comparison_exp",
		size:"Int_comparison_exp",
		updatedAt:"timestamp_comparison_exp",
		uploader:"Account_bool_exp",
		uploaderId:"uuid_comparison_exp"
	},
	Media_constraint: "enum" as const,
	Media_inc_input:{

	},
	Media_insert_input:{
		createdAt:"timestamp",
		id:"uuid",
		project:"ProjectMedia_arr_rel_insert_input",
		updatedAt:"timestamp",
		uploader:"Account_obj_rel_insert_input",
		uploaderId:"uuid"
	},
	Media_obj_rel_insert_input:{
		data:"Media_insert_input",
		on_conflict:"Media_on_conflict"
	},
	Media_on_conflict:{
		constraint:"Media_constraint",
		update_columns:"Media_update_column",
		where:"Media_bool_exp"
	},
	Media_order_by:{
		bucketId:"order_by",
		createdAt:"order_by",
		etag:"order_by",
		id:"order_by",
		name:"order_by",
		project_aggregate:"ProjectMedia_aggregate_order_by",
		s3key:"order_by",
		size:"order_by",
		updatedAt:"order_by",
		uploader:"Account_order_by",
		uploaderId:"order_by"
	},
	Media_pk_columns_input:{
		id:"uuid"
	},
	Media_select_column: "enum" as const,
	Media_set_input:{
		createdAt:"timestamp",
		id:"uuid",
		updatedAt:"timestamp",
		uploaderId:"uuid"
	},
	Media_stream_cursor_input:{
		initial_value:"Media_stream_cursor_value_input",
		ordering:"cursor_ordering"
	},
	Media_stream_cursor_value_input:{
		createdAt:"timestamp",
		id:"uuid",
		updatedAt:"timestamp",
		uploaderId:"uuid"
	},
	Media_update_column: "enum" as const,
	Media_updates:{
		_inc:"Media_inc_input",
		_set:"Media_set_input",
		where:"Media_bool_exp"
	},
	Profile_aggregate_bool_exp:{
		count:"Profile_aggregate_bool_exp_count"
	},
	Profile_aggregate_bool_exp_count:{
		arguments:"Profile_select_column",
		filter:"Profile_bool_exp",
		predicate:"Int_comparison_exp"
	},
	Profile_aggregate_fields:{
		count:{
			columns:"Profile_select_column"
		}
	},
	Profile_aggregate_order_by:{
		count:"order_by",
		max:"Profile_max_order_by",
		min:"Profile_min_order_by"
	},
	Profile_arr_rel_insert_input:{
		data:"Profile_insert_input",
		on_conflict:"Profile_on_conflict"
	},
	Profile_bool_exp:{
		_and:"Profile_bool_exp",
		_not:"Profile_bool_exp",
		_or:"Profile_bool_exp",
		accountId:"uuid_comparison_exp",
		description:"String_comparison_exp",
		instagram:"String_comparison_exp",
		picture:"String_comparison_exp",
		twitter:"String_comparison_exp",
		website:"String_comparison_exp"
	},
	Profile_constraint: "enum" as const,
	Profile_insert_input:{
		accountId:"uuid"
	},
	Profile_max_order_by:{
		accountId:"order_by",
		description:"order_by",
		instagram:"order_by",
		picture:"order_by",
		twitter:"order_by",
		website:"order_by"
	},
	Profile_min_order_by:{
		accountId:"order_by",
		description:"order_by",
		instagram:"order_by",
		picture:"order_by",
		twitter:"order_by",
		website:"order_by"
	},
	Profile_on_conflict:{
		constraint:"Profile_constraint",
		update_columns:"Profile_update_column",
		where:"Profile_bool_exp"
	},
	Profile_order_by:{
		accountId:"order_by",
		description:"order_by",
		instagram:"order_by",
		picture:"order_by",
		twitter:"order_by",
		website:"order_by"
	},
	Profile_pk_columns_input:{
		accountId:"uuid"
	},
	Profile_select_column: "enum" as const,
	Profile_set_input:{
		accountId:"uuid"
	},
	Profile_stream_cursor_input:{
		initial_value:"Profile_stream_cursor_value_input",
		ordering:"cursor_ordering"
	},
	Profile_stream_cursor_value_input:{
		accountId:"uuid"
	},
	Profile_update_column: "enum" as const,
	Profile_updates:{
		_set:"Profile_set_input",
		where:"Profile_bool_exp"
	},
	Project:{
		pricing:{

		},
		projectMedias:{
			distinct_on:"ProjectMedia_select_column",
			order_by:"ProjectMedia_order_by",
			where:"ProjectMedia_bool_exp"
		},
		projectMedias_aggregate:{
			distinct_on:"ProjectMedia_select_column",
			order_by:"ProjectMedia_order_by",
			where:"ProjectMedia_bool_exp"
		}
	},
	ProjectMedia_aggregate_bool_exp:{
		count:"ProjectMedia_aggregate_bool_exp_count"
	},
	ProjectMedia_aggregate_bool_exp_count:{
		arguments:"ProjectMedia_select_column",
		filter:"ProjectMedia_bool_exp",
		predicate:"Int_comparison_exp"
	},
	ProjectMedia_aggregate_fields:{
		count:{
			columns:"ProjectMedia_select_column"
		}
	},
	ProjectMedia_aggregate_order_by:{
		avg:"ProjectMedia_avg_order_by",
		count:"order_by",
		max:"ProjectMedia_max_order_by",
		min:"ProjectMedia_min_order_by",
		stddev:"ProjectMedia_stddev_order_by",
		stddev_pop:"ProjectMedia_stddev_pop_order_by",
		stddev_samp:"ProjectMedia_stddev_samp_order_by",
		sum:"ProjectMedia_sum_order_by",
		var_pop:"ProjectMedia_var_pop_order_by",
		var_samp:"ProjectMedia_var_samp_order_by",
		variance:"ProjectMedia_variance_order_by"
	},
	ProjectMedia_arr_rel_insert_input:{
		data:"ProjectMedia_insert_input",
		on_conflict:"ProjectMedia_on_conflict"
	},
	ProjectMedia_avg_order_by:{
		index:"order_by"
	},
	ProjectMedia_bool_exp:{
		_and:"ProjectMedia_bool_exp",
		_not:"ProjectMedia_bool_exp",
		_or:"ProjectMedia_bool_exp",
		index:"smallint_comparison_exp",
		media:"Media_bool_exp",
		mediaId:"uuid_comparison_exp",
		project:"Project_bool_exp",
		projectId:"uuid_comparison_exp"
	},
	ProjectMedia_constraint: "enum" as const,
	ProjectMedia_inc_input:{
		index:"smallint"
	},
	ProjectMedia_insert_input:{
		index:"smallint",
		media:"Media_obj_rel_insert_input",
		mediaId:"uuid",
		project:"Project_obj_rel_insert_input",
		projectId:"uuid"
	},
	ProjectMedia_max_order_by:{
		index:"order_by",
		mediaId:"order_by",
		projectId:"order_by"
	},
	ProjectMedia_min_order_by:{
		index:"order_by",
		mediaId:"order_by",
		projectId:"order_by"
	},
	ProjectMedia_on_conflict:{
		constraint:"ProjectMedia_constraint",
		update_columns:"ProjectMedia_update_column",
		where:"ProjectMedia_bool_exp"
	},
	ProjectMedia_order_by:{
		index:"order_by",
		media:"Media_order_by",
		mediaId:"order_by",
		project:"Project_order_by",
		projectId:"order_by"
	},
	ProjectMedia_select_column: "enum" as const,
	ProjectMedia_set_input:{
		index:"smallint",
		mediaId:"uuid",
		projectId:"uuid"
	},
	ProjectMedia_stddev_order_by:{
		index:"order_by"
	},
	ProjectMedia_stddev_pop_order_by:{
		index:"order_by"
	},
	ProjectMedia_stddev_samp_order_by:{
		index:"order_by"
	},
	ProjectMedia_stream_cursor_input:{
		initial_value:"ProjectMedia_stream_cursor_value_input",
		ordering:"cursor_ordering"
	},
	ProjectMedia_stream_cursor_value_input:{
		index:"smallint",
		mediaId:"uuid",
		projectId:"uuid"
	},
	ProjectMedia_sum_order_by:{
		index:"order_by"
	},
	ProjectMedia_update_column: "enum" as const,
	ProjectMedia_updates:{
		_inc:"ProjectMedia_inc_input",
		_set:"ProjectMedia_set_input",
		where:"ProjectMedia_bool_exp"
	},
	ProjectMedia_var_pop_order_by:{
		index:"order_by"
	},
	ProjectMedia_var_samp_order_by:{
		index:"order_by"
	},
	ProjectMedia_variance_order_by:{
		index:"order_by"
	},
	ProjectState: `scalar.ProjectState` as const,
	ProjectState_comparison_exp:{
		_eq:"ProjectState",
		_gt:"ProjectState",
		_gte:"ProjectState",
		_in:"ProjectState",
		_lt:"ProjectState",
		_lte:"ProjectState",
		_neq:"ProjectState",
		_nin:"ProjectState"
	},
	Project_aggregate_bool_exp:{
		count:"Project_aggregate_bool_exp_count"
	},
	Project_aggregate_bool_exp_count:{
		arguments:"Project_select_column",
		filter:"Project_bool_exp",
		predicate:"Int_comparison_exp"
	},
	Project_aggregate_fields:{
		count:{
			columns:"Project_select_column"
		}
	},
	Project_aggregate_order_by:{
		count:"order_by",
		max:"Project_max_order_by",
		min:"Project_min_order_by"
	},
	Project_append_input:{
		pricing:"jsonb"
	},
	Project_arr_rel_insert_input:{
		data:"Project_insert_input",
		on_conflict:"Project_on_conflict"
	},
	Project_bool_exp:{
		_and:"Project_bool_exp",
		_not:"Project_bool_exp",
		_or:"Project_bool_exp",
		author:"Account_bool_exp",
		authorId:"uuid_comparison_exp",
		blockchain:"BlockchainNetwork_comparison_exp",
		createdAt:"timestamp_comparison_exp",
		curator:"Account_bool_exp",
		curatorId:"uuid_comparison_exp",
		description:"String_comparison_exp",
		id:"uuid_comparison_exp",
		pricing:"jsonb_comparison_exp",
		projectMedias:"ProjectMedia_bool_exp",
		projectMedias_aggregate:"ProjectMedia_aggregate_bool_exp",
		releaseAt:"timestamp_comparison_exp",
		state:"ProjectState_comparison_exp",
		storage:"Storage_comparison_exp",
		title:"String_comparison_exp",
		updatedAt:"timestamp_comparison_exp"
	},
	Project_constraint: "enum" as const,
	Project_delete_at_path_input:{

	},
	Project_delete_elem_input:{

	},
	Project_delete_key_input:{

	},
	Project_insert_input:{
		author:"Account_obj_rel_insert_input",
		authorId:"uuid",
		blockchain:"BlockchainNetwork",
		createdAt:"timestamp",
		curator:"Account_obj_rel_insert_input",
		curatorId:"uuid",
		id:"uuid",
		pricing:"jsonb",
		projectMedias:"ProjectMedia_arr_rel_insert_input",
		releaseAt:"timestamp",
		state:"ProjectState",
		storage:"Storage",
		updatedAt:"timestamp"
	},
	Project_max_order_by:{
		authorId:"order_by",
		blockchain:"order_by",
		createdAt:"order_by",
		curatorId:"order_by",
		description:"order_by",
		id:"order_by",
		releaseAt:"order_by",
		state:"order_by",
		storage:"order_by",
		title:"order_by",
		updatedAt:"order_by"
	},
	Project_min_order_by:{
		authorId:"order_by",
		blockchain:"order_by",
		createdAt:"order_by",
		curatorId:"order_by",
		description:"order_by",
		id:"order_by",
		releaseAt:"order_by",
		state:"order_by",
		storage:"order_by",
		title:"order_by",
		updatedAt:"order_by"
	},
	Project_obj_rel_insert_input:{
		data:"Project_insert_input",
		on_conflict:"Project_on_conflict"
	},
	Project_on_conflict:{
		constraint:"Project_constraint",
		update_columns:"Project_update_column",
		where:"Project_bool_exp"
	},
	Project_order_by:{
		author:"Account_order_by",
		authorId:"order_by",
		blockchain:"order_by",
		createdAt:"order_by",
		curator:"Account_order_by",
		curatorId:"order_by",
		description:"order_by",
		id:"order_by",
		pricing:"order_by",
		projectMedias_aggregate:"ProjectMedia_aggregate_order_by",
		releaseAt:"order_by",
		state:"order_by",
		storage:"order_by",
		title:"order_by",
		updatedAt:"order_by"
	},
	Project_pk_columns_input:{
		id:"uuid"
	},
	Project_prepend_input:{
		pricing:"jsonb"
	},
	Project_select_column: "enum" as const,
	Project_set_input:{
		authorId:"uuid",
		blockchain:"BlockchainNetwork",
		createdAt:"timestamp",
		curatorId:"uuid",
		id:"uuid",
		pricing:"jsonb",
		releaseAt:"timestamp",
		state:"ProjectState",
		storage:"Storage",
		updatedAt:"timestamp"
	},
	Project_stream_cursor_input:{
		initial_value:"Project_stream_cursor_value_input",
		ordering:"cursor_ordering"
	},
	Project_stream_cursor_value_input:{
		authorId:"uuid",
		blockchain:"BlockchainNetwork",
		createdAt:"timestamp",
		curatorId:"uuid",
		id:"uuid",
		pricing:"jsonb",
		releaseAt:"timestamp",
		state:"ProjectState",
		storage:"Storage",
		updatedAt:"timestamp"
	},
	Project_update_column: "enum" as const,
	Project_updates:{
		_append:"Project_append_input",
		_delete_at_path:"Project_delete_at_path_input",
		_delete_elem:"Project_delete_elem_input",
		_delete_key:"Project_delete_key_input",
		_prepend:"Project_prepend_input",
		_set:"Project_set_input",
		where:"Project_bool_exp"
	},
	Storage: `scalar.Storage` as const,
	Storage_comparison_exp:{
		_eq:"Storage",
		_gt:"Storage",
		_gte:"Storage",
		_in:"Storage",
		_lt:"Storage",
		_lte:"Storage",
		_neq:"Storage",
		_nin:"Storage"
	},
	String_comparison_exp:{

	},
	Wallet_aggregate_bool_exp:{
		count:"Wallet_aggregate_bool_exp_count"
	},
	Wallet_aggregate_bool_exp_count:{
		arguments:"Wallet_select_column",
		filter:"Wallet_bool_exp",
		predicate:"Int_comparison_exp"
	},
	Wallet_aggregate_fields:{
		count:{
			columns:"Wallet_select_column"
		}
	},
	Wallet_aggregate_order_by:{
		count:"order_by",
		max:"Wallet_max_order_by",
		min:"Wallet_min_order_by"
	},
	Wallet_arr_rel_insert_input:{
		data:"Wallet_insert_input",
		on_conflict:"Wallet_on_conflict"
	},
	Wallet_bool_exp:{
		_and:"Wallet_bool_exp",
		_not:"Wallet_bool_exp",
		_or:"Wallet_bool_exp",
		accountId:"uuid_comparison_exp",
		address:"String_comparison_exp",
		network:"BlockchainNetwork_comparison_exp"
	},
	Wallet_constraint: "enum" as const,
	Wallet_insert_input:{
		accountId:"uuid",
		network:"BlockchainNetwork"
	},
	Wallet_max_order_by:{
		accountId:"order_by",
		address:"order_by",
		network:"order_by"
	},
	Wallet_min_order_by:{
		accountId:"order_by",
		address:"order_by",
		network:"order_by"
	},
	Wallet_on_conflict:{
		constraint:"Wallet_constraint",
		update_columns:"Wallet_update_column",
		where:"Wallet_bool_exp"
	},
	Wallet_order_by:{
		accountId:"order_by",
		address:"order_by",
		network:"order_by"
	},
	Wallet_pk_columns_input:{

	},
	Wallet_select_column: "enum" as const,
	Wallet_set_input:{
		accountId:"uuid",
		network:"BlockchainNetwork"
	},
	Wallet_stream_cursor_input:{
		initial_value:"Wallet_stream_cursor_value_input",
		ordering:"cursor_ordering"
	},
	Wallet_stream_cursor_value_input:{
		accountId:"uuid",
		network:"BlockchainNetwork"
	},
	Wallet_update_column: "enum" as const,
	Wallet_updates:{
		_set:"Wallet_set_input",
		where:"Wallet_bool_exp"
	},
	_AccountRoles: `scalar._AccountRoles` as const,
	_AccountRoles_comparison_exp:{
		_eq:"_AccountRoles",
		_gt:"_AccountRoles",
		_gte:"_AccountRoles",
		_in:"_AccountRoles",
		_lt:"_AccountRoles",
		_lte:"_AccountRoles",
		_neq:"_AccountRoles",
		_nin:"_AccountRoles"
	},
	_prisma_migrations_aggregate_fields:{
		count:{
			columns:"_prisma_migrations_select_column"
		}
	},
	_prisma_migrations_bool_exp:{
		_and:"_prisma_migrations_bool_exp",
		_not:"_prisma_migrations_bool_exp",
		_or:"_prisma_migrations_bool_exp",
		applied_steps_count:"Int_comparison_exp",
		checksum:"String_comparison_exp",
		finished_at:"timestamptz_comparison_exp",
		id:"String_comparison_exp",
		logs:"String_comparison_exp",
		migration_name:"String_comparison_exp",
		rolled_back_at:"timestamptz_comparison_exp",
		started_at:"timestamptz_comparison_exp"
	},
	_prisma_migrations_constraint: "enum" as const,
	_prisma_migrations_inc_input:{

	},
	_prisma_migrations_insert_input:{
		finished_at:"timestamptz",
		rolled_back_at:"timestamptz",
		started_at:"timestamptz"
	},
	_prisma_migrations_on_conflict:{
		constraint:"_prisma_migrations_constraint",
		update_columns:"_prisma_migrations_update_column",
		where:"_prisma_migrations_bool_exp"
	},
	_prisma_migrations_order_by:{
		applied_steps_count:"order_by",
		checksum:"order_by",
		finished_at:"order_by",
		id:"order_by",
		logs:"order_by",
		migration_name:"order_by",
		rolled_back_at:"order_by",
		started_at:"order_by"
	},
	_prisma_migrations_pk_columns_input:{

	},
	_prisma_migrations_select_column: "enum" as const,
	_prisma_migrations_set_input:{
		finished_at:"timestamptz",
		rolled_back_at:"timestamptz",
		started_at:"timestamptz"
	},
	_prisma_migrations_stream_cursor_input:{
		initial_value:"_prisma_migrations_stream_cursor_value_input",
		ordering:"cursor_ordering"
	},
	_prisma_migrations_stream_cursor_value_input:{
		finished_at:"timestamptz",
		rolled_back_at:"timestamptz",
		started_at:"timestamptz"
	},
	_prisma_migrations_update_column: "enum" as const,
	_prisma_migrations_updates:{
		_inc:"_prisma_migrations_inc_input",
		_set:"_prisma_migrations_set_input",
		where:"_prisma_migrations_bool_exp"
	},
	cursor_ordering: "enum" as const,
	jsonb: `scalar.jsonb` as const,
	jsonb_cast_exp:{
		String:"String_comparison_exp"
	},
	jsonb_comparison_exp:{
		_cast:"jsonb_cast_exp",
		_contained_in:"jsonb",
		_contains:"jsonb",
		_eq:"jsonb",
		_gt:"jsonb",
		_gte:"jsonb",
		_in:"jsonb",
		_lt:"jsonb",
		_lte:"jsonb",
		_neq:"jsonb",
		_nin:"jsonb"
	},
	mutation_root:{
		delete_Account:{
			where:"Account_bool_exp"
		},
		delete_Account_by_pk:{
			id:"uuid"
		},
		delete_Media:{
			where:"Media_bool_exp"
		},
		delete_Media_by_pk:{
			id:"uuid"
		},
		delete_Profile:{
			where:"Profile_bool_exp"
		},
		delete_Profile_by_pk:{
			accountId:"uuid"
		},
		delete_Project:{
			where:"Project_bool_exp"
		},
		delete_ProjectMedia:{
			where:"ProjectMedia_bool_exp"
		},
		delete_Project_by_pk:{
			id:"uuid"
		},
		delete_Wallet:{
			where:"Wallet_bool_exp"
		},
		delete_Wallet_by_pk:{

		},
		delete__prisma_migrations:{
			where:"_prisma_migrations_bool_exp"
		},
		delete__prisma_migrations_by_pk:{

		},
		insert_Account:{
			objects:"Account_insert_input",
			on_conflict:"Account_on_conflict"
		},
		insert_Account_one:{
			object:"Account_insert_input",
			on_conflict:"Account_on_conflict"
		},
		insert_Media:{
			objects:"Media_insert_input",
			on_conflict:"Media_on_conflict"
		},
		insert_Media_one:{
			object:"Media_insert_input",
			on_conflict:"Media_on_conflict"
		},
		insert_Profile:{
			objects:"Profile_insert_input",
			on_conflict:"Profile_on_conflict"
		},
		insert_Profile_one:{
			object:"Profile_insert_input",
			on_conflict:"Profile_on_conflict"
		},
		insert_Project:{
			objects:"Project_insert_input",
			on_conflict:"Project_on_conflict"
		},
		insert_ProjectMedia:{
			objects:"ProjectMedia_insert_input",
			on_conflict:"ProjectMedia_on_conflict"
		},
		insert_ProjectMedia_one:{
			object:"ProjectMedia_insert_input",
			on_conflict:"ProjectMedia_on_conflict"
		},
		insert_Project_one:{
			object:"Project_insert_input",
			on_conflict:"Project_on_conflict"
		},
		insert_Wallet:{
			objects:"Wallet_insert_input",
			on_conflict:"Wallet_on_conflict"
		},
		insert_Wallet_one:{
			object:"Wallet_insert_input",
			on_conflict:"Wallet_on_conflict"
		},
		insert__prisma_migrations:{
			objects:"_prisma_migrations_insert_input",
			on_conflict:"_prisma_migrations_on_conflict"
		},
		insert__prisma_migrations_one:{
			object:"_prisma_migrations_insert_input",
			on_conflict:"_prisma_migrations_on_conflict"
		},
		update_Account:{
			_set:"Account_set_input",
			where:"Account_bool_exp"
		},
		update_Account_by_pk:{
			_set:"Account_set_input",
			pk_columns:"Account_pk_columns_input"
		},
		update_Account_many:{
			updates:"Account_updates"
		},
		update_Media:{
			_inc:"Media_inc_input",
			_set:"Media_set_input",
			where:"Media_bool_exp"
		},
		update_Media_by_pk:{
			_inc:"Media_inc_input",
			_set:"Media_set_input",
			pk_columns:"Media_pk_columns_input"
		},
		update_Media_many:{
			updates:"Media_updates"
		},
		update_Profile:{
			_set:"Profile_set_input",
			where:"Profile_bool_exp"
		},
		update_Profile_by_pk:{
			_set:"Profile_set_input",
			pk_columns:"Profile_pk_columns_input"
		},
		update_Profile_many:{
			updates:"Profile_updates"
		},
		update_Project:{
			_append:"Project_append_input",
			_delete_at_path:"Project_delete_at_path_input",
			_delete_elem:"Project_delete_elem_input",
			_delete_key:"Project_delete_key_input",
			_prepend:"Project_prepend_input",
			_set:"Project_set_input",
			where:"Project_bool_exp"
		},
		update_ProjectMedia:{
			_inc:"ProjectMedia_inc_input",
			_set:"ProjectMedia_set_input",
			where:"ProjectMedia_bool_exp"
		},
		update_ProjectMedia_many:{
			updates:"ProjectMedia_updates"
		},
		update_Project_by_pk:{
			_append:"Project_append_input",
			_delete_at_path:"Project_delete_at_path_input",
			_delete_elem:"Project_delete_elem_input",
			_delete_key:"Project_delete_key_input",
			_prepend:"Project_prepend_input",
			_set:"Project_set_input",
			pk_columns:"Project_pk_columns_input"
		},
		update_Project_many:{
			updates:"Project_updates"
		},
		update_Wallet:{
			_set:"Wallet_set_input",
			where:"Wallet_bool_exp"
		},
		update_Wallet_by_pk:{
			_set:"Wallet_set_input",
			pk_columns:"Wallet_pk_columns_input"
		},
		update_Wallet_many:{
			updates:"Wallet_updates"
		},
		update__prisma_migrations:{
			_inc:"_prisma_migrations_inc_input",
			_set:"_prisma_migrations_set_input",
			where:"_prisma_migrations_bool_exp"
		},
		update__prisma_migrations_by_pk:{
			_inc:"_prisma_migrations_inc_input",
			_set:"_prisma_migrations_set_input",
			pk_columns:"_prisma_migrations_pk_columns_input"
		},
		update__prisma_migrations_many:{
			updates:"_prisma_migrations_updates"
		}
	},
	order_by: "enum" as const,
	query_root:{
		Account:{
			distinct_on:"Account_select_column",
			order_by:"Account_order_by",
			where:"Account_bool_exp"
		},
		Account_aggregate:{
			distinct_on:"Account_select_column",
			order_by:"Account_order_by",
			where:"Account_bool_exp"
		},
		Account_by_pk:{
			id:"uuid"
		},
		Media:{
			distinct_on:"Media_select_column",
			order_by:"Media_order_by",
			where:"Media_bool_exp"
		},
		Media_aggregate:{
			distinct_on:"Media_select_column",
			order_by:"Media_order_by",
			where:"Media_bool_exp"
		},
		Media_by_pk:{
			id:"uuid"
		},
		Profile:{
			distinct_on:"Profile_select_column",
			order_by:"Profile_order_by",
			where:"Profile_bool_exp"
		},
		Profile_aggregate:{
			distinct_on:"Profile_select_column",
			order_by:"Profile_order_by",
			where:"Profile_bool_exp"
		},
		Profile_by_pk:{
			accountId:"uuid"
		},
		Project:{
			distinct_on:"Project_select_column",
			order_by:"Project_order_by",
			where:"Project_bool_exp"
		},
		ProjectMedia:{
			distinct_on:"ProjectMedia_select_column",
			order_by:"ProjectMedia_order_by",
			where:"ProjectMedia_bool_exp"
		},
		ProjectMedia_aggregate:{
			distinct_on:"ProjectMedia_select_column",
			order_by:"ProjectMedia_order_by",
			where:"ProjectMedia_bool_exp"
		},
		Project_aggregate:{
			distinct_on:"Project_select_column",
			order_by:"Project_order_by",
			where:"Project_bool_exp"
		},
		Project_by_pk:{
			id:"uuid"
		},
		Wallet:{
			distinct_on:"Wallet_select_column",
			order_by:"Wallet_order_by",
			where:"Wallet_bool_exp"
		},
		Wallet_aggregate:{
			distinct_on:"Wallet_select_column",
			order_by:"Wallet_order_by",
			where:"Wallet_bool_exp"
		},
		Wallet_by_pk:{

		},
		_prisma_migrations:{
			distinct_on:"_prisma_migrations_select_column",
			order_by:"_prisma_migrations_order_by",
			where:"_prisma_migrations_bool_exp"
		},
		_prisma_migrations_aggregate:{
			distinct_on:"_prisma_migrations_select_column",
			order_by:"_prisma_migrations_order_by",
			where:"_prisma_migrations_bool_exp"
		},
		_prisma_migrations_by_pk:{

		},
		mediaFullUrl:{

		}
	},
	smallint: `scalar.smallint` as const,
	smallint_comparison_exp:{
		_eq:"smallint",
		_gt:"smallint",
		_gte:"smallint",
		_in:"smallint",
		_lt:"smallint",
		_lte:"smallint",
		_neq:"smallint",
		_nin:"smallint"
	},
	subscription_root:{
		Account:{
			distinct_on:"Account_select_column",
			order_by:"Account_order_by",
			where:"Account_bool_exp"
		},
		Account_aggregate:{
			distinct_on:"Account_select_column",
			order_by:"Account_order_by",
			where:"Account_bool_exp"
		},
		Account_by_pk:{
			id:"uuid"
		},
		Account_stream:{
			cursor:"Account_stream_cursor_input",
			where:"Account_bool_exp"
		},
		Media:{
			distinct_on:"Media_select_column",
			order_by:"Media_order_by",
			where:"Media_bool_exp"
		},
		Media_aggregate:{
			distinct_on:"Media_select_column",
			order_by:"Media_order_by",
			where:"Media_bool_exp"
		},
		Media_by_pk:{
			id:"uuid"
		},
		Media_stream:{
			cursor:"Media_stream_cursor_input",
			where:"Media_bool_exp"
		},
		Profile:{
			distinct_on:"Profile_select_column",
			order_by:"Profile_order_by",
			where:"Profile_bool_exp"
		},
		Profile_aggregate:{
			distinct_on:"Profile_select_column",
			order_by:"Profile_order_by",
			where:"Profile_bool_exp"
		},
		Profile_by_pk:{
			accountId:"uuid"
		},
		Profile_stream:{
			cursor:"Profile_stream_cursor_input",
			where:"Profile_bool_exp"
		},
		Project:{
			distinct_on:"Project_select_column",
			order_by:"Project_order_by",
			where:"Project_bool_exp"
		},
		ProjectMedia:{
			distinct_on:"ProjectMedia_select_column",
			order_by:"ProjectMedia_order_by",
			where:"ProjectMedia_bool_exp"
		},
		ProjectMedia_aggregate:{
			distinct_on:"ProjectMedia_select_column",
			order_by:"ProjectMedia_order_by",
			where:"ProjectMedia_bool_exp"
		},
		ProjectMedia_stream:{
			cursor:"ProjectMedia_stream_cursor_input",
			where:"ProjectMedia_bool_exp"
		},
		Project_aggregate:{
			distinct_on:"Project_select_column",
			order_by:"Project_order_by",
			where:"Project_bool_exp"
		},
		Project_by_pk:{
			id:"uuid"
		},
		Project_stream:{
			cursor:"Project_stream_cursor_input",
			where:"Project_bool_exp"
		},
		Wallet:{
			distinct_on:"Wallet_select_column",
			order_by:"Wallet_order_by",
			where:"Wallet_bool_exp"
		},
		Wallet_aggregate:{
			distinct_on:"Wallet_select_column",
			order_by:"Wallet_order_by",
			where:"Wallet_bool_exp"
		},
		Wallet_by_pk:{

		},
		Wallet_stream:{
			cursor:"Wallet_stream_cursor_input",
			where:"Wallet_bool_exp"
		},
		_prisma_migrations:{
			distinct_on:"_prisma_migrations_select_column",
			order_by:"_prisma_migrations_order_by",
			where:"_prisma_migrations_bool_exp"
		},
		_prisma_migrations_aggregate:{
			distinct_on:"_prisma_migrations_select_column",
			order_by:"_prisma_migrations_order_by",
			where:"_prisma_migrations_bool_exp"
		},
		_prisma_migrations_by_pk:{

		},
		_prisma_migrations_stream:{
			cursor:"_prisma_migrations_stream_cursor_input",
			where:"_prisma_migrations_bool_exp"
		}
	},
	timestamp: `scalar.timestamp` as const,
	timestamp_comparison_exp:{
		_eq:"timestamp",
		_gt:"timestamp",
		_gte:"timestamp",
		_in:"timestamp",
		_lt:"timestamp",
		_lte:"timestamp",
		_neq:"timestamp",
		_nin:"timestamp"
	},
	timestamptz: `scalar.timestamptz` as const,
	timestamptz_comparison_exp:{
		_eq:"timestamptz",
		_gt:"timestamptz",
		_gte:"timestamptz",
		_in:"timestamptz",
		_lt:"timestamptz",
		_lte:"timestamptz",
		_neq:"timestamptz",
		_nin:"timestamptz"
	},
	uuid: `scalar.uuid` as const,
	uuid_comparison_exp:{
		_eq:"uuid",
		_gt:"uuid",
		_gte:"uuid",
		_in:"uuid",
		_lt:"uuid",
		_lte:"uuid",
		_neq:"uuid",
		_nin:"uuid"
	}
}

export const ReturnTypes: Record<string,any> = {
	cached:{
		ttl:"Int",
		refresh:"Boolean"
	},
	Account:{
		authoredProjects:"Project",
		authoredProjects_aggregate:"Project_aggregate",
		curatedProjects:"Project",
		curatedProjects_aggregate:"Project_aggregate",
		id:"uuid",
		profile:"Profile",
		profile_aggregate:"Profile_aggregate",
		roles:"_AccountRoles",
		status:"AccountStatus",
		username:"String",
		wallets:"Wallet",
		wallets_aggregate:"Wallet_aggregate"
	},
	AccountStatus: `scalar.AccountStatus` as const,
	Account_aggregate:{
		aggregate:"Account_aggregate_fields",
		nodes:"Account"
	},
	Account_aggregate_fields:{
		count:"Int",
		max:"Account_max_fields",
		min:"Account_min_fields"
	},
	Account_max_fields:{
		id:"uuid",
		status:"AccountStatus",
		username:"String"
	},
	Account_min_fields:{
		id:"uuid",
		status:"AccountStatus",
		username:"String"
	},
	Account_mutation_response:{
		affected_rows:"Int",
		returning:"Account"
	},
	BlockchainNetwork: `scalar.BlockchainNetwork` as const,
	Media:{
		bucketId:"String",
		createdAt:"timestamp",
		etag:"String",
		id:"uuid",
		name:"String",
		project:"ProjectMedia",
		project_aggregate:"ProjectMedia_aggregate",
		s3key:"String",
		size:"Int",
		updatedAt:"timestamp",
		uploader:"Account",
		uploaderId:"uuid",
		url:"String"
	},
	Media_aggregate:{
		aggregate:"Media_aggregate_fields",
		nodes:"Media"
	},
	Media_aggregate_fields:{
		avg:"Media_avg_fields",
		count:"Int",
		max:"Media_max_fields",
		min:"Media_min_fields",
		stddev:"Media_stddev_fields",
		stddev_pop:"Media_stddev_pop_fields",
		stddev_samp:"Media_stddev_samp_fields",
		sum:"Media_sum_fields",
		var_pop:"Media_var_pop_fields",
		var_samp:"Media_var_samp_fields",
		variance:"Media_variance_fields"
	},
	Media_avg_fields:{
		size:"Float"
	},
	Media_max_fields:{
		bucketId:"String",
		createdAt:"timestamp",
		etag:"String",
		id:"uuid",
		name:"String",
		s3key:"String",
		size:"Int",
		updatedAt:"timestamp",
		uploaderId:"uuid"
	},
	Media_min_fields:{
		bucketId:"String",
		createdAt:"timestamp",
		etag:"String",
		id:"uuid",
		name:"String",
		s3key:"String",
		size:"Int",
		updatedAt:"timestamp",
		uploaderId:"uuid"
	},
	Media_mutation_response:{
		affected_rows:"Int",
		returning:"Media"
	},
	Media_stddev_fields:{
		size:"Float"
	},
	Media_stddev_pop_fields:{
		size:"Float"
	},
	Media_stddev_samp_fields:{
		size:"Float"
	},
	Media_sum_fields:{
		size:"Int"
	},
	Media_var_pop_fields:{
		size:"Float"
	},
	Media_var_samp_fields:{
		size:"Float"
	},
	Media_variance_fields:{
		size:"Float"
	},
	Profile:{
		accountId:"uuid",
		description:"String",
		instagram:"String",
		picture:"String",
		twitter:"String",
		website:"String"
	},
	Profile_aggregate:{
		aggregate:"Profile_aggregate_fields",
		nodes:"Profile"
	},
	Profile_aggregate_fields:{
		count:"Int",
		max:"Profile_max_fields",
		min:"Profile_min_fields"
	},
	Profile_max_fields:{
		accountId:"uuid",
		description:"String",
		instagram:"String",
		picture:"String",
		twitter:"String",
		website:"String"
	},
	Profile_min_fields:{
		accountId:"uuid",
		description:"String",
		instagram:"String",
		picture:"String",
		twitter:"String",
		website:"String"
	},
	Profile_mutation_response:{
		affected_rows:"Int",
		returning:"Profile"
	},
	Project:{
		author:"Account",
		authorId:"uuid",
		blockchain:"BlockchainNetwork",
		createdAt:"timestamp",
		curator:"Account",
		curatorId:"uuid",
		description:"String",
		id:"uuid",
		pricing:"jsonb",
		projectMedias:"ProjectMedia",
		projectMedias_aggregate:"ProjectMedia_aggregate",
		releaseAt:"timestamp",
		state:"ProjectState",
		storage:"Storage",
		title:"String",
		updatedAt:"timestamp"
	},
	ProjectMedia:{
		index:"smallint",
		media:"Media",
		mediaId:"uuid",
		project:"Project",
		projectId:"uuid"
	},
	ProjectMedia_aggregate:{
		aggregate:"ProjectMedia_aggregate_fields",
		nodes:"ProjectMedia"
	},
	ProjectMedia_aggregate_fields:{
		avg:"ProjectMedia_avg_fields",
		count:"Int",
		max:"ProjectMedia_max_fields",
		min:"ProjectMedia_min_fields",
		stddev:"ProjectMedia_stddev_fields",
		stddev_pop:"ProjectMedia_stddev_pop_fields",
		stddev_samp:"ProjectMedia_stddev_samp_fields",
		sum:"ProjectMedia_sum_fields",
		var_pop:"ProjectMedia_var_pop_fields",
		var_samp:"ProjectMedia_var_samp_fields",
		variance:"ProjectMedia_variance_fields"
	},
	ProjectMedia_avg_fields:{
		index:"Float"
	},
	ProjectMedia_max_fields:{
		index:"smallint",
		mediaId:"uuid",
		projectId:"uuid"
	},
	ProjectMedia_min_fields:{
		index:"smallint",
		mediaId:"uuid",
		projectId:"uuid"
	},
	ProjectMedia_mutation_response:{
		affected_rows:"Int",
		returning:"ProjectMedia"
	},
	ProjectMedia_stddev_fields:{
		index:"Float"
	},
	ProjectMedia_stddev_pop_fields:{
		index:"Float"
	},
	ProjectMedia_stddev_samp_fields:{
		index:"Float"
	},
	ProjectMedia_sum_fields:{
		index:"smallint"
	},
	ProjectMedia_var_pop_fields:{
		index:"Float"
	},
	ProjectMedia_var_samp_fields:{
		index:"Float"
	},
	ProjectMedia_variance_fields:{
		index:"Float"
	},
	ProjectState: `scalar.ProjectState` as const,
	Project_aggregate:{
		aggregate:"Project_aggregate_fields",
		nodes:"Project"
	},
	Project_aggregate_fields:{
		count:"Int",
		max:"Project_max_fields",
		min:"Project_min_fields"
	},
	Project_max_fields:{
		authorId:"uuid",
		blockchain:"BlockchainNetwork",
		createdAt:"timestamp",
		curatorId:"uuid",
		description:"String",
		id:"uuid",
		releaseAt:"timestamp",
		state:"ProjectState",
		storage:"Storage",
		title:"String",
		updatedAt:"timestamp"
	},
	Project_min_fields:{
		authorId:"uuid",
		blockchain:"BlockchainNetwork",
		createdAt:"timestamp",
		curatorId:"uuid",
		description:"String",
		id:"uuid",
		releaseAt:"timestamp",
		state:"ProjectState",
		storage:"Storage",
		title:"String",
		updatedAt:"timestamp"
	},
	Project_mutation_response:{
		affected_rows:"Int",
		returning:"Project"
	},
	Storage: `scalar.Storage` as const,
	Wallet:{
		accountId:"uuid",
		address:"String",
		network:"BlockchainNetwork"
	},
	Wallet_aggregate:{
		aggregate:"Wallet_aggregate_fields",
		nodes:"Wallet"
	},
	Wallet_aggregate_fields:{
		count:"Int",
		max:"Wallet_max_fields",
		min:"Wallet_min_fields"
	},
	Wallet_max_fields:{
		accountId:"uuid",
		address:"String",
		network:"BlockchainNetwork"
	},
	Wallet_min_fields:{
		accountId:"uuid",
		address:"String",
		network:"BlockchainNetwork"
	},
	Wallet_mutation_response:{
		affected_rows:"Int",
		returning:"Wallet"
	},
	_AccountRoles: `scalar._AccountRoles` as const,
	_prisma_migrations:{
		applied_steps_count:"Int",
		checksum:"String",
		finished_at:"timestamptz",
		id:"String",
		logs:"String",
		migration_name:"String",
		rolled_back_at:"timestamptz",
		started_at:"timestamptz"
	},
	_prisma_migrations_aggregate:{
		aggregate:"_prisma_migrations_aggregate_fields",
		nodes:"_prisma_migrations"
	},
	_prisma_migrations_aggregate_fields:{
		avg:"_prisma_migrations_avg_fields",
		count:"Int",
		max:"_prisma_migrations_max_fields",
		min:"_prisma_migrations_min_fields",
		stddev:"_prisma_migrations_stddev_fields",
		stddev_pop:"_prisma_migrations_stddev_pop_fields",
		stddev_samp:"_prisma_migrations_stddev_samp_fields",
		sum:"_prisma_migrations_sum_fields",
		var_pop:"_prisma_migrations_var_pop_fields",
		var_samp:"_prisma_migrations_var_samp_fields",
		variance:"_prisma_migrations_variance_fields"
	},
	_prisma_migrations_avg_fields:{
		applied_steps_count:"Float"
	},
	_prisma_migrations_max_fields:{
		applied_steps_count:"Int",
		checksum:"String",
		finished_at:"timestamptz",
		id:"String",
		logs:"String",
		migration_name:"String",
		rolled_back_at:"timestamptz",
		started_at:"timestamptz"
	},
	_prisma_migrations_min_fields:{
		applied_steps_count:"Int",
		checksum:"String",
		finished_at:"timestamptz",
		id:"String",
		logs:"String",
		migration_name:"String",
		rolled_back_at:"timestamptz",
		started_at:"timestamptz"
	},
	_prisma_migrations_mutation_response:{
		affected_rows:"Int",
		returning:"_prisma_migrations"
	},
	_prisma_migrations_stddev_fields:{
		applied_steps_count:"Float"
	},
	_prisma_migrations_stddev_pop_fields:{
		applied_steps_count:"Float"
	},
	_prisma_migrations_stddev_samp_fields:{
		applied_steps_count:"Float"
	},
	_prisma_migrations_sum_fields:{
		applied_steps_count:"Int"
	},
	_prisma_migrations_var_pop_fields:{
		applied_steps_count:"Float"
	},
	_prisma_migrations_var_samp_fields:{
		applied_steps_count:"Float"
	},
	_prisma_migrations_variance_fields:{
		applied_steps_count:"Float"
	},
	jsonb: `scalar.jsonb` as const,
	mutation_root:{
		delete_Account:"Account_mutation_response",
		delete_Account_by_pk:"Account",
		delete_Media:"Media_mutation_response",
		delete_Media_by_pk:"Media",
		delete_Profile:"Profile_mutation_response",
		delete_Profile_by_pk:"Profile",
		delete_Project:"Project_mutation_response",
		delete_ProjectMedia:"ProjectMedia_mutation_response",
		delete_Project_by_pk:"Project",
		delete_Wallet:"Wallet_mutation_response",
		delete_Wallet_by_pk:"Wallet",
		delete__prisma_migrations:"_prisma_migrations_mutation_response",
		delete__prisma_migrations_by_pk:"_prisma_migrations",
		insert_Account:"Account_mutation_response",
		insert_Account_one:"Account",
		insert_Media:"Media_mutation_response",
		insert_Media_one:"Media",
		insert_Profile:"Profile_mutation_response",
		insert_Profile_one:"Profile",
		insert_Project:"Project_mutation_response",
		insert_ProjectMedia:"ProjectMedia_mutation_response",
		insert_ProjectMedia_one:"ProjectMedia",
		insert_Project_one:"Project",
		insert_Wallet:"Wallet_mutation_response",
		insert_Wallet_one:"Wallet",
		insert__prisma_migrations:"_prisma_migrations_mutation_response",
		insert__prisma_migrations_one:"_prisma_migrations",
		update_Account:"Account_mutation_response",
		update_Account_by_pk:"Account",
		update_Account_many:"Account_mutation_response",
		update_Media:"Media_mutation_response",
		update_Media_by_pk:"Media",
		update_Media_many:"Media_mutation_response",
		update_Profile:"Profile_mutation_response",
		update_Profile_by_pk:"Profile",
		update_Profile_many:"Profile_mutation_response",
		update_Project:"Project_mutation_response",
		update_ProjectMedia:"ProjectMedia_mutation_response",
		update_ProjectMedia_many:"ProjectMedia_mutation_response",
		update_Project_by_pk:"Project",
		update_Project_many:"Project_mutation_response",
		update_Wallet:"Wallet_mutation_response",
		update_Wallet_by_pk:"Wallet",
		update_Wallet_many:"Wallet_mutation_response",
		update__prisma_migrations:"_prisma_migrations_mutation_response",
		update__prisma_migrations_by_pk:"_prisma_migrations",
		update__prisma_migrations_many:"_prisma_migrations_mutation_response"
	},
	query_root:{
		Account:"Account",
		Account_aggregate:"Account_aggregate",
		Account_by_pk:"Account",
		Media:"Media",
		Media_aggregate:"Media_aggregate",
		Media_by_pk:"Media",
		Profile:"Profile",
		Profile_aggregate:"Profile_aggregate",
		Profile_by_pk:"Profile",
		Project:"Project",
		ProjectMedia:"ProjectMedia",
		ProjectMedia_aggregate:"ProjectMedia_aggregate",
		Project_aggregate:"Project_aggregate",
		Project_by_pk:"Project",
		Wallet:"Wallet",
		Wallet_aggregate:"Wallet_aggregate",
		Wallet_by_pk:"Wallet",
		_prisma_migrations:"_prisma_migrations",
		_prisma_migrations_aggregate:"_prisma_migrations_aggregate",
		_prisma_migrations_by_pk:"_prisma_migrations",
		mediaFullUrl:"String"
	},
	smallint: `scalar.smallint` as const,
	subscription_root:{
		Account:"Account",
		Account_aggregate:"Account_aggregate",
		Account_by_pk:"Account",
		Account_stream:"Account",
		Media:"Media",
		Media_aggregate:"Media_aggregate",
		Media_by_pk:"Media",
		Media_stream:"Media",
		Profile:"Profile",
		Profile_aggregate:"Profile_aggregate",
		Profile_by_pk:"Profile",
		Profile_stream:"Profile",
		Project:"Project",
		ProjectMedia:"ProjectMedia",
		ProjectMedia_aggregate:"ProjectMedia_aggregate",
		ProjectMedia_stream:"ProjectMedia",
		Project_aggregate:"Project_aggregate",
		Project_by_pk:"Project",
		Project_stream:"Project",
		Wallet:"Wallet",
		Wallet_aggregate:"Wallet_aggregate",
		Wallet_by_pk:"Wallet",
		Wallet_stream:"Wallet",
		_prisma_migrations:"_prisma_migrations",
		_prisma_migrations_aggregate:"_prisma_migrations_aggregate",
		_prisma_migrations_by_pk:"_prisma_migrations",
		_prisma_migrations_stream:"_prisma_migrations"
	},
	timestamp: `scalar.timestamp` as const,
	timestamptz: `scalar.timestamptz` as const,
	uuid: `scalar.uuid` as const
}

export const Ops = {
query: "query_root" as const,
	mutation: "mutation_root" as const,
	subscription: "subscription_root" as const
}