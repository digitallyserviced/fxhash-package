schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
Boolean expression to compare columns of type "Float". All fields are combined with logical 'AND'.
"""
input Float_comparison_exp {
  _eq: Float
  _gt: Float
  _gte: Float
  _in: [Float!]
  _is_null: Boolean
  _lt: Float
  _lte: Float
  _neq: Float
  _nin: [Float!]
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

scalar _int2

"""
Boolean expression to compare columns of type "_int2". All fields are combined with logical 'AND'.
"""
input _int2_comparison_exp {
  _eq: _int2
  _gt: _int2
  _gte: _int2
  _in: [_int2!]
  _is_null: Boolean
  _lt: _int2
  _lte: _int2
  _neq: _int2
  _nin: [_int2!]
}

scalar _int4

"""
Boolean expression to compare columns of type "_int4". All fields are combined with logical 'AND'.
"""
input _int4_comparison_exp {
  _eq: _int4
  _gt: _int4
  _gte: _int4
  _in: [_int4!]
  _is_null: Boolean
  _lt: _int4
  _lte: _int4
  _neq: _int4
  _nin: [_int4!]
}

scalar _int8

"""
Boolean expression to compare columns of type "_int8". All fields are combined with logical 'AND'.
"""
input _int8_comparison_exp {
  _eq: _int8
  _gt: _int8
  _gte: _int8
  _in: [_int8!]
  _is_null: Boolean
  _lt: _int8
  _lte: _int8
  _neq: _int8
  _nin: [_int8!]
}

scalar _text

"""
Boolean expression to compare columns of type "_text". All fields are combined with logical 'AND'.
"""
input _text_comparison_exp {
  _eq: _text
  _gt: _text
  _gte: _text
  _in: [_text!]
  _is_null: Boolean
  _lt: _text
  _lte: _text
  _neq: _text
  _nin: [_text!]
}

"""
columns and relationships of "action"
"""
type action {
  """An object relationship"""
  article: article
  articleId: Int
  createdAt: timestamptz!

  """An object relationship"""
  generative_token: generative_token
  id: uuid!
  issuerId: String
  metadata(
    """JSON select path"""
    path: String
  ): jsonb
  numericValue: numeric

  """An object relationship"""
  objkt: objkt
  objktId: String
  objktIssuerVersion: generative_token_version
  opHash: String!

  """An object relationship"""
  redeemable: redeemable
  redeemableAddress: String
  targetId: String
  ticketId: String
  tokenId: String
  type: action_type_enum!

  """An object relationship"""
  user: user

  """An object relationship"""
  userByTargetid: user
}

"""
aggregated selection of "action"
"""
type action_aggregate {
  aggregate: action_aggregate_fields
  nodes: [action!]!
}

input action_aggregate_bool_exp {
  count: action_aggregate_bool_exp_count
}

input action_aggregate_bool_exp_count {
  arguments: [action_select_column!]
  distinct: Boolean
  filter: action_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "action"
"""
type action_aggregate_fields {
  avg: action_avg_fields
  count(columns: [action_select_column!], distinct: Boolean): Int!
  max: action_max_fields
  min: action_min_fields
  stddev: action_stddev_fields
  stddev_pop: action_stddev_pop_fields
  stddev_samp: action_stddev_samp_fields
  sum: action_sum_fields
  var_pop: action_var_pop_fields
  var_samp: action_var_samp_fields
  variance: action_variance_fields
}

"""
order by aggregate values of table "action"
"""
input action_aggregate_order_by {
  avg: action_avg_order_by
  count: order_by
  max: action_max_order_by
  min: action_min_order_by
  stddev: action_stddev_order_by
  stddev_pop: action_stddev_pop_order_by
  stddev_samp: action_stddev_samp_order_by
  sum: action_sum_order_by
  var_pop: action_var_pop_order_by
  var_samp: action_var_samp_order_by
  variance: action_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input action_append_input {
  metadata: jsonb
}

"""
input type for inserting array relation for remote table "action"
"""
input action_arr_rel_insert_input {
  data: [action_insert_input!]!

  """upsert condition"""
  on_conflict: action_on_conflict
}

"""aggregate avg on columns"""
type action_avg_fields {
  articleId: Float
  numericValue: Float
}

"""
order by avg() on columns of table "action"
"""
input action_avg_order_by {
  articleId: order_by
  numericValue: order_by
}

"""
Boolean expression to filter rows from the table "action". All fields are combined with a logical 'AND'.
"""
input action_bool_exp {
  _and: [action_bool_exp!]
  _not: action_bool_exp
  _or: [action_bool_exp!]
  article: article_bool_exp
  articleId: Int_comparison_exp
  createdAt: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  id: uuid_comparison_exp
  issuerId: String_comparison_exp
  metadata: jsonb_comparison_exp
  numericValue: numeric_comparison_exp
  objkt: objkt_bool_exp
  objktId: String_comparison_exp
  objktIssuerVersion: generative_token_version_comparison_exp
  opHash: String_comparison_exp
  redeemable: redeemable_bool_exp
  redeemableAddress: String_comparison_exp
  targetId: String_comparison_exp
  ticketId: String_comparison_exp
  tokenId: String_comparison_exp
  type: action_type_enum_comparison_exp
  user: user_bool_exp
  userByTargetid: user_bool_exp
}

"""
unique or primary key constraints on table "action"
"""
enum action_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_2d9db9cf5edfbbae74eb56e3a39
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input action_delete_at_path_input {
  metadata: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input action_delete_elem_input {
  metadata: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input action_delete_key_input {
  metadata: String
}

"""
input type for incrementing numeric columns in table "action"
"""
input action_inc_input {
  articleId: Int
  numericValue: numeric
}

"""
input type for inserting data into table "action"
"""
input action_insert_input {
  article: article_obj_rel_insert_input
  articleId: Int
  createdAt: timestamptz
  generative_token: generative_token_obj_rel_insert_input
  id: uuid
  issuerId: String
  metadata: jsonb
  numericValue: numeric
  objkt: objkt_obj_rel_insert_input
  objktId: String
  objktIssuerVersion: generative_token_version
  opHash: String
  redeemable: redeemable_obj_rel_insert_input
  redeemableAddress: String
  targetId: String
  ticketId: String
  tokenId: String
  type: action_type_enum
  user: user_obj_rel_insert_input
  userByTargetid: user_obj_rel_insert_input
}

"""aggregate max on columns"""
type action_max_fields {
  articleId: Int
  createdAt: timestamptz
  id: uuid
  issuerId: String
  numericValue: numeric
  objktId: String
  objktIssuerVersion: generative_token_version
  opHash: String
  redeemableAddress: String
  targetId: String
  ticketId: String
  tokenId: String
  type: action_type_enum
}

"""
order by max() on columns of table "action"
"""
input action_max_order_by {
  articleId: order_by
  createdAt: order_by
  id: order_by
  issuerId: order_by
  numericValue: order_by
  objktId: order_by
  objktIssuerVersion: order_by
  opHash: order_by
  redeemableAddress: order_by
  targetId: order_by
  ticketId: order_by
  tokenId: order_by
  type: order_by
}

"""aggregate min on columns"""
type action_min_fields {
  articleId: Int
  createdAt: timestamptz
  id: uuid
  issuerId: String
  numericValue: numeric
  objktId: String
  objktIssuerVersion: generative_token_version
  opHash: String
  redeemableAddress: String
  targetId: String
  ticketId: String
  tokenId: String
  type: action_type_enum
}

"""
order by min() on columns of table "action"
"""
input action_min_order_by {
  articleId: order_by
  createdAt: order_by
  id: order_by
  issuerId: order_by
  numericValue: order_by
  objktId: order_by
  objktIssuerVersion: order_by
  opHash: order_by
  redeemableAddress: order_by
  targetId: order_by
  ticketId: order_by
  tokenId: order_by
  type: order_by
}

"""
response of any mutation on the table "action"
"""
type action_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [action!]!
}

"""
on_conflict condition type for table "action"
"""
input action_on_conflict {
  constraint: action_constraint!
  update_columns: [action_update_column!]! = []
  where: action_bool_exp
}

"""Ordering options when selecting data from "action"."""
input action_order_by {
  article: article_order_by
  articleId: order_by
  createdAt: order_by
  generative_token: generative_token_order_by
  id: order_by
  issuerId: order_by
  metadata: order_by
  numericValue: order_by
  objkt: objkt_order_by
  objktId: order_by
  objktIssuerVersion: order_by
  opHash: order_by
  redeemable: redeemable_order_by
  redeemableAddress: order_by
  targetId: order_by
  ticketId: order_by
  tokenId: order_by
  type: order_by
  user: user_order_by
  userByTargetid: user_order_by
}

"""primary key columns input for table: action"""
input action_pk_columns_input {
  id: uuid!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input action_prepend_input {
  metadata: jsonb
}

"""
select columns of table "action"
"""
enum action_select_column {
  """column name"""
  articleId

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  issuerId

  """column name"""
  metadata

  """column name"""
  numericValue

  """column name"""
  objktId

  """column name"""
  objktIssuerVersion

  """column name"""
  opHash

  """column name"""
  redeemableAddress

  """column name"""
  targetId

  """column name"""
  ticketId

  """column name"""
  tokenId

  """column name"""
  type
}

"""
input type for updating data in table "action"
"""
input action_set_input {
  articleId: Int
  createdAt: timestamptz
  id: uuid
  issuerId: String
  metadata: jsonb
  numericValue: numeric
  objktId: String
  objktIssuerVersion: generative_token_version
  opHash: String
  redeemableAddress: String
  targetId: String
  ticketId: String
  tokenId: String
  type: action_type_enum
}

"""aggregate stddev on columns"""
type action_stddev_fields {
  articleId: Float
  numericValue: Float
}

"""
order by stddev() on columns of table "action"
"""
input action_stddev_order_by {
  articleId: order_by
  numericValue: order_by
}

"""aggregate stddev_pop on columns"""
type action_stddev_pop_fields {
  articleId: Float
  numericValue: Float
}

"""
order by stddev_pop() on columns of table "action"
"""
input action_stddev_pop_order_by {
  articleId: order_by
  numericValue: order_by
}

"""aggregate stddev_samp on columns"""
type action_stddev_samp_fields {
  articleId: Float
  numericValue: Float
}

"""
order by stddev_samp() on columns of table "action"
"""
input action_stddev_samp_order_by {
  articleId: order_by
  numericValue: order_by
}

"""
Streaming cursor of the table "action"
"""
input action_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: action_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input action_stream_cursor_value_input {
  articleId: Int
  createdAt: timestamptz
  id: uuid
  issuerId: String
  metadata: jsonb
  numericValue: numeric
  objktId: String
  objktIssuerVersion: generative_token_version
  opHash: String
  redeemableAddress: String
  targetId: String
  ticketId: String
  tokenId: String
  type: action_type_enum
}

"""aggregate sum on columns"""
type action_sum_fields {
  articleId: Int
  numericValue: numeric
}

"""
order by sum() on columns of table "action"
"""
input action_sum_order_by {
  articleId: order_by
  numericValue: order_by
}

scalar action_type_enum

"""
Boolean expression to compare columns of type "action_type_enum". All fields are combined with logical 'AND'.
"""
input action_type_enum_comparison_exp {
  _eq: action_type_enum
  _gt: action_type_enum
  _gte: action_type_enum
  _in: [action_type_enum!]
  _is_null: Boolean
  _lt: action_type_enum
  _lte: action_type_enum
  _neq: action_type_enum
  _nin: [action_type_enum!]
}

"""
update columns of table "action"
"""
enum action_update_column {
  """column name"""
  articleId

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  issuerId

  """column name"""
  metadata

  """column name"""
  numericValue

  """column name"""
  objktId

  """column name"""
  objktIssuerVersion

  """column name"""
  opHash

  """column name"""
  redeemableAddress

  """column name"""
  targetId

  """column name"""
  ticketId

  """column name"""
  tokenId

  """column name"""
  type
}

input action_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: action_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: action_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: action_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: action_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: action_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: action_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: action_set_input

  """filter the rows which have to be updated"""
  where: action_bool_exp!
}

"""aggregate var_pop on columns"""
type action_var_pop_fields {
  articleId: Float
  numericValue: Float
}

"""
order by var_pop() on columns of table "action"
"""
input action_var_pop_order_by {
  articleId: order_by
  numericValue: order_by
}

"""aggregate var_samp on columns"""
type action_var_samp_fields {
  articleId: Float
  numericValue: Float
}

"""
order by var_samp() on columns of table "action"
"""
input action_var_samp_order_by {
  articleId: order_by
  numericValue: order_by
}

"""aggregate variance on columns"""
type action_variance_fields {
  articleId: Float
  numericValue: Float
}

"""
order by variance() on columns of table "action"
"""
input action_variance_order_by {
  articleId: order_by
  numericValue: order_by
}

"""
columns and relationships of "article"
"""
type article {
  """An array relationship"""
  actions(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """An aggregate relationship"""
  actions_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!

  """An array relationship"""
  article_ledgers(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): [article_ledger!]!

  """An aggregate relationship"""
  article_ledgers_aggregate(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): article_ledger_aggregate!

  """An array relationship"""
  article_revisions(
    """distinct select on columns"""
    distinct_on: [article_revision_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_revision_order_by!]

    """filter the rows returned"""
    where: article_revision_bool_exp
  ): [article_revision!]!

  """An aggregate relationship"""
  article_revisions_aggregate(
    """distinct select on columns"""
    distinct_on: [article_revision_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_revision_order_by!]

    """filter the rows returned"""
    where: article_revision_bool_exp
  ): article_revision_aggregate!
  artifactUri: String!
  authorId: String!
  body: String!
  createdAt: timestamptz!
  description: String!
  displayUri: String!
  editions: bigint!
  flag: article_flag_enum!
  id: Int!
  language: String!

  """An array relationship"""
  listings(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): [listing!]!

  """An aggregate relationship"""
  listings_aggregate(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): listing_aggregate!

  """An object relationship"""
  media_image: media_image
  metadata(
    """JSON select path"""
    path: String
  ): json!
  metadataLocked: Boolean!
  metadataUri: String!
  mintOpHash: String!
  moderationReasonId: String

  """An object relationship"""
  moderation_reason: moderation_reason
  platforms: _text
  royalties: Int!
  slug: String!

  """An array relationship"""
  splits(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!

  """An aggregate relationship"""
  splits_aggregate(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): split_aggregate!
  tags: _text!
  thumbnailCaption: String
  thumbnailMediaId: bpchar
  thumbnailUri: String!
  title: String!

  """An array relationship"""
  transactions(
    """distinct select on columns"""
    distinct_on: [transaction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [transaction_order_by!]

    """filter the rows returned"""
    where: transaction_bool_exp
  ): [transaction!]!

  """An aggregate relationship"""
  transactions_aggregate(
    """distinct select on columns"""
    distinct_on: [transaction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [transaction_order_by!]

    """filter the rows returned"""
    where: transaction_bool_exp
  ): transaction_aggregate!

  """An object relationship"""
  user: user!
}

"""
aggregated selection of "article"
"""
type article_aggregate {
  aggregate: article_aggregate_fields
  nodes: [article!]!
}

input article_aggregate_bool_exp {
  bool_and: article_aggregate_bool_exp_bool_and
  bool_or: article_aggregate_bool_exp_bool_or
  count: article_aggregate_bool_exp_count
}

input article_aggregate_bool_exp_bool_and {
  arguments: article_select_column_article_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: article_bool_exp
  predicate: Boolean_comparison_exp!
}

input article_aggregate_bool_exp_bool_or {
  arguments: article_select_column_article_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: article_bool_exp
  predicate: Boolean_comparison_exp!
}

input article_aggregate_bool_exp_count {
  arguments: [article_select_column!]
  distinct: Boolean
  filter: article_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "article"
"""
type article_aggregate_fields {
  avg: article_avg_fields
  count(columns: [article_select_column!], distinct: Boolean): Int!
  max: article_max_fields
  min: article_min_fields
  stddev: article_stddev_fields
  stddev_pop: article_stddev_pop_fields
  stddev_samp: article_stddev_samp_fields
  sum: article_sum_fields
  var_pop: article_var_pop_fields
  var_samp: article_var_samp_fields
  variance: article_variance_fields
}

"""
order by aggregate values of table "article"
"""
input article_aggregate_order_by {
  avg: article_avg_order_by
  count: order_by
  max: article_max_order_by
  min: article_min_order_by
  stddev: article_stddev_order_by
  stddev_pop: article_stddev_pop_order_by
  stddev_samp: article_stddev_samp_order_by
  sum: article_sum_order_by
  var_pop: article_var_pop_order_by
  var_samp: article_var_samp_order_by
  variance: article_variance_order_by
}

"""
input type for inserting array relation for remote table "article"
"""
input article_arr_rel_insert_input {
  data: [article_insert_input!]!

  """upsert condition"""
  on_conflict: article_on_conflict
}

"""aggregate avg on columns"""
type article_avg_fields {
  editions: Float
  id: Float
  royalties: Float
}

"""
order by avg() on columns of table "article"
"""
input article_avg_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""
Boolean expression to filter rows from the table "article". All fields are combined with a logical 'AND'.
"""
input article_bool_exp {
  _and: [article_bool_exp!]
  _not: article_bool_exp
  _or: [article_bool_exp!]
  actions: action_bool_exp
  actions_aggregate: action_aggregate_bool_exp
  article_ledgers: article_ledger_bool_exp
  article_ledgers_aggregate: article_ledger_aggregate_bool_exp
  article_revisions: article_revision_bool_exp
  article_revisions_aggregate: article_revision_aggregate_bool_exp
  artifactUri: String_comparison_exp
  authorId: String_comparison_exp
  body: String_comparison_exp
  createdAt: timestamptz_comparison_exp
  description: String_comparison_exp
  displayUri: String_comparison_exp
  editions: bigint_comparison_exp
  flag: article_flag_enum_comparison_exp
  id: Int_comparison_exp
  language: String_comparison_exp
  listings: listing_bool_exp
  listings_aggregate: listing_aggregate_bool_exp
  media_image: media_image_bool_exp
  metadata: json_comparison_exp
  metadataLocked: Boolean_comparison_exp
  metadataUri: String_comparison_exp
  mintOpHash: String_comparison_exp
  moderationReasonId: String_comparison_exp
  moderation_reason: moderation_reason_bool_exp
  platforms: _text_comparison_exp
  royalties: Int_comparison_exp
  slug: String_comparison_exp
  splits: split_bool_exp
  splits_aggregate: split_aggregate_bool_exp
  tags: _text_comparison_exp
  thumbnailCaption: String_comparison_exp
  thumbnailMediaId: bpchar_comparison_exp
  thumbnailUri: String_comparison_exp
  title: String_comparison_exp
  transactions: transaction_bool_exp
  transactions_aggregate: transaction_aggregate_bool_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "article"
"""
enum article_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_40808690eb7b915046558c0f81b
}

scalar article_flag_enum

"""
Boolean expression to compare columns of type "article_flag_enum". All fields are combined with logical 'AND'.
"""
input article_flag_enum_comparison_exp {
  _eq: article_flag_enum
  _gt: article_flag_enum
  _gte: article_flag_enum
  _in: [article_flag_enum!]
  _is_null: Boolean
  _lt: article_flag_enum
  _lte: article_flag_enum
  _neq: article_flag_enum
  _nin: [article_flag_enum!]
}

"""
columns and relationships of "article_generative_token"
"""
type article_generative_token {
  articleId: Int!
  generativeTokenId: String!
  line: Int!
}

"""
aggregated selection of "article_generative_token"
"""
type article_generative_token_aggregate {
  aggregate: article_generative_token_aggregate_fields
  nodes: [article_generative_token!]!
}

"""
aggregate fields of "article_generative_token"
"""
type article_generative_token_aggregate_fields {
  avg: article_generative_token_avg_fields
  count(columns: [article_generative_token_select_column!], distinct: Boolean): Int!
  max: article_generative_token_max_fields
  min: article_generative_token_min_fields
  stddev: article_generative_token_stddev_fields
  stddev_pop: article_generative_token_stddev_pop_fields
  stddev_samp: article_generative_token_stddev_samp_fields
  sum: article_generative_token_sum_fields
  var_pop: article_generative_token_var_pop_fields
  var_samp: article_generative_token_var_samp_fields
  variance: article_generative_token_variance_fields
}

"""aggregate avg on columns"""
type article_generative_token_avg_fields {
  articleId: Float
  line: Float
}

"""
Boolean expression to filter rows from the table "article_generative_token". All fields are combined with a logical 'AND'.
"""
input article_generative_token_bool_exp {
  _and: [article_generative_token_bool_exp!]
  _not: article_generative_token_bool_exp
  _or: [article_generative_token_bool_exp!]
  articleId: Int_comparison_exp
  generativeTokenId: String_comparison_exp
  line: Int_comparison_exp
}

"""
unique or primary key constraints on table "article_generative_token"
"""
enum article_generative_token_constraint {
  """
  unique or primary key constraint on columns "generativeTokenId", "articleId"
  """
  PK_bcff89d520a63a4d84d19817d8c
}

"""
input type for incrementing numeric columns in table "article_generative_token"
"""
input article_generative_token_inc_input {
  articleId: Int
  line: Int
}

"""
input type for inserting data into table "article_generative_token"
"""
input article_generative_token_insert_input {
  articleId: Int
  generativeTokenId: String
  line: Int
}

"""aggregate max on columns"""
type article_generative_token_max_fields {
  articleId: Int
  generativeTokenId: String
  line: Int
}

"""aggregate min on columns"""
type article_generative_token_min_fields {
  articleId: Int
  generativeTokenId: String
  line: Int
}

"""
response of any mutation on the table "article_generative_token"
"""
type article_generative_token_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [article_generative_token!]!
}

"""
on_conflict condition type for table "article_generative_token"
"""
input article_generative_token_on_conflict {
  constraint: article_generative_token_constraint!
  update_columns: [article_generative_token_update_column!]! = []
  where: article_generative_token_bool_exp
}

"""Ordering options when selecting data from "article_generative_token"."""
input article_generative_token_order_by {
  articleId: order_by
  generativeTokenId: order_by
  line: order_by
}

"""primary key columns input for table: article_generative_token"""
input article_generative_token_pk_columns_input {
  articleId: Int!
  generativeTokenId: String!
}

"""
select columns of table "article_generative_token"
"""
enum article_generative_token_select_column {
  """column name"""
  articleId

  """column name"""
  generativeTokenId

  """column name"""
  line
}

"""
input type for updating data in table "article_generative_token"
"""
input article_generative_token_set_input {
  articleId: Int
  generativeTokenId: String
  line: Int
}

"""aggregate stddev on columns"""
type article_generative_token_stddev_fields {
  articleId: Float
  line: Float
}

"""aggregate stddev_pop on columns"""
type article_generative_token_stddev_pop_fields {
  articleId: Float
  line: Float
}

"""aggregate stddev_samp on columns"""
type article_generative_token_stddev_samp_fields {
  articleId: Float
  line: Float
}

"""
Streaming cursor of the table "article_generative_token"
"""
input article_generative_token_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: article_generative_token_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input article_generative_token_stream_cursor_value_input {
  articleId: Int
  generativeTokenId: String
  line: Int
}

"""aggregate sum on columns"""
type article_generative_token_sum_fields {
  articleId: Int
  line: Int
}

"""
update columns of table "article_generative_token"
"""
enum article_generative_token_update_column {
  """column name"""
  articleId

  """column name"""
  generativeTokenId

  """column name"""
  line
}

input article_generative_token_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: article_generative_token_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: article_generative_token_set_input

  """filter the rows which have to be updated"""
  where: article_generative_token_bool_exp!
}

"""aggregate var_pop on columns"""
type article_generative_token_var_pop_fields {
  articleId: Float
  line: Float
}

"""aggregate var_samp on columns"""
type article_generative_token_var_samp_fields {
  articleId: Float
  line: Float
}

"""aggregate variance on columns"""
type article_generative_token_variance_fields {
  articleId: Float
  line: Float
}

"""
input type for incrementing numeric columns in table "article"
"""
input article_inc_input {
  editions: bigint
  id: Int
  royalties: Int
}

"""
input type for inserting data into table "article"
"""
input article_insert_input {
  actions: action_arr_rel_insert_input
  article_ledgers: article_ledger_arr_rel_insert_input
  article_revisions: article_revision_arr_rel_insert_input
  artifactUri: String
  authorId: String
  body: String
  createdAt: timestamptz
  description: String
  displayUri: String
  editions: bigint
  flag: article_flag_enum
  id: Int
  language: String
  listings: listing_arr_rel_insert_input
  media_image: media_image_obj_rel_insert_input
  metadata: json
  metadataLocked: Boolean
  metadataUri: String
  mintOpHash: String
  moderationReasonId: String
  moderation_reason: moderation_reason_obj_rel_insert_input
  platforms: _text
  royalties: Int
  slug: String
  splits: split_arr_rel_insert_input
  tags: _text
  thumbnailCaption: String
  thumbnailMediaId: bpchar
  thumbnailUri: String
  title: String
  transactions: transaction_arr_rel_insert_input
  user: user_obj_rel_insert_input
}

"""
columns and relationships of "article_ledger"
"""
type article_ledger {
  amount: bigint!

  """An object relationship"""
  article: article!
  articleId: Int!
  ownerId: String!

  """An object relationship"""
  user: user!
}

"""
aggregated selection of "article_ledger"
"""
type article_ledger_aggregate {
  aggregate: article_ledger_aggregate_fields
  nodes: [article_ledger!]!
}

input article_ledger_aggregate_bool_exp {
  count: article_ledger_aggregate_bool_exp_count
}

input article_ledger_aggregate_bool_exp_count {
  arguments: [article_ledger_select_column!]
  distinct: Boolean
  filter: article_ledger_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "article_ledger"
"""
type article_ledger_aggregate_fields {
  avg: article_ledger_avg_fields
  count(columns: [article_ledger_select_column!], distinct: Boolean): Int!
  max: article_ledger_max_fields
  min: article_ledger_min_fields
  stddev: article_ledger_stddev_fields
  stddev_pop: article_ledger_stddev_pop_fields
  stddev_samp: article_ledger_stddev_samp_fields
  sum: article_ledger_sum_fields
  var_pop: article_ledger_var_pop_fields
  var_samp: article_ledger_var_samp_fields
  variance: article_ledger_variance_fields
}

"""
order by aggregate values of table "article_ledger"
"""
input article_ledger_aggregate_order_by {
  avg: article_ledger_avg_order_by
  count: order_by
  max: article_ledger_max_order_by
  min: article_ledger_min_order_by
  stddev: article_ledger_stddev_order_by
  stddev_pop: article_ledger_stddev_pop_order_by
  stddev_samp: article_ledger_stddev_samp_order_by
  sum: article_ledger_sum_order_by
  var_pop: article_ledger_var_pop_order_by
  var_samp: article_ledger_var_samp_order_by
  variance: article_ledger_variance_order_by
}

"""
input type for inserting array relation for remote table "article_ledger"
"""
input article_ledger_arr_rel_insert_input {
  data: [article_ledger_insert_input!]!

  """upsert condition"""
  on_conflict: article_ledger_on_conflict
}

"""aggregate avg on columns"""
type article_ledger_avg_fields {
  amount: Float
  articleId: Float
}

"""
order by avg() on columns of table "article_ledger"
"""
input article_ledger_avg_order_by {
  amount: order_by
  articleId: order_by
}

"""
Boolean expression to filter rows from the table "article_ledger". All fields are combined with a logical 'AND'.
"""
input article_ledger_bool_exp {
  _and: [article_ledger_bool_exp!]
  _not: article_ledger_bool_exp
  _or: [article_ledger_bool_exp!]
  amount: bigint_comparison_exp
  article: article_bool_exp
  articleId: Int_comparison_exp
  ownerId: String_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "article_ledger"
"""
enum article_ledger_constraint {
  """
  unique or primary key constraint on columns "ownerId", "articleId"
  """
  PK_dbe19eff5d0e85677ab2bc9d91a
}

"""
input type for incrementing numeric columns in table "article_ledger"
"""
input article_ledger_inc_input {
  amount: bigint
  articleId: Int
}

"""
input type for inserting data into table "article_ledger"
"""
input article_ledger_insert_input {
  amount: bigint
  article: article_obj_rel_insert_input
  articleId: Int
  ownerId: String
  user: user_obj_rel_insert_input
}

"""aggregate max on columns"""
type article_ledger_max_fields {
  amount: bigint
  articleId: Int
  ownerId: String
}

"""
order by max() on columns of table "article_ledger"
"""
input article_ledger_max_order_by {
  amount: order_by
  articleId: order_by
  ownerId: order_by
}

"""aggregate min on columns"""
type article_ledger_min_fields {
  amount: bigint
  articleId: Int
  ownerId: String
}

"""
order by min() on columns of table "article_ledger"
"""
input article_ledger_min_order_by {
  amount: order_by
  articleId: order_by
  ownerId: order_by
}

"""
response of any mutation on the table "article_ledger"
"""
type article_ledger_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [article_ledger!]!
}

"""
on_conflict condition type for table "article_ledger"
"""
input article_ledger_on_conflict {
  constraint: article_ledger_constraint!
  update_columns: [article_ledger_update_column!]! = []
  where: article_ledger_bool_exp
}

"""Ordering options when selecting data from "article_ledger"."""
input article_ledger_order_by {
  amount: order_by
  article: article_order_by
  articleId: order_by
  ownerId: order_by
  user: user_order_by
}

"""primary key columns input for table: article_ledger"""
input article_ledger_pk_columns_input {
  articleId: Int!
  ownerId: String!
}

"""
select columns of table "article_ledger"
"""
enum article_ledger_select_column {
  """column name"""
  amount

  """column name"""
  articleId

  """column name"""
  ownerId
}

"""
input type for updating data in table "article_ledger"
"""
input article_ledger_set_input {
  amount: bigint
  articleId: Int
  ownerId: String
}

"""aggregate stddev on columns"""
type article_ledger_stddev_fields {
  amount: Float
  articleId: Float
}

"""
order by stddev() on columns of table "article_ledger"
"""
input article_ledger_stddev_order_by {
  amount: order_by
  articleId: order_by
}

"""aggregate stddev_pop on columns"""
type article_ledger_stddev_pop_fields {
  amount: Float
  articleId: Float
}

"""
order by stddev_pop() on columns of table "article_ledger"
"""
input article_ledger_stddev_pop_order_by {
  amount: order_by
  articleId: order_by
}

"""aggregate stddev_samp on columns"""
type article_ledger_stddev_samp_fields {
  amount: Float
  articleId: Float
}

"""
order by stddev_samp() on columns of table "article_ledger"
"""
input article_ledger_stddev_samp_order_by {
  amount: order_by
  articleId: order_by
}

"""
Streaming cursor of the table "article_ledger"
"""
input article_ledger_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: article_ledger_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input article_ledger_stream_cursor_value_input {
  amount: bigint
  articleId: Int
  ownerId: String
}

"""aggregate sum on columns"""
type article_ledger_sum_fields {
  amount: bigint
  articleId: Int
}

"""
order by sum() on columns of table "article_ledger"
"""
input article_ledger_sum_order_by {
  amount: order_by
  articleId: order_by
}

"""
update columns of table "article_ledger"
"""
enum article_ledger_update_column {
  """column name"""
  amount

  """column name"""
  articleId

  """column name"""
  ownerId
}

input article_ledger_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: article_ledger_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: article_ledger_set_input

  """filter the rows which have to be updated"""
  where: article_ledger_bool_exp!
}

"""aggregate var_pop on columns"""
type article_ledger_var_pop_fields {
  amount: Float
  articleId: Float
}

"""
order by var_pop() on columns of table "article_ledger"
"""
input article_ledger_var_pop_order_by {
  amount: order_by
  articleId: order_by
}

"""aggregate var_samp on columns"""
type article_ledger_var_samp_fields {
  amount: Float
  articleId: Float
}

"""
order by var_samp() on columns of table "article_ledger"
"""
input article_ledger_var_samp_order_by {
  amount: order_by
  articleId: order_by
}

"""aggregate variance on columns"""
type article_ledger_variance_fields {
  amount: Float
  articleId: Float
}

"""
order by variance() on columns of table "article_ledger"
"""
input article_ledger_variance_order_by {
  amount: order_by
  articleId: order_by
}

"""aggregate max on columns"""
type article_max_fields {
  artifactUri: String
  authorId: String
  body: String
  createdAt: timestamptz
  description: String
  displayUri: String
  editions: bigint
  flag: article_flag_enum
  id: Int
  language: String
  metadataUri: String
  mintOpHash: String
  moderationReasonId: String
  royalties: Int
  slug: String
  thumbnailCaption: String
  thumbnailMediaId: bpchar
  thumbnailUri: String
  title: String
}

"""
order by max() on columns of table "article"
"""
input article_max_order_by {
  artifactUri: order_by
  authorId: order_by
  body: order_by
  createdAt: order_by
  description: order_by
  displayUri: order_by
  editions: order_by
  flag: order_by
  id: order_by
  language: order_by
  metadataUri: order_by
  mintOpHash: order_by
  moderationReasonId: order_by
  royalties: order_by
  slug: order_by
  thumbnailCaption: order_by
  thumbnailMediaId: order_by
  thumbnailUri: order_by
  title: order_by
}

"""aggregate min on columns"""
type article_min_fields {
  artifactUri: String
  authorId: String
  body: String
  createdAt: timestamptz
  description: String
  displayUri: String
  editions: bigint
  flag: article_flag_enum
  id: Int
  language: String
  metadataUri: String
  mintOpHash: String
  moderationReasonId: String
  royalties: Int
  slug: String
  thumbnailCaption: String
  thumbnailMediaId: bpchar
  thumbnailUri: String
  title: String
}

"""
order by min() on columns of table "article"
"""
input article_min_order_by {
  artifactUri: order_by
  authorId: order_by
  body: order_by
  createdAt: order_by
  description: order_by
  displayUri: order_by
  editions: order_by
  flag: order_by
  id: order_by
  language: order_by
  metadataUri: order_by
  mintOpHash: order_by
  moderationReasonId: order_by
  royalties: order_by
  slug: order_by
  thumbnailCaption: order_by
  thumbnailMediaId: order_by
  thumbnailUri: order_by
  title: order_by
}

"""
response of any mutation on the table "article"
"""
type article_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [article!]!
}

"""
input type for inserting object relation for remote table "article"
"""
input article_obj_rel_insert_input {
  data: article_insert_input!

  """upsert condition"""
  on_conflict: article_on_conflict
}

"""
on_conflict condition type for table "article"
"""
input article_on_conflict {
  constraint: article_constraint!
  update_columns: [article_update_column!]! = []
  where: article_bool_exp
}

"""Ordering options when selecting data from "article"."""
input article_order_by {
  actions_aggregate: action_aggregate_order_by
  article_ledgers_aggregate: article_ledger_aggregate_order_by
  article_revisions_aggregate: article_revision_aggregate_order_by
  artifactUri: order_by
  authorId: order_by
  body: order_by
  createdAt: order_by
  description: order_by
  displayUri: order_by
  editions: order_by
  flag: order_by
  id: order_by
  language: order_by
  listings_aggregate: listing_aggregate_order_by
  media_image: media_image_order_by
  metadata: order_by
  metadataLocked: order_by
  metadataUri: order_by
  mintOpHash: order_by
  moderationReasonId: order_by
  moderation_reason: moderation_reason_order_by
  platforms: order_by
  royalties: order_by
  slug: order_by
  splits_aggregate: split_aggregate_order_by
  tags: order_by
  thumbnailCaption: order_by
  thumbnailMediaId: order_by
  thumbnailUri: order_by
  title: order_by
  transactions_aggregate: transaction_aggregate_order_by
  user: user_order_by
}

"""primary key columns input for table: article"""
input article_pk_columns_input {
  id: Int!
}

"""
columns and relationships of "article_revision"
"""
type article_revision {
  """An object relationship"""
  article: article!
  articleId: Int!
  createdAt: timestamptz!
  iteration: smallint!
  metadataUri: String!
  opHash: String!
}

"""
aggregated selection of "article_revision"
"""
type article_revision_aggregate {
  aggregate: article_revision_aggregate_fields
  nodes: [article_revision!]!
}

input article_revision_aggregate_bool_exp {
  count: article_revision_aggregate_bool_exp_count
}

input article_revision_aggregate_bool_exp_count {
  arguments: [article_revision_select_column!]
  distinct: Boolean
  filter: article_revision_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "article_revision"
"""
type article_revision_aggregate_fields {
  avg: article_revision_avg_fields
  count(columns: [article_revision_select_column!], distinct: Boolean): Int!
  max: article_revision_max_fields
  min: article_revision_min_fields
  stddev: article_revision_stddev_fields
  stddev_pop: article_revision_stddev_pop_fields
  stddev_samp: article_revision_stddev_samp_fields
  sum: article_revision_sum_fields
  var_pop: article_revision_var_pop_fields
  var_samp: article_revision_var_samp_fields
  variance: article_revision_variance_fields
}

"""
order by aggregate values of table "article_revision"
"""
input article_revision_aggregate_order_by {
  avg: article_revision_avg_order_by
  count: order_by
  max: article_revision_max_order_by
  min: article_revision_min_order_by
  stddev: article_revision_stddev_order_by
  stddev_pop: article_revision_stddev_pop_order_by
  stddev_samp: article_revision_stddev_samp_order_by
  sum: article_revision_sum_order_by
  var_pop: article_revision_var_pop_order_by
  var_samp: article_revision_var_samp_order_by
  variance: article_revision_variance_order_by
}

"""
input type for inserting array relation for remote table "article_revision"
"""
input article_revision_arr_rel_insert_input {
  data: [article_revision_insert_input!]!

  """upsert condition"""
  on_conflict: article_revision_on_conflict
}

"""aggregate avg on columns"""
type article_revision_avg_fields {
  articleId: Float
  iteration: Float
}

"""
order by avg() on columns of table "article_revision"
"""
input article_revision_avg_order_by {
  articleId: order_by
  iteration: order_by
}

"""
Boolean expression to filter rows from the table "article_revision". All fields are combined with a logical 'AND'.
"""
input article_revision_bool_exp {
  _and: [article_revision_bool_exp!]
  _not: article_revision_bool_exp
  _or: [article_revision_bool_exp!]
  article: article_bool_exp
  articleId: Int_comparison_exp
  createdAt: timestamptz_comparison_exp
  iteration: smallint_comparison_exp
  metadataUri: String_comparison_exp
  opHash: String_comparison_exp
}

"""
unique or primary key constraints on table "article_revision"
"""
enum article_revision_constraint {
  """
  unique or primary key constraint on columns "articleId", "iteration"
  """
  PK_715d43ae40a0d4083e857214255
}

"""
input type for incrementing numeric columns in table "article_revision"
"""
input article_revision_inc_input {
  articleId: Int
  iteration: smallint
}

"""
input type for inserting data into table "article_revision"
"""
input article_revision_insert_input {
  article: article_obj_rel_insert_input
  articleId: Int
  createdAt: timestamptz
  iteration: smallint
  metadataUri: String
  opHash: String
}

"""aggregate max on columns"""
type article_revision_max_fields {
  articleId: Int
  createdAt: timestamptz
  iteration: smallint
  metadataUri: String
  opHash: String
}

"""
order by max() on columns of table "article_revision"
"""
input article_revision_max_order_by {
  articleId: order_by
  createdAt: order_by
  iteration: order_by
  metadataUri: order_by
  opHash: order_by
}

"""aggregate min on columns"""
type article_revision_min_fields {
  articleId: Int
  createdAt: timestamptz
  iteration: smallint
  metadataUri: String
  opHash: String
}

"""
order by min() on columns of table "article_revision"
"""
input article_revision_min_order_by {
  articleId: order_by
  createdAt: order_by
  iteration: order_by
  metadataUri: order_by
  opHash: order_by
}

"""
response of any mutation on the table "article_revision"
"""
type article_revision_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [article_revision!]!
}

"""
on_conflict condition type for table "article_revision"
"""
input article_revision_on_conflict {
  constraint: article_revision_constraint!
  update_columns: [article_revision_update_column!]! = []
  where: article_revision_bool_exp
}

"""Ordering options when selecting data from "article_revision"."""
input article_revision_order_by {
  article: article_order_by
  articleId: order_by
  createdAt: order_by
  iteration: order_by
  metadataUri: order_by
  opHash: order_by
}

"""primary key columns input for table: article_revision"""
input article_revision_pk_columns_input {
  articleId: Int!
  iteration: smallint!
}

"""
select columns of table "article_revision"
"""
enum article_revision_select_column {
  """column name"""
  articleId

  """column name"""
  createdAt

  """column name"""
  iteration

  """column name"""
  metadataUri

  """column name"""
  opHash
}

"""
input type for updating data in table "article_revision"
"""
input article_revision_set_input {
  articleId: Int
  createdAt: timestamptz
  iteration: smallint
  metadataUri: String
  opHash: String
}

"""aggregate stddev on columns"""
type article_revision_stddev_fields {
  articleId: Float
  iteration: Float
}

"""
order by stddev() on columns of table "article_revision"
"""
input article_revision_stddev_order_by {
  articleId: order_by
  iteration: order_by
}

"""aggregate stddev_pop on columns"""
type article_revision_stddev_pop_fields {
  articleId: Float
  iteration: Float
}

"""
order by stddev_pop() on columns of table "article_revision"
"""
input article_revision_stddev_pop_order_by {
  articleId: order_by
  iteration: order_by
}

"""aggregate stddev_samp on columns"""
type article_revision_stddev_samp_fields {
  articleId: Float
  iteration: Float
}

"""
order by stddev_samp() on columns of table "article_revision"
"""
input article_revision_stddev_samp_order_by {
  articleId: order_by
  iteration: order_by
}

"""
Streaming cursor of the table "article_revision"
"""
input article_revision_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: article_revision_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input article_revision_stream_cursor_value_input {
  articleId: Int
  createdAt: timestamptz
  iteration: smallint
  metadataUri: String
  opHash: String
}

"""aggregate sum on columns"""
type article_revision_sum_fields {
  articleId: Int
  iteration: smallint
}

"""
order by sum() on columns of table "article_revision"
"""
input article_revision_sum_order_by {
  articleId: order_by
  iteration: order_by
}

"""
update columns of table "article_revision"
"""
enum article_revision_update_column {
  """column name"""
  articleId

  """column name"""
  createdAt

  """column name"""
  iteration

  """column name"""
  metadataUri

  """column name"""
  opHash
}

input article_revision_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: article_revision_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: article_revision_set_input

  """filter the rows which have to be updated"""
  where: article_revision_bool_exp!
}

"""aggregate var_pop on columns"""
type article_revision_var_pop_fields {
  articleId: Float
  iteration: Float
}

"""
order by var_pop() on columns of table "article_revision"
"""
input article_revision_var_pop_order_by {
  articleId: order_by
  iteration: order_by
}

"""aggregate var_samp on columns"""
type article_revision_var_samp_fields {
  articleId: Float
  iteration: Float
}

"""
order by var_samp() on columns of table "article_revision"
"""
input article_revision_var_samp_order_by {
  articleId: order_by
  iteration: order_by
}

"""aggregate variance on columns"""
type article_revision_variance_fields {
  articleId: Float
  iteration: Float
}

"""
order by variance() on columns of table "article_revision"
"""
input article_revision_variance_order_by {
  articleId: order_by
  iteration: order_by
}

"""
select columns of table "article"
"""
enum article_select_column {
  """column name"""
  artifactUri

  """column name"""
  authorId

  """column name"""
  body

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  displayUri

  """column name"""
  editions

  """column name"""
  flag

  """column name"""
  id

  """column name"""
  language

  """column name"""
  metadata

  """column name"""
  metadataLocked

  """column name"""
  metadataUri

  """column name"""
  mintOpHash

  """column name"""
  moderationReasonId

  """column name"""
  platforms

  """column name"""
  royalties

  """column name"""
  slug

  """column name"""
  tags

  """column name"""
  thumbnailCaption

  """column name"""
  thumbnailMediaId

  """column name"""
  thumbnailUri

  """column name"""
  title
}

"""
select "article_aggregate_bool_exp_bool_and_arguments_columns" columns of table "article"
"""
enum article_select_column_article_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  metadataLocked
}

"""
select "article_aggregate_bool_exp_bool_or_arguments_columns" columns of table "article"
"""
enum article_select_column_article_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  metadataLocked
}

"""
input type for updating data in table "article"
"""
input article_set_input {
  artifactUri: String
  authorId: String
  body: String
  createdAt: timestamptz
  description: String
  displayUri: String
  editions: bigint
  flag: article_flag_enum
  id: Int
  language: String
  metadata: json
  metadataLocked: Boolean
  metadataUri: String
  mintOpHash: String
  moderationReasonId: String
  platforms: _text
  royalties: Int
  slug: String
  tags: _text
  thumbnailCaption: String
  thumbnailMediaId: bpchar
  thumbnailUri: String
  title: String
}

"""aggregate stddev on columns"""
type article_stddev_fields {
  editions: Float
  id: Float
  royalties: Float
}

"""
order by stddev() on columns of table "article"
"""
input article_stddev_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""aggregate stddev_pop on columns"""
type article_stddev_pop_fields {
  editions: Float
  id: Float
  royalties: Float
}

"""
order by stddev_pop() on columns of table "article"
"""
input article_stddev_pop_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""aggregate stddev_samp on columns"""
type article_stddev_samp_fields {
  editions: Float
  id: Float
  royalties: Float
}

"""
order by stddev_samp() on columns of table "article"
"""
input article_stddev_samp_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""
Streaming cursor of the table "article"
"""
input article_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: article_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input article_stream_cursor_value_input {
  artifactUri: String
  authorId: String
  body: String
  createdAt: timestamptz
  description: String
  displayUri: String
  editions: bigint
  flag: article_flag_enum
  id: Int
  language: String
  metadata: json
  metadataLocked: Boolean
  metadataUri: String
  mintOpHash: String
  moderationReasonId: String
  platforms: _text
  royalties: Int
  slug: String
  tags: _text
  thumbnailCaption: String
  thumbnailMediaId: bpchar
  thumbnailUri: String
  title: String
}

"""aggregate sum on columns"""
type article_sum_fields {
  editions: bigint
  id: Int
  royalties: Int
}

"""
order by sum() on columns of table "article"
"""
input article_sum_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""
update columns of table "article"
"""
enum article_update_column {
  """column name"""
  artifactUri

  """column name"""
  authorId

  """column name"""
  body

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  displayUri

  """column name"""
  editions

  """column name"""
  flag

  """column name"""
  id

  """column name"""
  language

  """column name"""
  metadata

  """column name"""
  metadataLocked

  """column name"""
  metadataUri

  """column name"""
  mintOpHash

  """column name"""
  moderationReasonId

  """column name"""
  platforms

  """column name"""
  royalties

  """column name"""
  slug

  """column name"""
  tags

  """column name"""
  thumbnailCaption

  """column name"""
  thumbnailMediaId

  """column name"""
  thumbnailUri

  """column name"""
  title
}

input article_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: article_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: article_set_input

  """filter the rows which have to be updated"""
  where: article_bool_exp!
}

"""aggregate var_pop on columns"""
type article_var_pop_fields {
  editions: Float
  id: Float
  royalties: Float
}

"""
order by var_pop() on columns of table "article"
"""
input article_var_pop_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""aggregate var_samp on columns"""
type article_var_samp_fields {
  editions: Float
  id: Float
  royalties: Float
}

"""
order by var_samp() on columns of table "article"
"""
input article_var_samp_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""aggregate variance on columns"""
type article_variance_fields {
  editions: Float
  id: Float
  royalties: Float
}

"""
order by variance() on columns of table "article"
"""
input article_variance_order_by {
  editions: order_by
  id: order_by
  royalties: order_by
}

"""
columns and relationships of "auction"
"""
type auction {
  """An object relationship"""
  auction_bid_table: auction_bid_table

  """An array relationship"""
  auction_bids(
    """distinct select on columns"""
    distinct_on: [auction_bid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_order_by!]

    """filter the rows returned"""
    where: auction_bid_bool_exp
  ): [auction_bid!]!

  """An aggregate relationship"""
  auction_bids_aggregate(
    """distinct select on columns"""
    distinct_on: [auction_bid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_order_by!]

    """filter the rows returned"""
    where: auction_bid_bool_exp
  ): auction_bid_aggregate!
  bidTableId: Int
  bidTimeIncrement: Int!
  cancelledAt: timestamptz
  createdAt: timestamptz!
  endsAt: timestamptz
  fulfilledAt: timestamptz
  id: Int!
  minDuration: Int!

  """An object relationship"""
  objkt: objkt
  objktId: String
  objktIssuerVersion: generative_token_version
  reservePrice: bigint!
  sellerId: String

  """An object relationship"""
  user: user
  version: Int!
}

"""
aggregated selection of "auction"
"""
type auction_aggregate {
  aggregate: auction_aggregate_fields
  nodes: [auction!]!
}

input auction_aggregate_bool_exp {
  count: auction_aggregate_bool_exp_count
}

input auction_aggregate_bool_exp_count {
  arguments: [auction_select_column!]
  distinct: Boolean
  filter: auction_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "auction"
"""
type auction_aggregate_fields {
  avg: auction_avg_fields
  count(columns: [auction_select_column!], distinct: Boolean): Int!
  max: auction_max_fields
  min: auction_min_fields
  stddev: auction_stddev_fields
  stddev_pop: auction_stddev_pop_fields
  stddev_samp: auction_stddev_samp_fields
  sum: auction_sum_fields
  var_pop: auction_var_pop_fields
  var_samp: auction_var_samp_fields
  variance: auction_variance_fields
}

"""
order by aggregate values of table "auction"
"""
input auction_aggregate_order_by {
  avg: auction_avg_order_by
  count: order_by
  max: auction_max_order_by
  min: auction_min_order_by
  stddev: auction_stddev_order_by
  stddev_pop: auction_stddev_pop_order_by
  stddev_samp: auction_stddev_samp_order_by
  sum: auction_sum_order_by
  var_pop: auction_var_pop_order_by
  var_samp: auction_var_samp_order_by
  variance: auction_variance_order_by
}

"""
input type for inserting array relation for remote table "auction"
"""
input auction_arr_rel_insert_input {
  data: [auction_insert_input!]!

  """upsert condition"""
  on_conflict: auction_on_conflict
}

"""aggregate avg on columns"""
type auction_avg_fields {
  bidTableId: Float
  bidTimeIncrement: Float
  id: Float
  minDuration: Float
  reservePrice: Float
  version: Float
}

"""
order by avg() on columns of table "auction"
"""
input auction_avg_order_by {
  bidTableId: order_by
  bidTimeIncrement: order_by
  id: order_by
  minDuration: order_by
  reservePrice: order_by
  version: order_by
}

"""
columns and relationships of "auction_bid"
"""
type auction_bid {
  """An object relationship"""
  auction: auction
  auctionId: Int
  auctionVersion: Int
  bidderId: String
  createdAt: timestamptz!
  id: uuid!
  price: numeric!

  """An object relationship"""
  user: user
}

"""
aggregated selection of "auction_bid"
"""
type auction_bid_aggregate {
  aggregate: auction_bid_aggregate_fields
  nodes: [auction_bid!]!
}

input auction_bid_aggregate_bool_exp {
  count: auction_bid_aggregate_bool_exp_count
}

input auction_bid_aggregate_bool_exp_count {
  arguments: [auction_bid_select_column!]
  distinct: Boolean
  filter: auction_bid_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "auction_bid"
"""
type auction_bid_aggregate_fields {
  avg: auction_bid_avg_fields
  count(columns: [auction_bid_select_column!], distinct: Boolean): Int!
  max: auction_bid_max_fields
  min: auction_bid_min_fields
  stddev: auction_bid_stddev_fields
  stddev_pop: auction_bid_stddev_pop_fields
  stddev_samp: auction_bid_stddev_samp_fields
  sum: auction_bid_sum_fields
  var_pop: auction_bid_var_pop_fields
  var_samp: auction_bid_var_samp_fields
  variance: auction_bid_variance_fields
}

"""
order by aggregate values of table "auction_bid"
"""
input auction_bid_aggregate_order_by {
  avg: auction_bid_avg_order_by
  count: order_by
  max: auction_bid_max_order_by
  min: auction_bid_min_order_by
  stddev: auction_bid_stddev_order_by
  stddev_pop: auction_bid_stddev_pop_order_by
  stddev_samp: auction_bid_stddev_samp_order_by
  sum: auction_bid_sum_order_by
  var_pop: auction_bid_var_pop_order_by
  var_samp: auction_bid_var_samp_order_by
  variance: auction_bid_variance_order_by
}

"""
input type for inserting array relation for remote table "auction_bid"
"""
input auction_bid_arr_rel_insert_input {
  data: [auction_bid_insert_input!]!

  """upsert condition"""
  on_conflict: auction_bid_on_conflict
}

"""aggregate avg on columns"""
type auction_bid_avg_fields {
  auctionId: Float
  auctionVersion: Float
  price: Float
}

"""
order by avg() on columns of table "auction_bid"
"""
input auction_bid_avg_order_by {
  auctionId: order_by
  auctionVersion: order_by
  price: order_by
}

"""
Boolean expression to filter rows from the table "auction_bid". All fields are combined with a logical 'AND'.
"""
input auction_bid_bool_exp {
  _and: [auction_bid_bool_exp!]
  _not: auction_bid_bool_exp
  _or: [auction_bid_bool_exp!]
  auction: auction_bool_exp
  auctionId: Int_comparison_exp
  auctionVersion: Int_comparison_exp
  bidderId: String_comparison_exp
  createdAt: timestamptz_comparison_exp
  id: uuid_comparison_exp
  price: numeric_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "auction_bid"
"""
enum auction_bid_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_bb11c1cfa7707fac20673b28ef5
}

"""
input type for incrementing numeric columns in table "auction_bid"
"""
input auction_bid_inc_input {
  auctionId: Int
  auctionVersion: Int
  price: numeric
}

"""
input type for inserting data into table "auction_bid"
"""
input auction_bid_insert_input {
  auction: auction_obj_rel_insert_input
  auctionId: Int
  auctionVersion: Int
  bidderId: String
  createdAt: timestamptz
  id: uuid
  price: numeric
  user: user_obj_rel_insert_input
}

"""aggregate max on columns"""
type auction_bid_max_fields {
  auctionId: Int
  auctionVersion: Int
  bidderId: String
  createdAt: timestamptz
  id: uuid
  price: numeric
}

"""
order by max() on columns of table "auction_bid"
"""
input auction_bid_max_order_by {
  auctionId: order_by
  auctionVersion: order_by
  bidderId: order_by
  createdAt: order_by
  id: order_by
  price: order_by
}

"""aggregate min on columns"""
type auction_bid_min_fields {
  auctionId: Int
  auctionVersion: Int
  bidderId: String
  createdAt: timestamptz
  id: uuid
  price: numeric
}

"""
order by min() on columns of table "auction_bid"
"""
input auction_bid_min_order_by {
  auctionId: order_by
  auctionVersion: order_by
  bidderId: order_by
  createdAt: order_by
  id: order_by
  price: order_by
}

"""
response of any mutation on the table "auction_bid"
"""
type auction_bid_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [auction_bid!]!
}

"""
on_conflict condition type for table "auction_bid"
"""
input auction_bid_on_conflict {
  constraint: auction_bid_constraint!
  update_columns: [auction_bid_update_column!]! = []
  where: auction_bid_bool_exp
}

"""Ordering options when selecting data from "auction_bid"."""
input auction_bid_order_by {
  auction: auction_order_by
  auctionId: order_by
  auctionVersion: order_by
  bidderId: order_by
  createdAt: order_by
  id: order_by
  price: order_by
  user: user_order_by
}

"""primary key columns input for table: auction_bid"""
input auction_bid_pk_columns_input {
  id: uuid!
}

"""
select columns of table "auction_bid"
"""
enum auction_bid_select_column {
  """column name"""
  auctionId

  """column name"""
  auctionVersion

  """column name"""
  bidderId

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  price
}

"""
input type for updating data in table "auction_bid"
"""
input auction_bid_set_input {
  auctionId: Int
  auctionVersion: Int
  bidderId: String
  createdAt: timestamptz
  id: uuid
  price: numeric
}

"""aggregate stddev on columns"""
type auction_bid_stddev_fields {
  auctionId: Float
  auctionVersion: Float
  price: Float
}

"""
order by stddev() on columns of table "auction_bid"
"""
input auction_bid_stddev_order_by {
  auctionId: order_by
  auctionVersion: order_by
  price: order_by
}

"""aggregate stddev_pop on columns"""
type auction_bid_stddev_pop_fields {
  auctionId: Float
  auctionVersion: Float
  price: Float
}

"""
order by stddev_pop() on columns of table "auction_bid"
"""
input auction_bid_stddev_pop_order_by {
  auctionId: order_by
  auctionVersion: order_by
  price: order_by
}

"""aggregate stddev_samp on columns"""
type auction_bid_stddev_samp_fields {
  auctionId: Float
  auctionVersion: Float
  price: Float
}

"""
order by stddev_samp() on columns of table "auction_bid"
"""
input auction_bid_stddev_samp_order_by {
  auctionId: order_by
  auctionVersion: order_by
  price: order_by
}

"""
Streaming cursor of the table "auction_bid"
"""
input auction_bid_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: auction_bid_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input auction_bid_stream_cursor_value_input {
  auctionId: Int
  auctionVersion: Int
  bidderId: String
  createdAt: timestamptz
  id: uuid
  price: numeric
}

"""aggregate sum on columns"""
type auction_bid_sum_fields {
  auctionId: Int
  auctionVersion: Int
  price: numeric
}

"""
order by sum() on columns of table "auction_bid"
"""
input auction_bid_sum_order_by {
  auctionId: order_by
  auctionVersion: order_by
  price: order_by
}

"""
columns and relationships of "auction_bid_table"
"""
type auction_bid_table {
  """An array relationship"""
  auctions(
    """distinct select on columns"""
    distinct_on: [auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_order_by!]

    """filter the rows returned"""
    where: auction_bool_exp
  ): [auction!]!

  """An aggregate relationship"""
  auctions_aggregate(
    """distinct select on columns"""
    distinct_on: [auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_order_by!]

    """filter the rows returned"""
    where: auction_bool_exp
  ): auction_aggregate!
  id: Int!
  table(
    """JSON select path"""
    path: String
  ): jsonb!
}

"""
aggregated selection of "auction_bid_table"
"""
type auction_bid_table_aggregate {
  aggregate: auction_bid_table_aggregate_fields
  nodes: [auction_bid_table!]!
}

"""
aggregate fields of "auction_bid_table"
"""
type auction_bid_table_aggregate_fields {
  avg: auction_bid_table_avg_fields
  count(columns: [auction_bid_table_select_column!], distinct: Boolean): Int!
  max: auction_bid_table_max_fields
  min: auction_bid_table_min_fields
  stddev: auction_bid_table_stddev_fields
  stddev_pop: auction_bid_table_stddev_pop_fields
  stddev_samp: auction_bid_table_stddev_samp_fields
  sum: auction_bid_table_sum_fields
  var_pop: auction_bid_table_var_pop_fields
  var_samp: auction_bid_table_var_samp_fields
  variance: auction_bid_table_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input auction_bid_table_append_input {
  table: jsonb
}

"""aggregate avg on columns"""
type auction_bid_table_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "auction_bid_table". All fields are combined with a logical 'AND'.
"""
input auction_bid_table_bool_exp {
  _and: [auction_bid_table_bool_exp!]
  _not: auction_bid_table_bool_exp
  _or: [auction_bid_table_bool_exp!]
  auctions: auction_bool_exp
  auctions_aggregate: auction_aggregate_bool_exp
  id: Int_comparison_exp
  table: jsonb_comparison_exp
}

"""
unique or primary key constraints on table "auction_bid_table"
"""
enum auction_bid_table_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_57b09fff66c5df1611c7b595a10
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input auction_bid_table_delete_at_path_input {
  table: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input auction_bid_table_delete_elem_input {
  table: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input auction_bid_table_delete_key_input {
  table: String
}

"""
input type for incrementing numeric columns in table "auction_bid_table"
"""
input auction_bid_table_inc_input {
  id: Int
}

"""
input type for inserting data into table "auction_bid_table"
"""
input auction_bid_table_insert_input {
  auctions: auction_arr_rel_insert_input
  id: Int
  table: jsonb
}

"""aggregate max on columns"""
type auction_bid_table_max_fields {
  id: Int
}

"""aggregate min on columns"""
type auction_bid_table_min_fields {
  id: Int
}

"""
response of any mutation on the table "auction_bid_table"
"""
type auction_bid_table_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [auction_bid_table!]!
}

"""
input type for inserting object relation for remote table "auction_bid_table"
"""
input auction_bid_table_obj_rel_insert_input {
  data: auction_bid_table_insert_input!

  """upsert condition"""
  on_conflict: auction_bid_table_on_conflict
}

"""
on_conflict condition type for table "auction_bid_table"
"""
input auction_bid_table_on_conflict {
  constraint: auction_bid_table_constraint!
  update_columns: [auction_bid_table_update_column!]! = []
  where: auction_bid_table_bool_exp
}

"""Ordering options when selecting data from "auction_bid_table"."""
input auction_bid_table_order_by {
  auctions_aggregate: auction_aggregate_order_by
  id: order_by
  table: order_by
}

"""primary key columns input for table: auction_bid_table"""
input auction_bid_table_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input auction_bid_table_prepend_input {
  table: jsonb
}

"""
select columns of table "auction_bid_table"
"""
enum auction_bid_table_select_column {
  """column name"""
  id

  """column name"""
  table
}

"""
input type for updating data in table "auction_bid_table"
"""
input auction_bid_table_set_input {
  id: Int
  table: jsonb
}

"""aggregate stddev on columns"""
type auction_bid_table_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type auction_bid_table_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type auction_bid_table_stddev_samp_fields {
  id: Float
}

"""
Streaming cursor of the table "auction_bid_table"
"""
input auction_bid_table_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: auction_bid_table_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input auction_bid_table_stream_cursor_value_input {
  id: Int
  table: jsonb
}

"""aggregate sum on columns"""
type auction_bid_table_sum_fields {
  id: Int
}

"""
update columns of table "auction_bid_table"
"""
enum auction_bid_table_update_column {
  """column name"""
  id

  """column name"""
  table
}

input auction_bid_table_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: auction_bid_table_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: auction_bid_table_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: auction_bid_table_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: auction_bid_table_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: auction_bid_table_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: auction_bid_table_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: auction_bid_table_set_input

  """filter the rows which have to be updated"""
  where: auction_bid_table_bool_exp!
}

"""aggregate var_pop on columns"""
type auction_bid_table_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type auction_bid_table_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type auction_bid_table_variance_fields {
  id: Float
}

"""
update columns of table "auction_bid"
"""
enum auction_bid_update_column {
  """column name"""
  auctionId

  """column name"""
  auctionVersion

  """column name"""
  bidderId

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  price
}

input auction_bid_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: auction_bid_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: auction_bid_set_input

  """filter the rows which have to be updated"""
  where: auction_bid_bool_exp!
}

"""aggregate var_pop on columns"""
type auction_bid_var_pop_fields {
  auctionId: Float
  auctionVersion: Float
  price: Float
}

"""
order by var_pop() on columns of table "auction_bid"
"""
input auction_bid_var_pop_order_by {
  auctionId: order_by
  auctionVersion: order_by
  price: order_by
}

"""aggregate var_samp on columns"""
type auction_bid_var_samp_fields {
  auctionId: Float
  auctionVersion: Float
  price: Float
}

"""
order by var_samp() on columns of table "auction_bid"
"""
input auction_bid_var_samp_order_by {
  auctionId: order_by
  auctionVersion: order_by
  price: order_by
}

"""aggregate variance on columns"""
type auction_bid_variance_fields {
  auctionId: Float
  auctionVersion: Float
  price: Float
}

"""
order by variance() on columns of table "auction_bid"
"""
input auction_bid_variance_order_by {
  auctionId: order_by
  auctionVersion: order_by
  price: order_by
}

"""
Boolean expression to filter rows from the table "auction". All fields are combined with a logical 'AND'.
"""
input auction_bool_exp {
  _and: [auction_bool_exp!]
  _not: auction_bool_exp
  _or: [auction_bool_exp!]
  auction_bid_table: auction_bid_table_bool_exp
  auction_bids: auction_bid_bool_exp
  auction_bids_aggregate: auction_bid_aggregate_bool_exp
  bidTableId: Int_comparison_exp
  bidTimeIncrement: Int_comparison_exp
  cancelledAt: timestamptz_comparison_exp
  createdAt: timestamptz_comparison_exp
  endsAt: timestamptz_comparison_exp
  fulfilledAt: timestamptz_comparison_exp
  id: Int_comparison_exp
  minDuration: Int_comparison_exp
  objkt: objkt_bool_exp
  objktId: String_comparison_exp
  objktIssuerVersion: generative_token_version_comparison_exp
  reservePrice: bigint_comparison_exp
  sellerId: String_comparison_exp
  user: user_bool_exp
  version: Int_comparison_exp
}

"""
unique or primary key constraints on table "auction"
"""
enum auction_constraint {
  """
  unique or primary key constraint on columns "id", "version"
  """
  PK_b15570c9d210ca79ad2c9b4e398
}

"""
input type for incrementing numeric columns in table "auction"
"""
input auction_inc_input {
  bidTableId: Int
  bidTimeIncrement: Int
  id: Int
  minDuration: Int
  reservePrice: bigint
  version: Int
}

"""
input type for inserting data into table "auction"
"""
input auction_insert_input {
  auction_bid_table: auction_bid_table_obj_rel_insert_input
  auction_bids: auction_bid_arr_rel_insert_input
  bidTableId: Int
  bidTimeIncrement: Int
  cancelledAt: timestamptz
  createdAt: timestamptz
  endsAt: timestamptz
  fulfilledAt: timestamptz
  id: Int
  minDuration: Int
  objkt: objkt_obj_rel_insert_input
  objktId: String
  objktIssuerVersion: generative_token_version
  reservePrice: bigint
  sellerId: String
  user: user_obj_rel_insert_input
  version: Int
}

"""aggregate max on columns"""
type auction_max_fields {
  bidTableId: Int
  bidTimeIncrement: Int
  cancelledAt: timestamptz
  createdAt: timestamptz
  endsAt: timestamptz
  fulfilledAt: timestamptz
  id: Int
  minDuration: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  reservePrice: bigint
  sellerId: String
  version: Int
}

"""
order by max() on columns of table "auction"
"""
input auction_max_order_by {
  bidTableId: order_by
  bidTimeIncrement: order_by
  cancelledAt: order_by
  createdAt: order_by
  endsAt: order_by
  fulfilledAt: order_by
  id: order_by
  minDuration: order_by
  objktId: order_by
  objktIssuerVersion: order_by
  reservePrice: order_by
  sellerId: order_by
  version: order_by
}

"""aggregate min on columns"""
type auction_min_fields {
  bidTableId: Int
  bidTimeIncrement: Int
  cancelledAt: timestamptz
  createdAt: timestamptz
  endsAt: timestamptz
  fulfilledAt: timestamptz
  id: Int
  minDuration: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  reservePrice: bigint
  sellerId: String
  version: Int
}

"""
order by min() on columns of table "auction"
"""
input auction_min_order_by {
  bidTableId: order_by
  bidTimeIncrement: order_by
  cancelledAt: order_by
  createdAt: order_by
  endsAt: order_by
  fulfilledAt: order_by
  id: order_by
  minDuration: order_by
  objktId: order_by
  objktIssuerVersion: order_by
  reservePrice: order_by
  sellerId: order_by
  version: order_by
}

"""
response of any mutation on the table "auction"
"""
type auction_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [auction!]!
}

"""
input type for inserting object relation for remote table "auction"
"""
input auction_obj_rel_insert_input {
  data: auction_insert_input!

  """upsert condition"""
  on_conflict: auction_on_conflict
}

"""
on_conflict condition type for table "auction"
"""
input auction_on_conflict {
  constraint: auction_constraint!
  update_columns: [auction_update_column!]! = []
  where: auction_bool_exp
}

"""Ordering options when selecting data from "auction"."""
input auction_order_by {
  auction_bid_table: auction_bid_table_order_by
  auction_bids_aggregate: auction_bid_aggregate_order_by
  bidTableId: order_by
  bidTimeIncrement: order_by
  cancelledAt: order_by
  createdAt: order_by
  endsAt: order_by
  fulfilledAt: order_by
  id: order_by
  minDuration: order_by
  objkt: objkt_order_by
  objktId: order_by
  objktIssuerVersion: order_by
  reservePrice: order_by
  sellerId: order_by
  user: user_order_by
  version: order_by
}

"""primary key columns input for table: auction"""
input auction_pk_columns_input {
  id: Int!
  version: Int!
}

"""
select columns of table "auction"
"""
enum auction_select_column {
  """column name"""
  bidTableId

  """column name"""
  bidTimeIncrement

  """column name"""
  cancelledAt

  """column name"""
  createdAt

  """column name"""
  endsAt

  """column name"""
  fulfilledAt

  """column name"""
  id

  """column name"""
  minDuration

  """column name"""
  objktId

  """column name"""
  objktIssuerVersion

  """column name"""
  reservePrice

  """column name"""
  sellerId

  """column name"""
  version
}

"""
input type for updating data in table "auction"
"""
input auction_set_input {
  bidTableId: Int
  bidTimeIncrement: Int
  cancelledAt: timestamptz
  createdAt: timestamptz
  endsAt: timestamptz
  fulfilledAt: timestamptz
  id: Int
  minDuration: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  reservePrice: bigint
  sellerId: String
  version: Int
}

"""aggregate stddev on columns"""
type auction_stddev_fields {
  bidTableId: Float
  bidTimeIncrement: Float
  id: Float
  minDuration: Float
  reservePrice: Float
  version: Float
}

"""
order by stddev() on columns of table "auction"
"""
input auction_stddev_order_by {
  bidTableId: order_by
  bidTimeIncrement: order_by
  id: order_by
  minDuration: order_by
  reservePrice: order_by
  version: order_by
}

"""aggregate stddev_pop on columns"""
type auction_stddev_pop_fields {
  bidTableId: Float
  bidTimeIncrement: Float
  id: Float
  minDuration: Float
  reservePrice: Float
  version: Float
}

"""
order by stddev_pop() on columns of table "auction"
"""
input auction_stddev_pop_order_by {
  bidTableId: order_by
  bidTimeIncrement: order_by
  id: order_by
  minDuration: order_by
  reservePrice: order_by
  version: order_by
}

"""aggregate stddev_samp on columns"""
type auction_stddev_samp_fields {
  bidTableId: Float
  bidTimeIncrement: Float
  id: Float
  minDuration: Float
  reservePrice: Float
  version: Float
}

"""
order by stddev_samp() on columns of table "auction"
"""
input auction_stddev_samp_order_by {
  bidTableId: order_by
  bidTimeIncrement: order_by
  id: order_by
  minDuration: order_by
  reservePrice: order_by
  version: order_by
}

"""
Streaming cursor of the table "auction"
"""
input auction_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: auction_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input auction_stream_cursor_value_input {
  bidTableId: Int
  bidTimeIncrement: Int
  cancelledAt: timestamptz
  createdAt: timestamptz
  endsAt: timestamptz
  fulfilledAt: timestamptz
  id: Int
  minDuration: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  reservePrice: bigint
  sellerId: String
  version: Int
}

"""aggregate sum on columns"""
type auction_sum_fields {
  bidTableId: Int
  bidTimeIncrement: Int
  id: Int
  minDuration: Int
  reservePrice: bigint
  version: Int
}

"""
order by sum() on columns of table "auction"
"""
input auction_sum_order_by {
  bidTableId: order_by
  bidTimeIncrement: order_by
  id: order_by
  minDuration: order_by
  reservePrice: order_by
  version: order_by
}

"""
update columns of table "auction"
"""
enum auction_update_column {
  """column name"""
  bidTableId

  """column name"""
  bidTimeIncrement

  """column name"""
  cancelledAt

  """column name"""
  createdAt

  """column name"""
  endsAt

  """column name"""
  fulfilledAt

  """column name"""
  id

  """column name"""
  minDuration

  """column name"""
  objktId

  """column name"""
  objktIssuerVersion

  """column name"""
  reservePrice

  """column name"""
  sellerId

  """column name"""
  version
}

input auction_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: auction_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: auction_set_input

  """filter the rows which have to be updated"""
  where: auction_bool_exp!
}

"""aggregate var_pop on columns"""
type auction_var_pop_fields {
  bidTableId: Float
  bidTimeIncrement: Float
  id: Float
  minDuration: Float
  reservePrice: Float
  version: Float
}

"""
order by var_pop() on columns of table "auction"
"""
input auction_var_pop_order_by {
  bidTableId: order_by
  bidTimeIncrement: order_by
  id: order_by
  minDuration: order_by
  reservePrice: order_by
  version: order_by
}

"""aggregate var_samp on columns"""
type auction_var_samp_fields {
  bidTableId: Float
  bidTimeIncrement: Float
  id: Float
  minDuration: Float
  reservePrice: Float
  version: Float
}

"""
order by var_samp() on columns of table "auction"
"""
input auction_var_samp_order_by {
  bidTableId: order_by
  bidTimeIncrement: order_by
  id: order_by
  minDuration: order_by
  reservePrice: order_by
  version: order_by
}

"""aggregate variance on columns"""
type auction_variance_fields {
  bidTableId: Float
  bidTimeIncrement: Float
  id: Float
  minDuration: Float
  reservePrice: Float
  version: Float
}

"""
order by variance() on columns of table "auction"
"""
input auction_variance_order_by {
  bidTableId: order_by
  bidTimeIncrement: order_by
  id: order_by
  minDuration: order_by
  reservePrice: order_by
  version: order_by
}

scalar bigint

"""
Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint!]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint!]
}

scalar bpchar

"""
Boolean expression to compare columns of type "bpchar". All fields are combined with logical 'AND'.
"""
input bpchar_comparison_exp {
  _eq: bpchar
  _gt: bpchar
  _gte: bpchar

  """does the column match the given case-insensitive pattern"""
  _ilike: bpchar
  _in: [bpchar!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: bpchar
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: bpchar
  _lt: bpchar
  _lte: bpchar
  _neq: bpchar

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: bpchar
  _nin: [bpchar!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: bpchar

  """does the column NOT match the given pattern"""
  _nlike: bpchar

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: bpchar

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: bpchar

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: bpchar

  """does the column match the given SQL regular expression"""
  _similar: bpchar
}

"""
columns and relationships of "codex"
"""
type codex {
  authorId: String!

  """An array relationship"""
  generative_tokens(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): [generative_token!]!

  """An aggregate relationship"""
  generative_tokens_aggregate(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): generative_token_aggregate!
  id: String!
  locked: Boolean!
  tokenVersion: generative_token_version!
  type: codex_type_enum!

  """An object relationship"""
  user: user!
  value: String
}

"""
aggregated selection of "codex"
"""
type codex_aggregate {
  aggregate: codex_aggregate_fields
  nodes: [codex!]!
}

input codex_aggregate_bool_exp {
  bool_and: codex_aggregate_bool_exp_bool_and
  bool_or: codex_aggregate_bool_exp_bool_or
  count: codex_aggregate_bool_exp_count
}

input codex_aggregate_bool_exp_bool_and {
  arguments: codex_select_column_codex_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: codex_bool_exp
  predicate: Boolean_comparison_exp!
}

input codex_aggregate_bool_exp_bool_or {
  arguments: codex_select_column_codex_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: codex_bool_exp
  predicate: Boolean_comparison_exp!
}

input codex_aggregate_bool_exp_count {
  arguments: [codex_select_column!]
  distinct: Boolean
  filter: codex_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "codex"
"""
type codex_aggregate_fields {
  count(columns: [codex_select_column!], distinct: Boolean): Int!
  max: codex_max_fields
  min: codex_min_fields
}

"""
order by aggregate values of table "codex"
"""
input codex_aggregate_order_by {
  count: order_by
  max: codex_max_order_by
  min: codex_min_order_by
}

"""
input type for inserting array relation for remote table "codex"
"""
input codex_arr_rel_insert_input {
  data: [codex_insert_input!]!

  """upsert condition"""
  on_conflict: codex_on_conflict
}

"""
Boolean expression to filter rows from the table "codex". All fields are combined with a logical 'AND'.
"""
input codex_bool_exp {
  _and: [codex_bool_exp!]
  _not: codex_bool_exp
  _or: [codex_bool_exp!]
  authorId: String_comparison_exp
  generative_tokens: generative_token_bool_exp
  generative_tokens_aggregate: generative_token_aggregate_bool_exp
  id: String_comparison_exp
  locked: Boolean_comparison_exp
  tokenVersion: generative_token_version_comparison_exp
  type: codex_type_enum_comparison_exp
  user: user_bool_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "codex"
"""
enum codex_constraint {
  """
  unique or primary key constraint on columns "id", "tokenVersion"
  """
  PK_07fbfe73187e7e88161a075e619
}

"""
input type for inserting data into table "codex"
"""
input codex_insert_input {
  authorId: String
  generative_tokens: generative_token_arr_rel_insert_input
  id: String
  locked: Boolean
  tokenVersion: generative_token_version
  type: codex_type_enum
  user: user_obj_rel_insert_input
  value: String
}

"""aggregate max on columns"""
type codex_max_fields {
  authorId: String
  id: String
  tokenVersion: generative_token_version
  type: codex_type_enum
  value: String
}

"""
order by max() on columns of table "codex"
"""
input codex_max_order_by {
  authorId: order_by
  id: order_by
  tokenVersion: order_by
  type: order_by
  value: order_by
}

"""aggregate min on columns"""
type codex_min_fields {
  authorId: String
  id: String
  tokenVersion: generative_token_version
  type: codex_type_enum
  value: String
}

"""
order by min() on columns of table "codex"
"""
input codex_min_order_by {
  authorId: order_by
  id: order_by
  tokenVersion: order_by
  type: order_by
  value: order_by
}

"""
response of any mutation on the table "codex"
"""
type codex_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [codex!]!
}

"""
input type for inserting object relation for remote table "codex"
"""
input codex_obj_rel_insert_input {
  data: codex_insert_input!

  """upsert condition"""
  on_conflict: codex_on_conflict
}

"""
on_conflict condition type for table "codex"
"""
input codex_on_conflict {
  constraint: codex_constraint!
  update_columns: [codex_update_column!]! = []
  where: codex_bool_exp
}

"""Ordering options when selecting data from "codex"."""
input codex_order_by {
  authorId: order_by
  generative_tokens_aggregate: generative_token_aggregate_order_by
  id: order_by
  locked: order_by
  tokenVersion: order_by
  type: order_by
  user: user_order_by
  value: order_by
}

"""primary key columns input for table: codex"""
input codex_pk_columns_input {
  id: String!
  tokenVersion: generative_token_version!
}

"""
select columns of table "codex"
"""
enum codex_select_column {
  """column name"""
  authorId

  """column name"""
  id

  """column name"""
  locked

  """column name"""
  tokenVersion

  """column name"""
  type

  """column name"""
  value
}

"""
select "codex_aggregate_bool_exp_bool_and_arguments_columns" columns of table "codex"
"""
enum codex_select_column_codex_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  locked
}

"""
select "codex_aggregate_bool_exp_bool_or_arguments_columns" columns of table "codex"
"""
enum codex_select_column_codex_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  locked
}

"""
input type for updating data in table "codex"
"""
input codex_set_input {
  authorId: String
  id: String
  locked: Boolean
  tokenVersion: generative_token_version
  type: codex_type_enum
  value: String
}

"""
Streaming cursor of the table "codex"
"""
input codex_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: codex_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input codex_stream_cursor_value_input {
  authorId: String
  id: String
  locked: Boolean
  tokenVersion: generative_token_version
  type: codex_type_enum
  value: String
}

scalar codex_type_enum

"""
Boolean expression to compare columns of type "codex_type_enum". All fields are combined with logical 'AND'.
"""
input codex_type_enum_comparison_exp {
  _eq: codex_type_enum
  _gt: codex_type_enum
  _gte: codex_type_enum
  _in: [codex_type_enum!]
  _is_null: Boolean
  _lt: codex_type_enum
  _lte: codex_type_enum
  _neq: codex_type_enum
  _nin: [codex_type_enum!]
}

"""
update columns of table "codex"
"""
enum codex_update_column {
  """column name"""
  authorId

  """column name"""
  id

  """column name"""
  locked

  """column name"""
  tokenVersion

  """column name"""
  type

  """column name"""
  value
}

"""
columns and relationships of "codex_update_request"
"""
type codex_update_request {
  codexId: String!
  createdAt: timestamptz!

  """An object relationship"""
  generative_token: generative_token!
  status: codex_update_request_status_enum!
  tokenId: String!
  tokenVersion: generative_token_version!
}

"""
aggregated selection of "codex_update_request"
"""
type codex_update_request_aggregate {
  aggregate: codex_update_request_aggregate_fields
  nodes: [codex_update_request!]!
}

input codex_update_request_aggregate_bool_exp {
  count: codex_update_request_aggregate_bool_exp_count
}

input codex_update_request_aggregate_bool_exp_count {
  arguments: [codex_update_request_select_column!]
  distinct: Boolean
  filter: codex_update_request_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "codex_update_request"
"""
type codex_update_request_aggregate_fields {
  count(columns: [codex_update_request_select_column!], distinct: Boolean): Int!
  max: codex_update_request_max_fields
  min: codex_update_request_min_fields
}

"""
order by aggregate values of table "codex_update_request"
"""
input codex_update_request_aggregate_order_by {
  count: order_by
  max: codex_update_request_max_order_by
  min: codex_update_request_min_order_by
}

"""
input type for inserting array relation for remote table "codex_update_request"
"""
input codex_update_request_arr_rel_insert_input {
  data: [codex_update_request_insert_input!]!

  """upsert condition"""
  on_conflict: codex_update_request_on_conflict
}

"""
Boolean expression to filter rows from the table "codex_update_request". All fields are combined with a logical 'AND'.
"""
input codex_update_request_bool_exp {
  _and: [codex_update_request_bool_exp!]
  _not: codex_update_request_bool_exp
  _or: [codex_update_request_bool_exp!]
  codexId: String_comparison_exp
  createdAt: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  status: codex_update_request_status_enum_comparison_exp
  tokenId: String_comparison_exp
  tokenVersion: generative_token_version_comparison_exp
}

"""
unique or primary key constraints on table "codex_update_request"
"""
enum codex_update_request_constraint {
  """
  unique or primary key constraint on columns "codexId", "tokenVersion", "tokenId"
  """
  PK_0e0c981c9f22b4bcca228fb58ff
}

"""
input type for inserting data into table "codex_update_request"
"""
input codex_update_request_insert_input {
  codexId: String
  createdAt: timestamptz
  generative_token: generative_token_obj_rel_insert_input
  status: codex_update_request_status_enum
  tokenId: String
  tokenVersion: generative_token_version
}

"""aggregate max on columns"""
type codex_update_request_max_fields {
  codexId: String
  createdAt: timestamptz
  status: codex_update_request_status_enum
  tokenId: String
  tokenVersion: generative_token_version
}

"""
order by max() on columns of table "codex_update_request"
"""
input codex_update_request_max_order_by {
  codexId: order_by
  createdAt: order_by
  status: order_by
  tokenId: order_by
  tokenVersion: order_by
}

"""aggregate min on columns"""
type codex_update_request_min_fields {
  codexId: String
  createdAt: timestamptz
  status: codex_update_request_status_enum
  tokenId: String
  tokenVersion: generative_token_version
}

"""
order by min() on columns of table "codex_update_request"
"""
input codex_update_request_min_order_by {
  codexId: order_by
  createdAt: order_by
  status: order_by
  tokenId: order_by
  tokenVersion: order_by
}

"""
response of any mutation on the table "codex_update_request"
"""
type codex_update_request_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [codex_update_request!]!
}

"""
on_conflict condition type for table "codex_update_request"
"""
input codex_update_request_on_conflict {
  constraint: codex_update_request_constraint!
  update_columns: [codex_update_request_update_column!]! = []
  where: codex_update_request_bool_exp
}

"""Ordering options when selecting data from "codex_update_request"."""
input codex_update_request_order_by {
  codexId: order_by
  createdAt: order_by
  generative_token: generative_token_order_by
  status: order_by
  tokenId: order_by
  tokenVersion: order_by
}

"""primary key columns input for table: codex_update_request"""
input codex_update_request_pk_columns_input {
  codexId: String!
  tokenId: String!
  tokenVersion: generative_token_version!
}

"""
select columns of table "codex_update_request"
"""
enum codex_update_request_select_column {
  """column name"""
  codexId

  """column name"""
  createdAt

  """column name"""
  status

  """column name"""
  tokenId

  """column name"""
  tokenVersion
}

"""
input type for updating data in table "codex_update_request"
"""
input codex_update_request_set_input {
  codexId: String
  createdAt: timestamptz
  status: codex_update_request_status_enum
  tokenId: String
  tokenVersion: generative_token_version
}

scalar codex_update_request_status_enum

"""
Boolean expression to compare columns of type "codex_update_request_status_enum". All fields are combined with logical 'AND'.
"""
input codex_update_request_status_enum_comparison_exp {
  _eq: codex_update_request_status_enum
  _gt: codex_update_request_status_enum
  _gte: codex_update_request_status_enum
  _in: [codex_update_request_status_enum!]
  _is_null: Boolean
  _lt: codex_update_request_status_enum
  _lte: codex_update_request_status_enum
  _neq: codex_update_request_status_enum
  _nin: [codex_update_request_status_enum!]
}

"""
Streaming cursor of the table "codex_update_request"
"""
input codex_update_request_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: codex_update_request_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input codex_update_request_stream_cursor_value_input {
  codexId: String
  createdAt: timestamptz
  status: codex_update_request_status_enum
  tokenId: String
  tokenVersion: generative_token_version
}

"""
update columns of table "codex_update_request"
"""
enum codex_update_request_update_column {
  """column name"""
  codexId

  """column name"""
  createdAt

  """column name"""
  status

  """column name"""
  tokenId

  """column name"""
  tokenVersion
}

input codex_update_request_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: codex_update_request_set_input

  """filter the rows which have to be updated"""
  where: codex_update_request_bool_exp!
}

input codex_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: codex_set_input

  """filter the rows which have to be updated"""
  where: codex_bool_exp!
}

"""
columns and relationships of "collaboration"
"""
type collaboration {
  collaborationContractId: String!
  collaboratorId: String!

  """An object relationship"""
  user: user!

  """An object relationship"""
  userByCollaborationcontractid: user!
}

"""
aggregated selection of "collaboration"
"""
type collaboration_aggregate {
  aggregate: collaboration_aggregate_fields
  nodes: [collaboration!]!
}

input collaboration_aggregate_bool_exp {
  count: collaboration_aggregate_bool_exp_count
}

input collaboration_aggregate_bool_exp_count {
  arguments: [collaboration_select_column!]
  distinct: Boolean
  filter: collaboration_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "collaboration"
"""
type collaboration_aggregate_fields {
  count(columns: [collaboration_select_column!], distinct: Boolean): Int!
  max: collaboration_max_fields
  min: collaboration_min_fields
}

"""
order by aggregate values of table "collaboration"
"""
input collaboration_aggregate_order_by {
  count: order_by
  max: collaboration_max_order_by
  min: collaboration_min_order_by
}

"""
input type for inserting array relation for remote table "collaboration"
"""
input collaboration_arr_rel_insert_input {
  data: [collaboration_insert_input!]!

  """upsert condition"""
  on_conflict: collaboration_on_conflict
}

"""
Boolean expression to filter rows from the table "collaboration". All fields are combined with a logical 'AND'.
"""
input collaboration_bool_exp {
  _and: [collaboration_bool_exp!]
  _not: collaboration_bool_exp
  _or: [collaboration_bool_exp!]
  collaborationContractId: String_comparison_exp
  collaboratorId: String_comparison_exp
  user: user_bool_exp
  userByCollaborationcontractid: user_bool_exp
}

"""
unique or primary key constraints on table "collaboration"
"""
enum collaboration_constraint {
  """
  unique or primary key constraint on columns "collaboratorId", "collaborationContractId"
  """
  PK_be39ef453172bf8f2f4c1966c8f
}

"""
input type for inserting data into table "collaboration"
"""
input collaboration_insert_input {
  collaborationContractId: String
  collaboratorId: String
  user: user_obj_rel_insert_input
  userByCollaborationcontractid: user_obj_rel_insert_input
}

"""aggregate max on columns"""
type collaboration_max_fields {
  collaborationContractId: String
  collaboratorId: String
}

"""
order by max() on columns of table "collaboration"
"""
input collaboration_max_order_by {
  collaborationContractId: order_by
  collaboratorId: order_by
}

"""aggregate min on columns"""
type collaboration_min_fields {
  collaborationContractId: String
  collaboratorId: String
}

"""
order by min() on columns of table "collaboration"
"""
input collaboration_min_order_by {
  collaborationContractId: order_by
  collaboratorId: order_by
}

"""
response of any mutation on the table "collaboration"
"""
type collaboration_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [collaboration!]!
}

"""
on_conflict condition type for table "collaboration"
"""
input collaboration_on_conflict {
  constraint: collaboration_constraint!
  update_columns: [collaboration_update_column!]! = []
  where: collaboration_bool_exp
}

"""Ordering options when selecting data from "collaboration"."""
input collaboration_order_by {
  collaborationContractId: order_by
  collaboratorId: order_by
  user: user_order_by
  userByCollaborationcontractid: user_order_by
}

"""primary key columns input for table: collaboration"""
input collaboration_pk_columns_input {
  collaborationContractId: String!
  collaboratorId: String!
}

"""
select columns of table "collaboration"
"""
enum collaboration_select_column {
  """column name"""
  collaborationContractId

  """column name"""
  collaboratorId
}

"""
input type for updating data in table "collaboration"
"""
input collaboration_set_input {
  collaborationContractId: String
  collaboratorId: String
}

"""
Streaming cursor of the table "collaboration"
"""
input collaboration_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: collaboration_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input collaboration_stream_cursor_value_input {
  collaborationContractId: String
  collaboratorId: String
}

"""
update columns of table "collaboration"
"""
enum collaboration_update_column {
  """column name"""
  collaborationContractId

  """column name"""
  collaboratorId
}

input collaboration_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: collaboration_set_input

  """filter the rows which have to be updated"""
  where: collaboration_bool_exp!
}

"""
columns and relationships of "collection_offer"
"""
type collection_offer {
  amount: numeric!
  buyerId: String!
  cancelledAt: timestamptz
  completedAt: timestamptz
  createdAt: timestamptz!

  """An object relationship"""
  generative_token: generative_token!
  id: String!
  initialAmount: numeric!
  price: numeric!
  tokenId: String!

  """An object relationship"""
  user: user!
  version: Int!
}

"""
aggregated selection of "collection_offer"
"""
type collection_offer_aggregate {
  aggregate: collection_offer_aggregate_fields
  nodes: [collection_offer!]!
}

input collection_offer_aggregate_bool_exp {
  count: collection_offer_aggregate_bool_exp_count
}

input collection_offer_aggregate_bool_exp_count {
  arguments: [collection_offer_select_column!]
  distinct: Boolean
  filter: collection_offer_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "collection_offer"
"""
type collection_offer_aggregate_fields {
  avg: collection_offer_avg_fields
  count(columns: [collection_offer_select_column!], distinct: Boolean): Int!
  max: collection_offer_max_fields
  min: collection_offer_min_fields
  stddev: collection_offer_stddev_fields
  stddev_pop: collection_offer_stddev_pop_fields
  stddev_samp: collection_offer_stddev_samp_fields
  sum: collection_offer_sum_fields
  var_pop: collection_offer_var_pop_fields
  var_samp: collection_offer_var_samp_fields
  variance: collection_offer_variance_fields
}

"""
order by aggregate values of table "collection_offer"
"""
input collection_offer_aggregate_order_by {
  avg: collection_offer_avg_order_by
  count: order_by
  max: collection_offer_max_order_by
  min: collection_offer_min_order_by
  stddev: collection_offer_stddev_order_by
  stddev_pop: collection_offer_stddev_pop_order_by
  stddev_samp: collection_offer_stddev_samp_order_by
  sum: collection_offer_sum_order_by
  var_pop: collection_offer_var_pop_order_by
  var_samp: collection_offer_var_samp_order_by
  variance: collection_offer_variance_order_by
}

"""
input type for inserting array relation for remote table "collection_offer"
"""
input collection_offer_arr_rel_insert_input {
  data: [collection_offer_insert_input!]!

  """upsert condition"""
  on_conflict: collection_offer_on_conflict
}

"""aggregate avg on columns"""
type collection_offer_avg_fields {
  amount: Float
  initialAmount: Float
  price: Float
  version: Float
}

"""
order by avg() on columns of table "collection_offer"
"""
input collection_offer_avg_order_by {
  amount: order_by
  initialAmount: order_by
  price: order_by
  version: order_by
}

"""
Boolean expression to filter rows from the table "collection_offer". All fields are combined with a logical 'AND'.
"""
input collection_offer_bool_exp {
  _and: [collection_offer_bool_exp!]
  _not: collection_offer_bool_exp
  _or: [collection_offer_bool_exp!]
  amount: numeric_comparison_exp
  buyerId: String_comparison_exp
  cancelledAt: timestamptz_comparison_exp
  completedAt: timestamptz_comparison_exp
  createdAt: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  id: String_comparison_exp
  initialAmount: numeric_comparison_exp
  price: numeric_comparison_exp
  tokenId: String_comparison_exp
  user: user_bool_exp
  version: Int_comparison_exp
}

"""
unique or primary key constraints on table "collection_offer"
"""
enum collection_offer_constraint {
  """
  unique or primary key constraint on columns "id", "version"
  """
  PK_a367623ce45dde246af6122e71e
}

"""
input type for incrementing numeric columns in table "collection_offer"
"""
input collection_offer_inc_input {
  amount: numeric
  initialAmount: numeric
  price: numeric
  version: Int
}

"""
input type for inserting data into table "collection_offer"
"""
input collection_offer_insert_input {
  amount: numeric
  buyerId: String
  cancelledAt: timestamptz
  completedAt: timestamptz
  createdAt: timestamptz
  generative_token: generative_token_obj_rel_insert_input
  id: String
  initialAmount: numeric
  price: numeric
  tokenId: String
  user: user_obj_rel_insert_input
  version: Int
}

"""aggregate max on columns"""
type collection_offer_max_fields {
  amount: numeric
  buyerId: String
  cancelledAt: timestamptz
  completedAt: timestamptz
  createdAt: timestamptz
  id: String
  initialAmount: numeric
  price: numeric
  tokenId: String
  version: Int
}

"""
order by max() on columns of table "collection_offer"
"""
input collection_offer_max_order_by {
  amount: order_by
  buyerId: order_by
  cancelledAt: order_by
  completedAt: order_by
  createdAt: order_by
  id: order_by
  initialAmount: order_by
  price: order_by
  tokenId: order_by
  version: order_by
}

"""aggregate min on columns"""
type collection_offer_min_fields {
  amount: numeric
  buyerId: String
  cancelledAt: timestamptz
  completedAt: timestamptz
  createdAt: timestamptz
  id: String
  initialAmount: numeric
  price: numeric
  tokenId: String
  version: Int
}

"""
order by min() on columns of table "collection_offer"
"""
input collection_offer_min_order_by {
  amount: order_by
  buyerId: order_by
  cancelledAt: order_by
  completedAt: order_by
  createdAt: order_by
  id: order_by
  initialAmount: order_by
  price: order_by
  tokenId: order_by
  version: order_by
}

"""
response of any mutation on the table "collection_offer"
"""
type collection_offer_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [collection_offer!]!
}

"""
on_conflict condition type for table "collection_offer"
"""
input collection_offer_on_conflict {
  constraint: collection_offer_constraint!
  update_columns: [collection_offer_update_column!]! = []
  where: collection_offer_bool_exp
}

"""Ordering options when selecting data from "collection_offer"."""
input collection_offer_order_by {
  amount: order_by
  buyerId: order_by
  cancelledAt: order_by
  completedAt: order_by
  createdAt: order_by
  generative_token: generative_token_order_by
  id: order_by
  initialAmount: order_by
  price: order_by
  tokenId: order_by
  user: user_order_by
  version: order_by
}

"""primary key columns input for table: collection_offer"""
input collection_offer_pk_columns_input {
  id: String!
  version: Int!
}

"""
select columns of table "collection_offer"
"""
enum collection_offer_select_column {
  """column name"""
  amount

  """column name"""
  buyerId

  """column name"""
  cancelledAt

  """column name"""
  completedAt

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  initialAmount

  """column name"""
  price

  """column name"""
  tokenId

  """column name"""
  version
}

"""
input type for updating data in table "collection_offer"
"""
input collection_offer_set_input {
  amount: numeric
  buyerId: String
  cancelledAt: timestamptz
  completedAt: timestamptz
  createdAt: timestamptz
  id: String
  initialAmount: numeric
  price: numeric
  tokenId: String
  version: Int
}

"""aggregate stddev on columns"""
type collection_offer_stddev_fields {
  amount: Float
  initialAmount: Float
  price: Float
  version: Float
}

"""
order by stddev() on columns of table "collection_offer"
"""
input collection_offer_stddev_order_by {
  amount: order_by
  initialAmount: order_by
  price: order_by
  version: order_by
}

"""aggregate stddev_pop on columns"""
type collection_offer_stddev_pop_fields {
  amount: Float
  initialAmount: Float
  price: Float
  version: Float
}

"""
order by stddev_pop() on columns of table "collection_offer"
"""
input collection_offer_stddev_pop_order_by {
  amount: order_by
  initialAmount: order_by
  price: order_by
  version: order_by
}

"""aggregate stddev_samp on columns"""
type collection_offer_stddev_samp_fields {
  amount: Float
  initialAmount: Float
  price: Float
  version: Float
}

"""
order by stddev_samp() on columns of table "collection_offer"
"""
input collection_offer_stddev_samp_order_by {
  amount: order_by
  initialAmount: order_by
  price: order_by
  version: order_by
}

"""
Streaming cursor of the table "collection_offer"
"""
input collection_offer_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: collection_offer_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input collection_offer_stream_cursor_value_input {
  amount: numeric
  buyerId: String
  cancelledAt: timestamptz
  completedAt: timestamptz
  createdAt: timestamptz
  id: String
  initialAmount: numeric
  price: numeric
  tokenId: String
  version: Int
}

"""aggregate sum on columns"""
type collection_offer_sum_fields {
  amount: numeric
  initialAmount: numeric
  price: numeric
  version: Int
}

"""
order by sum() on columns of table "collection_offer"
"""
input collection_offer_sum_order_by {
  amount: order_by
  initialAmount: order_by
  price: order_by
  version: order_by
}

"""
update columns of table "collection_offer"
"""
enum collection_offer_update_column {
  """column name"""
  amount

  """column name"""
  buyerId

  """column name"""
  cancelledAt

  """column name"""
  completedAt

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  initialAmount

  """column name"""
  price

  """column name"""
  tokenId

  """column name"""
  version
}

input collection_offer_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: collection_offer_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: collection_offer_set_input

  """filter the rows which have to be updated"""
  where: collection_offer_bool_exp!
}

"""aggregate var_pop on columns"""
type collection_offer_var_pop_fields {
  amount: Float
  initialAmount: Float
  price: Float
  version: Float
}

"""
order by var_pop() on columns of table "collection_offer"
"""
input collection_offer_var_pop_order_by {
  amount: order_by
  initialAmount: order_by
  price: order_by
  version: order_by
}

"""aggregate var_samp on columns"""
type collection_offer_var_samp_fields {
  amount: Float
  initialAmount: Float
  price: Float
  version: Float
}

"""
order by var_samp() on columns of table "collection_offer"
"""
input collection_offer_var_samp_order_by {
  amount: order_by
  initialAmount: order_by
  price: order_by
  version: order_by
}

"""aggregate variance on columns"""
type collection_offer_variance_fields {
  amount: Float
  initialAmount: Float
  price: Float
  version: Float
}

"""
order by variance() on columns of table "collection_offer"
"""
input collection_offer_variance_order_by {
  amount: order_by
  initialAmount: order_by
  price: order_by
  version: order_by
}

"""ordering argument of a cursor"""
enum cursor_ordering {
  """ascending ordering of the cursor"""
  ASC

  """descending ordering of the cursor"""
  DESC
}

scalar float8

"""
Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'.
"""
input float8_comparison_exp {
  _eq: float8
  _gt: float8
  _gte: float8
  _in: [float8!]
  _is_null: Boolean
  _lt: float8
  _lte: float8
  _neq: float8
  _nin: [float8!]
}

"""
columns and relationships of "generative_token"
"""
type generative_token {
  """An array relationship"""
  actions(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """An aggregate relationship"""
  actions_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!
  authorId: String
  balance: numeric!
  captureMediaId: bpchar

  """An object relationship"""
  codex: codex
  codexId: String

  """An array relationship"""
  codex_update_requests(
    """distinct select on columns"""
    distinct_on: [codex_update_request_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_update_request_order_by!]

    """filter the rows returned"""
    where: codex_update_request_bool_exp
  ): [codex_update_request!]!

  """An aggregate relationship"""
  codex_update_requests_aggregate(
    """distinct select on columns"""
    distinct_on: [codex_update_request_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_update_request_order_by!]

    """filter the rows returned"""
    where: codex_update_request_bool_exp
  ): codex_update_request_aggregate!

  """An array relationship"""
  collection_offers(
    """distinct select on columns"""
    distinct_on: [collection_offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collection_offer_order_by!]

    """filter the rows returned"""
    where: collection_offer_bool_exp
  ): [collection_offer!]!

  """An aggregate relationship"""
  collection_offers_aggregate(
    """distinct select on columns"""
    distinct_on: [collection_offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collection_offer_order_by!]

    """filter the rows returned"""
    where: collection_offer_bool_exp
  ): collection_offer_aggregate!
  createdAt: timestamptz!
  displayUri: String
  enabled: Boolean!
  flag: generative_token_flag_enum!
  generativeUri: String
  id: String!
  inputBytesSize: Int!
  iterationsCount: numeric
  labels: _int4!
  lockEnd: timestamptz!
  lockPriceForReserves: Boolean!
  lockedSeconds: Int!

  """An object relationship"""
  market_stat: market_stats

  """An array relationship"""
  market_stats_histories(
    """distinct select on columns"""
    distinct_on: [market_stats_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_history_order_by!]

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): [market_stats_history!]!

  """An aggregate relationship"""
  market_stats_histories_aggregate(
    """distinct select on columns"""
    distinct_on: [market_stats_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_history_order_by!]

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): market_stats_history_aggregate!

  """An object relationship"""
  media_image: media_image
  metadata(
    """JSON select path"""
    path: String
  ): json
  metadataUri: String
  mintOpensAt: timestamptz!

  """An object relationship"""
  mint_ticket_setting: mint_ticket_settings

  """An array relationship"""
  mint_tickets(
    """distinct select on columns"""
    distinct_on: [mint_ticket_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_order_by!]

    """filter the rows returned"""
    where: mint_ticket_bool_exp
  ): [mint_ticket!]!

  """An aggregate relationship"""
  mint_tickets_aggregate(
    """distinct select on columns"""
    distinct_on: [mint_ticket_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_order_by!]

    """filter the rows returned"""
    where: mint_ticket_bool_exp
  ): mint_ticket_aggregate!
  moderationReasonId: String

  """An object relationship"""
  moderation_reason: moderation_reason
  name: String

  """An array relationship"""
  objkts(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): [objkt!]!

  """An aggregate relationship"""
  objkts_aggregate(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): objkt_aggregate!
  openEditions: Boolean!
  openEditionsEndsAt: timestamptz
  originalSupply: numeric!
  paramsDefinition(
    """JSON select path"""
    path: String
  ): json
  previewInputBytes: String

  """An object relationship"""
  pricing_dutch_auction: pricing_dutch_auction

  """An object relationship"""
  pricing_fixed: pricing_fixed

  """An array relationship"""
  redeemables(
    """distinct select on columns"""
    distinct_on: [redeemable_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redeemable_order_by!]

    """filter the rows returned"""
    where: redeemable_bool_exp
  ): [redeemable!]!

  """An aggregate relationship"""
  redeemables_aggregate(
    """distinct select on columns"""
    distinct_on: [redeemable_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redeemable_order_by!]

    """filter the rows returned"""
    where: redeemable_bool_exp
  ): redeemable_aggregate!

  """An array relationship"""
  reports(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!

  """An aggregate relationship"""
  reports_aggregate(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): report_aggregate!

  """An array relationship"""
  reserves(
    """distinct select on columns"""
    distinct_on: [reserve_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reserve_order_by!]

    """filter the rows returned"""
    where: reserve_bool_exp
  ): [reserve!]!

  """An aggregate relationship"""
  reserves_aggregate(
    """distinct select on columns"""
    distinct_on: [reserve_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reserve_order_by!]

    """filter the rows returned"""
    where: reserve_bool_exp
  ): reserve_aggregate!
  royalties: Int!
  slug: String

  """An array relationship"""
  splits(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!

  """An array relationship"""
  splitsByGenerativetokensecondaryid(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!

  """An aggregate relationship"""
  splitsByGenerativetokensecondaryid_aggregate(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): split_aggregate!

  """An aggregate relationship"""
  splits_aggregate(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): split_aggregate!
  supply: numeric!
  tags: _text
  thumbnailUri: String

  """An array relationship"""
  transactions(
    """distinct select on columns"""
    distinct_on: [transaction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [transaction_order_by!]

    """filter the rows returned"""
    where: transaction_bool_exp
  ): [transaction!]!

  """An aggregate relationship"""
  transactions_aggregate(
    """distinct select on columns"""
    distinct_on: [transaction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [transaction_order_by!]

    """filter the rows returned"""
    where: transaction_bool_exp
  ): transaction_aggregate!
  updatedAt: timestamptz

  """An object relationship"""
  user: user
  version: generative_token_version!
}

"""
aggregated selection of "generative_token"
"""
type generative_token_aggregate {
  aggregate: generative_token_aggregate_fields
  nodes: [generative_token!]!
}

input generative_token_aggregate_bool_exp {
  bool_and: generative_token_aggregate_bool_exp_bool_and
  bool_or: generative_token_aggregate_bool_exp_bool_or
  count: generative_token_aggregate_bool_exp_count
}

input generative_token_aggregate_bool_exp_bool_and {
  arguments: generative_token_select_column_generative_token_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: generative_token_bool_exp
  predicate: Boolean_comparison_exp!
}

input generative_token_aggregate_bool_exp_bool_or {
  arguments: generative_token_select_column_generative_token_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: generative_token_bool_exp
  predicate: Boolean_comparison_exp!
}

input generative_token_aggregate_bool_exp_count {
  arguments: [generative_token_select_column!]
  distinct: Boolean
  filter: generative_token_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "generative_token"
"""
type generative_token_aggregate_fields {
  avg: generative_token_avg_fields
  count(columns: [generative_token_select_column!], distinct: Boolean): Int!
  max: generative_token_max_fields
  min: generative_token_min_fields
  stddev: generative_token_stddev_fields
  stddev_pop: generative_token_stddev_pop_fields
  stddev_samp: generative_token_stddev_samp_fields
  sum: generative_token_sum_fields
  var_pop: generative_token_var_pop_fields
  var_samp: generative_token_var_samp_fields
  variance: generative_token_variance_fields
}

"""
order by aggregate values of table "generative_token"
"""
input generative_token_aggregate_order_by {
  avg: generative_token_avg_order_by
  count: order_by
  max: generative_token_max_order_by
  min: generative_token_min_order_by
  stddev: generative_token_stddev_order_by
  stddev_pop: generative_token_stddev_pop_order_by
  stddev_samp: generative_token_stddev_samp_order_by
  sum: generative_token_sum_order_by
  var_pop: generative_token_var_pop_order_by
  var_samp: generative_token_var_samp_order_by
  variance: generative_token_variance_order_by
}

"""
input type for inserting array relation for remote table "generative_token"
"""
input generative_token_arr_rel_insert_input {
  data: [generative_token_insert_input!]!

  """upsert condition"""
  on_conflict: generative_token_on_conflict
}

"""aggregate avg on columns"""
type generative_token_avg_fields {
  balance: Float
  inputBytesSize: Float
  iterationsCount: Float
  lockedSeconds: Float
  originalSupply: Float
  royalties: Float
  supply: Float
}

"""
order by avg() on columns of table "generative_token"
"""
input generative_token_avg_order_by {
  balance: order_by
  inputBytesSize: order_by
  iterationsCount: order_by
  lockedSeconds: order_by
  originalSupply: order_by
  royalties: order_by
  supply: order_by
}

"""
Boolean expression to filter rows from the table "generative_token". All fields are combined with a logical 'AND'.
"""
input generative_token_bool_exp {
  _and: [generative_token_bool_exp!]
  _not: generative_token_bool_exp
  _or: [generative_token_bool_exp!]
  actions: action_bool_exp
  actions_aggregate: action_aggregate_bool_exp
  authorId: String_comparison_exp
  balance: numeric_comparison_exp
  captureMediaId: bpchar_comparison_exp
  codex: codex_bool_exp
  codexId: String_comparison_exp
  codex_update_requests: codex_update_request_bool_exp
  codex_update_requests_aggregate: codex_update_request_aggregate_bool_exp
  collection_offers: collection_offer_bool_exp
  collection_offers_aggregate: collection_offer_aggregate_bool_exp
  createdAt: timestamptz_comparison_exp
  displayUri: String_comparison_exp
  enabled: Boolean_comparison_exp
  flag: generative_token_flag_enum_comparison_exp
  generativeUri: String_comparison_exp
  id: String_comparison_exp
  inputBytesSize: Int_comparison_exp
  iterationsCount: numeric_comparison_exp
  labels: _int4_comparison_exp
  lockEnd: timestamptz_comparison_exp
  lockPriceForReserves: Boolean_comparison_exp
  lockedSeconds: Int_comparison_exp
  market_stat: market_stats_bool_exp
  market_stats_histories: market_stats_history_bool_exp
  market_stats_histories_aggregate: market_stats_history_aggregate_bool_exp
  media_image: media_image_bool_exp
  metadata: json_comparison_exp
  metadataUri: String_comparison_exp
  mintOpensAt: timestamptz_comparison_exp
  mint_ticket_setting: mint_ticket_settings_bool_exp
  mint_tickets: mint_ticket_bool_exp
  mint_tickets_aggregate: mint_ticket_aggregate_bool_exp
  moderationReasonId: String_comparison_exp
  moderation_reason: moderation_reason_bool_exp
  name: String_comparison_exp
  objkts: objkt_bool_exp
  objkts_aggregate: objkt_aggregate_bool_exp
  openEditions: Boolean_comparison_exp
  openEditionsEndsAt: timestamptz_comparison_exp
  originalSupply: numeric_comparison_exp
  paramsDefinition: json_comparison_exp
  previewInputBytes: String_comparison_exp
  pricing_dutch_auction: pricing_dutch_auction_bool_exp
  pricing_fixed: pricing_fixed_bool_exp
  redeemables: redeemable_bool_exp
  redeemables_aggregate: redeemable_aggregate_bool_exp
  reports: report_bool_exp
  reports_aggregate: report_aggregate_bool_exp
  reserves: reserve_bool_exp
  reserves_aggregate: reserve_aggregate_bool_exp
  royalties: Int_comparison_exp
  slug: String_comparison_exp
  splits: split_bool_exp
  splitsByGenerativetokensecondaryid: split_bool_exp
  splitsByGenerativetokensecondaryid_aggregate: split_aggregate_bool_exp
  splits_aggregate: split_aggregate_bool_exp
  supply: numeric_comparison_exp
  tags: _text_comparison_exp
  thumbnailUri: String_comparison_exp
  transactions: transaction_bool_exp
  transactions_aggregate: transaction_aggregate_bool_exp
  updatedAt: timestamptz_comparison_exp
  user: user_bool_exp
  version: generative_token_version_comparison_exp
}

"""
unique or primary key constraints on table "generative_token"
"""
enum generative_token_constraint {
  """
  unique or primary key constraint on columns "slug"
  """
  IDX_d05e635a41301df6701d7be2d3

  """
  unique or primary key constraint on columns "id"
  """
  PK_cb76f91024475ec70a1625b1b27
}

scalar generative_token_flag_enum

"""
Boolean expression to compare columns of type "generative_token_flag_enum". All fields are combined with logical 'AND'.
"""
input generative_token_flag_enum_comparison_exp {
  _eq: generative_token_flag_enum
  _gt: generative_token_flag_enum
  _gte: generative_token_flag_enum
  _in: [generative_token_flag_enum!]
  _is_null: Boolean
  _lt: generative_token_flag_enum
  _lte: generative_token_flag_enum
  _neq: generative_token_flag_enum
  _nin: [generative_token_flag_enum!]
}

"""
input type for incrementing numeric columns in table "generative_token"
"""
input generative_token_inc_input {
  balance: numeric
  inputBytesSize: Int
  iterationsCount: numeric
  lockedSeconds: Int
  originalSupply: numeric
  royalties: Int
  supply: numeric
}

"""
input type for inserting data into table "generative_token"
"""
input generative_token_insert_input {
  actions: action_arr_rel_insert_input
  authorId: String
  balance: numeric
  captureMediaId: bpchar
  codex: codex_obj_rel_insert_input
  codexId: String
  codex_update_requests: codex_update_request_arr_rel_insert_input
  collection_offers: collection_offer_arr_rel_insert_input
  createdAt: timestamptz
  displayUri: String
  enabled: Boolean
  flag: generative_token_flag_enum
  generativeUri: String
  id: String
  inputBytesSize: Int
  iterationsCount: numeric
  labels: _int4
  lockEnd: timestamptz
  lockPriceForReserves: Boolean
  lockedSeconds: Int
  market_stat: market_stats_obj_rel_insert_input
  market_stats_histories: market_stats_history_arr_rel_insert_input
  media_image: media_image_obj_rel_insert_input
  metadata: json
  metadataUri: String
  mintOpensAt: timestamptz
  mint_ticket_setting: mint_ticket_settings_obj_rel_insert_input
  mint_tickets: mint_ticket_arr_rel_insert_input
  moderationReasonId: String
  moderation_reason: moderation_reason_obj_rel_insert_input
  name: String
  objkts: objkt_arr_rel_insert_input
  openEditions: Boolean
  openEditionsEndsAt: timestamptz
  originalSupply: numeric
  paramsDefinition: json
  previewInputBytes: String
  pricing_dutch_auction: pricing_dutch_auction_obj_rel_insert_input
  pricing_fixed: pricing_fixed_obj_rel_insert_input
  redeemables: redeemable_arr_rel_insert_input
  reports: report_arr_rel_insert_input
  reserves: reserve_arr_rel_insert_input
  royalties: Int
  slug: String
  splits: split_arr_rel_insert_input
  splitsByGenerativetokensecondaryid: split_arr_rel_insert_input
  supply: numeric
  tags: _text
  thumbnailUri: String
  transactions: transaction_arr_rel_insert_input
  updatedAt: timestamptz
  user: user_obj_rel_insert_input
  version: generative_token_version
}

"""aggregate max on columns"""
type generative_token_max_fields {
  authorId: String
  balance: numeric
  captureMediaId: bpchar
  codexId: String
  createdAt: timestamptz
  displayUri: String
  flag: generative_token_flag_enum
  generativeUri: String
  id: String
  inputBytesSize: Int
  iterationsCount: numeric
  lockEnd: timestamptz
  lockedSeconds: Int
  metadataUri: String
  mintOpensAt: timestamptz
  moderationReasonId: String
  name: String
  openEditionsEndsAt: timestamptz
  originalSupply: numeric
  previewInputBytes: String
  royalties: Int
  slug: String
  supply: numeric
  thumbnailUri: String
  updatedAt: timestamptz
  version: generative_token_version
}

"""
order by max() on columns of table "generative_token"
"""
input generative_token_max_order_by {
  authorId: order_by
  balance: order_by
  captureMediaId: order_by
  codexId: order_by
  createdAt: order_by
  displayUri: order_by
  flag: order_by
  generativeUri: order_by
  id: order_by
  inputBytesSize: order_by
  iterationsCount: order_by
  lockEnd: order_by
  lockedSeconds: order_by
  metadataUri: order_by
  mintOpensAt: order_by
  moderationReasonId: order_by
  name: order_by
  openEditionsEndsAt: order_by
  originalSupply: order_by
  previewInputBytes: order_by
  royalties: order_by
  slug: order_by
  supply: order_by
  thumbnailUri: order_by
  updatedAt: order_by
  version: order_by
}

"""aggregate min on columns"""
type generative_token_min_fields {
  authorId: String
  balance: numeric
  captureMediaId: bpchar
  codexId: String
  createdAt: timestamptz
  displayUri: String
  flag: generative_token_flag_enum
  generativeUri: String
  id: String
  inputBytesSize: Int
  iterationsCount: numeric
  lockEnd: timestamptz
  lockedSeconds: Int
  metadataUri: String
  mintOpensAt: timestamptz
  moderationReasonId: String
  name: String
  openEditionsEndsAt: timestamptz
  originalSupply: numeric
  previewInputBytes: String
  royalties: Int
  slug: String
  supply: numeric
  thumbnailUri: String
  updatedAt: timestamptz
  version: generative_token_version
}

"""
order by min() on columns of table "generative_token"
"""
input generative_token_min_order_by {
  authorId: order_by
  balance: order_by
  captureMediaId: order_by
  codexId: order_by
  createdAt: order_by
  displayUri: order_by
  flag: order_by
  generativeUri: order_by
  id: order_by
  inputBytesSize: order_by
  iterationsCount: order_by
  lockEnd: order_by
  lockedSeconds: order_by
  metadataUri: order_by
  mintOpensAt: order_by
  moderationReasonId: order_by
  name: order_by
  openEditionsEndsAt: order_by
  originalSupply: order_by
  previewInputBytes: order_by
  royalties: order_by
  slug: order_by
  supply: order_by
  thumbnailUri: order_by
  updatedAt: order_by
  version: order_by
}

"""
response of any mutation on the table "generative_token"
"""
type generative_token_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [generative_token!]!
}

"""
input type for inserting object relation for remote table "generative_token"
"""
input generative_token_obj_rel_insert_input {
  data: generative_token_insert_input!

  """upsert condition"""
  on_conflict: generative_token_on_conflict
}

"""
on_conflict condition type for table "generative_token"
"""
input generative_token_on_conflict {
  constraint: generative_token_constraint!
  update_columns: [generative_token_update_column!]! = []
  where: generative_token_bool_exp
}

"""Ordering options when selecting data from "generative_token"."""
input generative_token_order_by {
  actions_aggregate: action_aggregate_order_by
  authorId: order_by
  balance: order_by
  captureMediaId: order_by
  codex: codex_order_by
  codexId: order_by
  codex_update_requests_aggregate: codex_update_request_aggregate_order_by
  collection_offers_aggregate: collection_offer_aggregate_order_by
  createdAt: order_by
  displayUri: order_by
  enabled: order_by
  flag: order_by
  generativeUri: order_by
  id: order_by
  inputBytesSize: order_by
  iterationsCount: order_by
  labels: order_by
  lockEnd: order_by
  lockPriceForReserves: order_by
  lockedSeconds: order_by
  market_stat: market_stats_order_by
  market_stats_histories_aggregate: market_stats_history_aggregate_order_by
  media_image: media_image_order_by
  metadata: order_by
  metadataUri: order_by
  mintOpensAt: order_by
  mint_ticket_setting: mint_ticket_settings_order_by
  mint_tickets_aggregate: mint_ticket_aggregate_order_by
  moderationReasonId: order_by
  moderation_reason: moderation_reason_order_by
  name: order_by
  objkts_aggregate: objkt_aggregate_order_by
  openEditions: order_by
  openEditionsEndsAt: order_by
  originalSupply: order_by
  paramsDefinition: order_by
  previewInputBytes: order_by
  pricing_dutch_auction: pricing_dutch_auction_order_by
  pricing_fixed: pricing_fixed_order_by
  redeemables_aggregate: redeemable_aggregate_order_by
  reports_aggregate: report_aggregate_order_by
  reserves_aggregate: reserve_aggregate_order_by
  royalties: order_by
  slug: order_by
  splitsByGenerativetokensecondaryid_aggregate: split_aggregate_order_by
  splits_aggregate: split_aggregate_order_by
  supply: order_by
  tags: order_by
  thumbnailUri: order_by
  transactions_aggregate: transaction_aggregate_order_by
  updatedAt: order_by
  user: user_order_by
  version: order_by
}

"""primary key columns input for table: generative_token"""
input generative_token_pk_columns_input {
  id: String!
}

"""
select columns of table "generative_token"
"""
enum generative_token_select_column {
  """column name"""
  authorId

  """column name"""
  balance

  """column name"""
  captureMediaId

  """column name"""
  codexId

  """column name"""
  createdAt

  """column name"""
  displayUri

  """column name"""
  enabled

  """column name"""
  flag

  """column name"""
  generativeUri

  """column name"""
  id

  """column name"""
  inputBytesSize

  """column name"""
  iterationsCount

  """column name"""
  labels

  """column name"""
  lockEnd

  """column name"""
  lockPriceForReserves

  """column name"""
  lockedSeconds

  """column name"""
  metadata

  """column name"""
  metadataUri

  """column name"""
  mintOpensAt

  """column name"""
  moderationReasonId

  """column name"""
  name

  """column name"""
  openEditions

  """column name"""
  openEditionsEndsAt

  """column name"""
  originalSupply

  """column name"""
  paramsDefinition

  """column name"""
  previewInputBytes

  """column name"""
  royalties

  """column name"""
  slug

  """column name"""
  supply

  """column name"""
  tags

  """column name"""
  thumbnailUri

  """column name"""
  updatedAt

  """column name"""
  version
}

"""
select "generative_token_aggregate_bool_exp_bool_and_arguments_columns" columns of table "generative_token"
"""
enum generative_token_select_column_generative_token_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  enabled

  """column name"""
  lockPriceForReserves

  """column name"""
  openEditions
}

"""
select "generative_token_aggregate_bool_exp_bool_or_arguments_columns" columns of table "generative_token"
"""
enum generative_token_select_column_generative_token_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  enabled

  """column name"""
  lockPriceForReserves

  """column name"""
  openEditions
}

"""
input type for updating data in table "generative_token"
"""
input generative_token_set_input {
  authorId: String
  balance: numeric
  captureMediaId: bpchar
  codexId: String
  createdAt: timestamptz
  displayUri: String
  enabled: Boolean
  flag: generative_token_flag_enum
  generativeUri: String
  id: String
  inputBytesSize: Int
  iterationsCount: numeric
  labels: _int4
  lockEnd: timestamptz
  lockPriceForReserves: Boolean
  lockedSeconds: Int
  metadata: json
  metadataUri: String
  mintOpensAt: timestamptz
  moderationReasonId: String
  name: String
  openEditions: Boolean
  openEditionsEndsAt: timestamptz
  originalSupply: numeric
  paramsDefinition: json
  previewInputBytes: String
  royalties: Int
  slug: String
  supply: numeric
  tags: _text
  thumbnailUri: String
  updatedAt: timestamptz
  version: generative_token_version
}

"""aggregate stddev on columns"""
type generative_token_stddev_fields {
  balance: Float
  inputBytesSize: Float
  iterationsCount: Float
  lockedSeconds: Float
  originalSupply: Float
  royalties: Float
  supply: Float
}

"""
order by stddev() on columns of table "generative_token"
"""
input generative_token_stddev_order_by {
  balance: order_by
  inputBytesSize: order_by
  iterationsCount: order_by
  lockedSeconds: order_by
  originalSupply: order_by
  royalties: order_by
  supply: order_by
}

"""aggregate stddev_pop on columns"""
type generative_token_stddev_pop_fields {
  balance: Float
  inputBytesSize: Float
  iterationsCount: Float
  lockedSeconds: Float
  originalSupply: Float
  royalties: Float
  supply: Float
}

"""
order by stddev_pop() on columns of table "generative_token"
"""
input generative_token_stddev_pop_order_by {
  balance: order_by
  inputBytesSize: order_by
  iterationsCount: order_by
  lockedSeconds: order_by
  originalSupply: order_by
  royalties: order_by
  supply: order_by
}

"""aggregate stddev_samp on columns"""
type generative_token_stddev_samp_fields {
  balance: Float
  inputBytesSize: Float
  iterationsCount: Float
  lockedSeconds: Float
  originalSupply: Float
  royalties: Float
  supply: Float
}

"""
order by stddev_samp() on columns of table "generative_token"
"""
input generative_token_stddev_samp_order_by {
  balance: order_by
  inputBytesSize: order_by
  iterationsCount: order_by
  lockedSeconds: order_by
  originalSupply: order_by
  royalties: order_by
  supply: order_by
}

"""
Streaming cursor of the table "generative_token"
"""
input generative_token_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: generative_token_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input generative_token_stream_cursor_value_input {
  authorId: String
  balance: numeric
  captureMediaId: bpchar
  codexId: String
  createdAt: timestamptz
  displayUri: String
  enabled: Boolean
  flag: generative_token_flag_enum
  generativeUri: String
  id: String
  inputBytesSize: Int
  iterationsCount: numeric
  labels: _int4
  lockEnd: timestamptz
  lockPriceForReserves: Boolean
  lockedSeconds: Int
  metadata: json
  metadataUri: String
  mintOpensAt: timestamptz
  moderationReasonId: String
  name: String
  openEditions: Boolean
  openEditionsEndsAt: timestamptz
  originalSupply: numeric
  paramsDefinition: json
  previewInputBytes: String
  royalties: Int
  slug: String
  supply: numeric
  tags: _text
  thumbnailUri: String
  updatedAt: timestamptz
  version: generative_token_version
}

"""aggregate sum on columns"""
type generative_token_sum_fields {
  balance: numeric
  inputBytesSize: Int
  iterationsCount: numeric
  lockedSeconds: Int
  originalSupply: numeric
  royalties: Int
  supply: numeric
}

"""
order by sum() on columns of table "generative_token"
"""
input generative_token_sum_order_by {
  balance: order_by
  inputBytesSize: order_by
  iterationsCount: order_by
  lockedSeconds: order_by
  originalSupply: order_by
  royalties: order_by
  supply: order_by
}

"""
update columns of table "generative_token"
"""
enum generative_token_update_column {
  """column name"""
  authorId

  """column name"""
  balance

  """column name"""
  captureMediaId

  """column name"""
  codexId

  """column name"""
  createdAt

  """column name"""
  displayUri

  """column name"""
  enabled

  """column name"""
  flag

  """column name"""
  generativeUri

  """column name"""
  id

  """column name"""
  inputBytesSize

  """column name"""
  iterationsCount

  """column name"""
  labels

  """column name"""
  lockEnd

  """column name"""
  lockPriceForReserves

  """column name"""
  lockedSeconds

  """column name"""
  metadata

  """column name"""
  metadataUri

  """column name"""
  mintOpensAt

  """column name"""
  moderationReasonId

  """column name"""
  name

  """column name"""
  openEditions

  """column name"""
  openEditionsEndsAt

  """column name"""
  originalSupply

  """column name"""
  paramsDefinition

  """column name"""
  previewInputBytes

  """column name"""
  royalties

  """column name"""
  slug

  """column name"""
  supply

  """column name"""
  tags

  """column name"""
  thumbnailUri

  """column name"""
  updatedAt

  """column name"""
  version
}

input generative_token_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: generative_token_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: generative_token_set_input

  """filter the rows which have to be updated"""
  where: generative_token_bool_exp!
}

"""aggregate var_pop on columns"""
type generative_token_var_pop_fields {
  balance: Float
  inputBytesSize: Float
  iterationsCount: Float
  lockedSeconds: Float
  originalSupply: Float
  royalties: Float
  supply: Float
}

"""
order by var_pop() on columns of table "generative_token"
"""
input generative_token_var_pop_order_by {
  balance: order_by
  inputBytesSize: order_by
  iterationsCount: order_by
  lockedSeconds: order_by
  originalSupply: order_by
  royalties: order_by
  supply: order_by
}

"""aggregate var_samp on columns"""
type generative_token_var_samp_fields {
  balance: Float
  inputBytesSize: Float
  iterationsCount: Float
  lockedSeconds: Float
  originalSupply: Float
  royalties: Float
  supply: Float
}

"""
order by var_samp() on columns of table "generative_token"
"""
input generative_token_var_samp_order_by {
  balance: order_by
  inputBytesSize: order_by
  iterationsCount: order_by
  lockedSeconds: order_by
  originalSupply: order_by
  royalties: order_by
  supply: order_by
}

"""aggregate variance on columns"""
type generative_token_variance_fields {
  balance: Float
  inputBytesSize: Float
  iterationsCount: Float
  lockedSeconds: Float
  originalSupply: Float
  royalties: Float
  supply: Float
}

"""
order by variance() on columns of table "generative_token"
"""
input generative_token_variance_order_by {
  balance: order_by
  inputBytesSize: order_by
  iterationsCount: order_by
  lockedSeconds: order_by
  originalSupply: order_by
  royalties: order_by
  supply: order_by
}

scalar generative_token_version

"""
Boolean expression to compare columns of type "generative_token_version". All fields are combined with logical 'AND'.
"""
input generative_token_version_comparison_exp {
  _eq: generative_token_version
  _gt: generative_token_version
  _gte: generative_token_version
  _in: [generative_token_version!]
  _is_null: Boolean
  _lt: generative_token_version
  _lte: generative_token_version
  _neq: generative_token_version
  _nin: [generative_token_version!]
}

"""
columns and relationships of "gentk_assign"
"""
type gentk_assign {
  assignedAt: timestamptz
  attempts: Int!
  createdAt: timestamptz!
  gentkId: String!
  gentkIssuerVersion: generative_token_version!

  """An object relationship"""
  objkt: objkt
  retries: Int!
  state: gentk_assign_state_enum!
}

"""
aggregated selection of "gentk_assign"
"""
type gentk_assign_aggregate {
  aggregate: gentk_assign_aggregate_fields
  nodes: [gentk_assign!]!
}

"""
aggregate fields of "gentk_assign"
"""
type gentk_assign_aggregate_fields {
  avg: gentk_assign_avg_fields
  count(columns: [gentk_assign_select_column!], distinct: Boolean): Int!
  max: gentk_assign_max_fields
  min: gentk_assign_min_fields
  stddev: gentk_assign_stddev_fields
  stddev_pop: gentk_assign_stddev_pop_fields
  stddev_samp: gentk_assign_stddev_samp_fields
  sum: gentk_assign_sum_fields
  var_pop: gentk_assign_var_pop_fields
  var_samp: gentk_assign_var_samp_fields
  variance: gentk_assign_variance_fields
}

"""aggregate avg on columns"""
type gentk_assign_avg_fields {
  attempts: Float
  retries: Float
}

"""
Boolean expression to filter rows from the table "gentk_assign". All fields are combined with a logical 'AND'.
"""
input gentk_assign_bool_exp {
  _and: [gentk_assign_bool_exp!]
  _not: gentk_assign_bool_exp
  _or: [gentk_assign_bool_exp!]
  assignedAt: timestamptz_comparison_exp
  attempts: Int_comparison_exp
  createdAt: timestamptz_comparison_exp
  gentkId: String_comparison_exp
  gentkIssuerVersion: generative_token_version_comparison_exp
  objkt: objkt_bool_exp
  retries: Int_comparison_exp
  state: gentk_assign_state_enum_comparison_exp
}

"""
unique or primary key constraints on table "gentk_assign"
"""
enum gentk_assign_constraint {
  """
  unique or primary key constraint on columns "gentkIssuerVersion", "gentkId"
  """
  PK_d960776439b5cbf41e61a4978c8
}

"""
input type for incrementing numeric columns in table "gentk_assign"
"""
input gentk_assign_inc_input {
  attempts: Int
  retries: Int
}

"""
input type for inserting data into table "gentk_assign"
"""
input gentk_assign_insert_input {
  assignedAt: timestamptz
  attempts: Int
  createdAt: timestamptz
  gentkId: String
  gentkIssuerVersion: generative_token_version
  objkt: objkt_obj_rel_insert_input
  retries: Int
  state: gentk_assign_state_enum
}

"""aggregate max on columns"""
type gentk_assign_max_fields {
  assignedAt: timestamptz
  attempts: Int
  createdAt: timestamptz
  gentkId: String
  gentkIssuerVersion: generative_token_version
  retries: Int
  state: gentk_assign_state_enum
}

"""aggregate min on columns"""
type gentk_assign_min_fields {
  assignedAt: timestamptz
  attempts: Int
  createdAt: timestamptz
  gentkId: String
  gentkIssuerVersion: generative_token_version
  retries: Int
  state: gentk_assign_state_enum
}

"""
response of any mutation on the table "gentk_assign"
"""
type gentk_assign_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [gentk_assign!]!
}

"""
input type for inserting object relation for remote table "gentk_assign"
"""
input gentk_assign_obj_rel_insert_input {
  data: gentk_assign_insert_input!

  """upsert condition"""
  on_conflict: gentk_assign_on_conflict
}

"""
on_conflict condition type for table "gentk_assign"
"""
input gentk_assign_on_conflict {
  constraint: gentk_assign_constraint!
  update_columns: [gentk_assign_update_column!]! = []
  where: gentk_assign_bool_exp
}

"""Ordering options when selecting data from "gentk_assign"."""
input gentk_assign_order_by {
  assignedAt: order_by
  attempts: order_by
  createdAt: order_by
  gentkId: order_by
  gentkIssuerVersion: order_by
  objkt: objkt_order_by
  retries: order_by
  state: order_by
}

"""primary key columns input for table: gentk_assign"""
input gentk_assign_pk_columns_input {
  gentkId: String!
  gentkIssuerVersion: generative_token_version!
}

"""
select columns of table "gentk_assign"
"""
enum gentk_assign_select_column {
  """column name"""
  assignedAt

  """column name"""
  attempts

  """column name"""
  createdAt

  """column name"""
  gentkId

  """column name"""
  gentkIssuerVersion

  """column name"""
  retries

  """column name"""
  state
}

"""
input type for updating data in table "gentk_assign"
"""
input gentk_assign_set_input {
  assignedAt: timestamptz
  attempts: Int
  createdAt: timestamptz
  gentkId: String
  gentkIssuerVersion: generative_token_version
  retries: Int
  state: gentk_assign_state_enum
}

scalar gentk_assign_state_enum

"""
Boolean expression to compare columns of type "gentk_assign_state_enum". All fields are combined with logical 'AND'.
"""
input gentk_assign_state_enum_comparison_exp {
  _eq: gentk_assign_state_enum
  _gt: gentk_assign_state_enum
  _gte: gentk_assign_state_enum
  _in: [gentk_assign_state_enum!]
  _is_null: Boolean
  _lt: gentk_assign_state_enum
  _lte: gentk_assign_state_enum
  _neq: gentk_assign_state_enum
  _nin: [gentk_assign_state_enum!]
}

"""aggregate stddev on columns"""
type gentk_assign_stddev_fields {
  attempts: Float
  retries: Float
}

"""aggregate stddev_pop on columns"""
type gentk_assign_stddev_pop_fields {
  attempts: Float
  retries: Float
}

"""aggregate stddev_samp on columns"""
type gentk_assign_stddev_samp_fields {
  attempts: Float
  retries: Float
}

"""
Streaming cursor of the table "gentk_assign"
"""
input gentk_assign_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: gentk_assign_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input gentk_assign_stream_cursor_value_input {
  assignedAt: timestamptz
  attempts: Int
  createdAt: timestamptz
  gentkId: String
  gentkIssuerVersion: generative_token_version
  retries: Int
  state: gentk_assign_state_enum
}

"""aggregate sum on columns"""
type gentk_assign_sum_fields {
  attempts: Int
  retries: Int
}

"""
update columns of table "gentk_assign"
"""
enum gentk_assign_update_column {
  """column name"""
  assignedAt

  """column name"""
  attempts

  """column name"""
  createdAt

  """column name"""
  gentkId

  """column name"""
  gentkIssuerVersion

  """column name"""
  retries

  """column name"""
  state
}

input gentk_assign_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: gentk_assign_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: gentk_assign_set_input

  """filter the rows which have to be updated"""
  where: gentk_assign_bool_exp!
}

"""aggregate var_pop on columns"""
type gentk_assign_var_pop_fields {
  attempts: Float
  retries: Float
}

"""aggregate var_samp on columns"""
type gentk_assign_var_samp_fields {
  attempts: Float
  retries: Float
}

"""aggregate variance on columns"""
type gentk_assign_variance_fields {
  attempts: Float
  retries: Float
}

"""
columns and relationships of "ipfs_cid"
"""
type ipfs_cid {
  cid: String!
}

"""
aggregated selection of "ipfs_cid"
"""
type ipfs_cid_aggregate {
  aggregate: ipfs_cid_aggregate_fields
  nodes: [ipfs_cid!]!
}

"""
aggregate fields of "ipfs_cid"
"""
type ipfs_cid_aggregate_fields {
  count(columns: [ipfs_cid_select_column!], distinct: Boolean): Int!
  max: ipfs_cid_max_fields
  min: ipfs_cid_min_fields
}

"""
Boolean expression to filter rows from the table "ipfs_cid". All fields are combined with a logical 'AND'.
"""
input ipfs_cid_bool_exp {
  _and: [ipfs_cid_bool_exp!]
  _not: ipfs_cid_bool_exp
  _or: [ipfs_cid_bool_exp!]
  cid: String_comparison_exp
}

"""
unique or primary key constraints on table "ipfs_cid"
"""
enum ipfs_cid_constraint {
  """
  unique or primary key constraint on columns "cid"
  """
  PK_9f69103babd8c233ccb8e6312b8
}

"""
input type for inserting data into table "ipfs_cid"
"""
input ipfs_cid_insert_input {
  cid: String
}

"""aggregate max on columns"""
type ipfs_cid_max_fields {
  cid: String
}

"""aggregate min on columns"""
type ipfs_cid_min_fields {
  cid: String
}

"""
response of any mutation on the table "ipfs_cid"
"""
type ipfs_cid_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [ipfs_cid!]!
}

"""
on_conflict condition type for table "ipfs_cid"
"""
input ipfs_cid_on_conflict {
  constraint: ipfs_cid_constraint!
  update_columns: [ipfs_cid_update_column!]! = []
  where: ipfs_cid_bool_exp
}

"""Ordering options when selecting data from "ipfs_cid"."""
input ipfs_cid_order_by {
  cid: order_by
}

"""primary key columns input for table: ipfs_cid"""
input ipfs_cid_pk_columns_input {
  cid: String!
}

"""
select columns of table "ipfs_cid"
"""
enum ipfs_cid_select_column {
  """column name"""
  cid
}

"""
input type for updating data in table "ipfs_cid"
"""
input ipfs_cid_set_input {
  cid: String
}

"""
Streaming cursor of the table "ipfs_cid"
"""
input ipfs_cid_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: ipfs_cid_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input ipfs_cid_stream_cursor_value_input {
  cid: String
}

"""
update columns of table "ipfs_cid"
"""
enum ipfs_cid_update_column {
  """column name"""
  cid
}

input ipfs_cid_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: ipfs_cid_set_input

  """filter the rows which have to be updated"""
  where: ipfs_cid_bool_exp!
}

scalar json

"""
Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'.
"""
input json_comparison_exp {
  _eq: json
  _gt: json
  _gte: json
  _in: [json!]
  _is_null: Boolean
  _lt: json
  _lte: json
  _neq: json
  _nin: [json!]
}

scalar jsonb

input jsonb_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  _cast: jsonb_cast_exp

  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""
columns and relationships of "listing"
"""
type listing {
  acceptedAt: timestamptz
  acceptedById: String
  amount: numeric!

  """An object relationship"""
  article: article
  articleId: Int
  cancelledAt: timestamptz
  createdAt: timestamptz!
  id: String!
  issuerId: String

  """An object relationship"""
  marketStatByVersionId: market_stats

  """An object relationship"""
  marketStatByVersionId1: market_stats

  """An array relationship"""
  marketStatsHistoriesByFloorlistingidFloorlistingversion(
    """distinct select on columns"""
    distinct_on: [market_stats_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_history_order_by!]

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): [market_stats_history!]!

  """An aggregate relationship"""
  marketStatsHistoriesByFloorlistingidFloorlistingversion_aggregate(
    """distinct select on columns"""
    distinct_on: [market_stats_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_history_order_by!]

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): market_stats_history_aggregate!

  """An array relationship"""
  marketStatsHistoriesByHighestsoldlistingidHighestsoldlistingversion(
    """distinct select on columns"""
    distinct_on: [market_stats_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_history_order_by!]

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): [market_stats_history!]!

  """An aggregate relationship"""
  marketStatsHistoriesByHighestsoldlistingidHighestsoldlistingversion_aggregate(
    """distinct select on columns"""
    distinct_on: [market_stats_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_history_order_by!]

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): market_stats_history_aggregate!

  """An object relationship"""
  market_stat: market_stats

  """An array relationship"""
  market_stats_histories(
    """distinct select on columns"""
    distinct_on: [market_stats_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_history_order_by!]

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): [market_stats_history!]!

  """An aggregate relationship"""
  market_stats_histories_aggregate(
    """distinct select on columns"""
    distinct_on: [market_stats_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_history_order_by!]

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): market_stats_history_aggregate!

  """An object relationship"""
  objkt: objkt
  objktId: String
  objktIssuerVersion: generative_token_version
  price: numeric!
  royalties: Int!

  """An object relationship"""
  user: user

  """An object relationship"""
  userByAcceptedbyid: user
  version: Int!
}

"""
aggregated selection of "listing"
"""
type listing_aggregate {
  aggregate: listing_aggregate_fields
  nodes: [listing!]!
}

input listing_aggregate_bool_exp {
  count: listing_aggregate_bool_exp_count
}

input listing_aggregate_bool_exp_count {
  arguments: [listing_select_column!]
  distinct: Boolean
  filter: listing_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "listing"
"""
type listing_aggregate_fields {
  avg: listing_avg_fields
  count(columns: [listing_select_column!], distinct: Boolean): Int!
  max: listing_max_fields
  min: listing_min_fields
  stddev: listing_stddev_fields
  stddev_pop: listing_stddev_pop_fields
  stddev_samp: listing_stddev_samp_fields
  sum: listing_sum_fields
  var_pop: listing_var_pop_fields
  var_samp: listing_var_samp_fields
  variance: listing_variance_fields
}

"""
order by aggregate values of table "listing"
"""
input listing_aggregate_order_by {
  avg: listing_avg_order_by
  count: order_by
  max: listing_max_order_by
  min: listing_min_order_by
  stddev: listing_stddev_order_by
  stddev_pop: listing_stddev_pop_order_by
  stddev_samp: listing_stddev_samp_order_by
  sum: listing_sum_order_by
  var_pop: listing_var_pop_order_by
  var_samp: listing_var_samp_order_by
  variance: listing_variance_order_by
}

"""
input type for inserting array relation for remote table "listing"
"""
input listing_arr_rel_insert_input {
  data: [listing_insert_input!]!

  """upsert condition"""
  on_conflict: listing_on_conflict
}

"""aggregate avg on columns"""
type listing_avg_fields {
  amount: Float
  articleId: Float
  price: Float
  royalties: Float
  version: Float
}

"""
order by avg() on columns of table "listing"
"""
input listing_avg_order_by {
  amount: order_by
  articleId: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""
Boolean expression to filter rows from the table "listing". All fields are combined with a logical 'AND'.
"""
input listing_bool_exp {
  _and: [listing_bool_exp!]
  _not: listing_bool_exp
  _or: [listing_bool_exp!]
  acceptedAt: timestamptz_comparison_exp
  acceptedById: String_comparison_exp
  amount: numeric_comparison_exp
  article: article_bool_exp
  articleId: Int_comparison_exp
  cancelledAt: timestamptz_comparison_exp
  createdAt: timestamptz_comparison_exp
  id: String_comparison_exp
  issuerId: String_comparison_exp
  marketStatByVersionId: market_stats_bool_exp
  marketStatByVersionId1: market_stats_bool_exp
  marketStatsHistoriesByFloorlistingidFloorlistingversion: market_stats_history_bool_exp
  marketStatsHistoriesByFloorlistingidFloorlistingversion_aggregate: market_stats_history_aggregate_bool_exp
  marketStatsHistoriesByHighestsoldlistingidHighestsoldlistingversion: market_stats_history_bool_exp
  marketStatsHistoriesByHighestsoldlistingidHighestsoldlistingversion_aggregate: market_stats_history_aggregate_bool_exp
  market_stat: market_stats_bool_exp
  market_stats_histories: market_stats_history_bool_exp
  market_stats_histories_aggregate: market_stats_history_aggregate_bool_exp
  objkt: objkt_bool_exp
  objktId: String_comparison_exp
  objktIssuerVersion: generative_token_version_comparison_exp
  price: numeric_comparison_exp
  royalties: Int_comparison_exp
  user: user_bool_exp
  userByAcceptedbyid: user_bool_exp
  version: Int_comparison_exp
}

"""
unique or primary key constraints on table "listing"
"""
enum listing_constraint {
  """
  unique or primary key constraint on columns "id", "version"
  """
  PK_de64402045da3d719189d60f30f
}

"""
input type for incrementing numeric columns in table "listing"
"""
input listing_inc_input {
  amount: numeric
  articleId: Int
  price: numeric
  royalties: Int
  version: Int
}

"""
input type for inserting data into table "listing"
"""
input listing_insert_input {
  acceptedAt: timestamptz
  acceptedById: String
  amount: numeric
  article: article_obj_rel_insert_input
  articleId: Int
  cancelledAt: timestamptz
  createdAt: timestamptz
  id: String
  issuerId: String
  marketStatByVersionId: market_stats_obj_rel_insert_input
  marketStatByVersionId1: market_stats_obj_rel_insert_input
  marketStatsHistoriesByFloorlistingidFloorlistingversion: market_stats_history_arr_rel_insert_input
  marketStatsHistoriesByHighestsoldlistingidHighestsoldlistingversion: market_stats_history_arr_rel_insert_input
  market_stat: market_stats_obj_rel_insert_input
  market_stats_histories: market_stats_history_arr_rel_insert_input
  objkt: objkt_obj_rel_insert_input
  objktId: String
  objktIssuerVersion: generative_token_version
  price: numeric
  royalties: Int
  user: user_obj_rel_insert_input
  userByAcceptedbyid: user_obj_rel_insert_input
  version: Int
}

"""aggregate max on columns"""
type listing_max_fields {
  acceptedAt: timestamptz
  acceptedById: String
  amount: numeric
  articleId: Int
  cancelledAt: timestamptz
  createdAt: timestamptz
  id: String
  issuerId: String
  objktId: String
  objktIssuerVersion: generative_token_version
  price: numeric
  royalties: Int
  version: Int
}

"""
order by max() on columns of table "listing"
"""
input listing_max_order_by {
  acceptedAt: order_by
  acceptedById: order_by
  amount: order_by
  articleId: order_by
  cancelledAt: order_by
  createdAt: order_by
  id: order_by
  issuerId: order_by
  objktId: order_by
  objktIssuerVersion: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""aggregate min on columns"""
type listing_min_fields {
  acceptedAt: timestamptz
  acceptedById: String
  amount: numeric
  articleId: Int
  cancelledAt: timestamptz
  createdAt: timestamptz
  id: String
  issuerId: String
  objktId: String
  objktIssuerVersion: generative_token_version
  price: numeric
  royalties: Int
  version: Int
}

"""
order by min() on columns of table "listing"
"""
input listing_min_order_by {
  acceptedAt: order_by
  acceptedById: order_by
  amount: order_by
  articleId: order_by
  cancelledAt: order_by
  createdAt: order_by
  id: order_by
  issuerId: order_by
  objktId: order_by
  objktIssuerVersion: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""
response of any mutation on the table "listing"
"""
type listing_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [listing!]!
}

"""
input type for inserting object relation for remote table "listing"
"""
input listing_obj_rel_insert_input {
  data: listing_insert_input!

  """upsert condition"""
  on_conflict: listing_on_conflict
}

"""
on_conflict condition type for table "listing"
"""
input listing_on_conflict {
  constraint: listing_constraint!
  update_columns: [listing_update_column!]! = []
  where: listing_bool_exp
}

"""Ordering options when selecting data from "listing"."""
input listing_order_by {
  acceptedAt: order_by
  acceptedById: order_by
  amount: order_by
  article: article_order_by
  articleId: order_by
  cancelledAt: order_by
  createdAt: order_by
  id: order_by
  issuerId: order_by
  marketStatByVersionId: market_stats_order_by
  marketStatByVersionId1: market_stats_order_by
  marketStatsHistoriesByFloorlistingidFloorlistingversion_aggregate: market_stats_history_aggregate_order_by
  marketStatsHistoriesByHighestsoldlistingidHighestsoldlistingversion_aggregate: market_stats_history_aggregate_order_by
  market_stat: market_stats_order_by
  market_stats_histories_aggregate: market_stats_history_aggregate_order_by
  objkt: objkt_order_by
  objktId: order_by
  objktIssuerVersion: order_by
  price: order_by
  royalties: order_by
  user: user_order_by
  userByAcceptedbyid: user_order_by
  version: order_by
}

"""primary key columns input for table: listing"""
input listing_pk_columns_input {
  id: String!
  version: Int!
}

"""
select columns of table "listing"
"""
enum listing_select_column {
  """column name"""
  acceptedAt

  """column name"""
  acceptedById

  """column name"""
  amount

  """column name"""
  articleId

  """column name"""
  cancelledAt

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  issuerId

  """column name"""
  objktId

  """column name"""
  objktIssuerVersion

  """column name"""
  price

  """column name"""
  royalties

  """column name"""
  version
}

"""
input type for updating data in table "listing"
"""
input listing_set_input {
  acceptedAt: timestamptz
  acceptedById: String
  amount: numeric
  articleId: Int
  cancelledAt: timestamptz
  createdAt: timestamptz
  id: String
  issuerId: String
  objktId: String
  objktIssuerVersion: generative_token_version
  price: numeric
  royalties: Int
  version: Int
}

"""aggregate stddev on columns"""
type listing_stddev_fields {
  amount: Float
  articleId: Float
  price: Float
  royalties: Float
  version: Float
}

"""
order by stddev() on columns of table "listing"
"""
input listing_stddev_order_by {
  amount: order_by
  articleId: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""aggregate stddev_pop on columns"""
type listing_stddev_pop_fields {
  amount: Float
  articleId: Float
  price: Float
  royalties: Float
  version: Float
}

"""
order by stddev_pop() on columns of table "listing"
"""
input listing_stddev_pop_order_by {
  amount: order_by
  articleId: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""aggregate stddev_samp on columns"""
type listing_stddev_samp_fields {
  amount: Float
  articleId: Float
  price: Float
  royalties: Float
  version: Float
}

"""
order by stddev_samp() on columns of table "listing"
"""
input listing_stddev_samp_order_by {
  amount: order_by
  articleId: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""
Streaming cursor of the table "listing"
"""
input listing_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: listing_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input listing_stream_cursor_value_input {
  acceptedAt: timestamptz
  acceptedById: String
  amount: numeric
  articleId: Int
  cancelledAt: timestamptz
  createdAt: timestamptz
  id: String
  issuerId: String
  objktId: String
  objktIssuerVersion: generative_token_version
  price: numeric
  royalties: Int
  version: Int
}

"""aggregate sum on columns"""
type listing_sum_fields {
  amount: numeric
  articleId: Int
  price: numeric
  royalties: Int
  version: Int
}

"""
order by sum() on columns of table "listing"
"""
input listing_sum_order_by {
  amount: order_by
  articleId: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""
update columns of table "listing"
"""
enum listing_update_column {
  """column name"""
  acceptedAt

  """column name"""
  acceptedById

  """column name"""
  amount

  """column name"""
  articleId

  """column name"""
  cancelledAt

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  issuerId

  """column name"""
  objktId

  """column name"""
  objktIssuerVersion

  """column name"""
  price

  """column name"""
  royalties

  """column name"""
  version
}

input listing_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: listing_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: listing_set_input

  """filter the rows which have to be updated"""
  where: listing_bool_exp!
}

"""aggregate var_pop on columns"""
type listing_var_pop_fields {
  amount: Float
  articleId: Float
  price: Float
  royalties: Float
  version: Float
}

"""
order by var_pop() on columns of table "listing"
"""
input listing_var_pop_order_by {
  amount: order_by
  articleId: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""aggregate var_samp on columns"""
type listing_var_samp_fields {
  amount: Float
  articleId: Float
  price: Float
  royalties: Float
  version: Float
}

"""
order by var_samp() on columns of table "listing"
"""
input listing_var_samp_order_by {
  amount: order_by
  articleId: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""aggregate variance on columns"""
type listing_variance_fields {
  amount: Float
  articleId: Float
  price: Float
  royalties: Float
  version: Float
}

"""
order by variance() on columns of table "listing"
"""
input listing_variance_order_by {
  amount: order_by
  articleId: order_by
  price: order_by
  royalties: order_by
  version: order_by
}

"""
columns and relationships of "market_stats"
"""
type market_stats {
  averageSalePrice: numeric
  floor: numeric
  floor24: numeric
  floor30d: numeric
  floor7d: numeric
  floorListingId: String
  floorListingVersion: Int
  from: timestamptz

  """An object relationship"""
  generative_token: generative_token!
  highestCollectionOffer: numeric
  highestSold: numeric
  highestSold24: numeric
  highestSold30d: numeric
  highestSold7d: numeric
  highestSoldListingId: String
  highestSoldListingVersion: Int
  listed: Int

  """An object relationship"""
  listing: listing

  """An object relationship"""
  listingByFloorlistingversionFloorlistingid: listing

  """An object relationship"""
  listingByLowestsoldlistingversionLowestsoldlistingid: listing
  longestAverageHeldInSeconds: bigint
  lowestSold: numeric
  lowestSold24: numeric
  lowestSold30d: numeric
  lowestSold7d: numeric
  lowestSoldListingId: String
  lowestSoldListingVersion: Int
  median: numeric
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: numeric
  primVolumeTz: numeric
  secVolumeNb: numeric
  secVolumeNb24: numeric
  secVolumeNb30d: numeric
  secVolumeNb7d: numeric
  secVolumeTz: numeric
  secVolumeTz24: numeric
  secVolumeTz30d: numeric
  secVolumeTz7d: numeric
  to: timestamptz
  tokenId: String!
}

"""
aggregated selection of "market_stats"
"""
type market_stats_aggregate {
  aggregate: market_stats_aggregate_fields
  nodes: [market_stats!]!
}

"""
aggregate fields of "market_stats"
"""
type market_stats_aggregate_fields {
  avg: market_stats_avg_fields
  count(columns: [market_stats_select_column!], distinct: Boolean): Int!
  max: market_stats_max_fields
  min: market_stats_min_fields
  stddev: market_stats_stddev_fields
  stddev_pop: market_stats_stddev_pop_fields
  stddev_samp: market_stats_stddev_samp_fields
  sum: market_stats_sum_fields
  var_pop: market_stats_var_pop_fields
  var_samp: market_stats_var_samp_fields
  variance: market_stats_variance_fields
}

"""aggregate avg on columns"""
type market_stats_avg_fields {
  averageSalePrice: Float
  floor: Float
  floor24: Float
  floor30d: Float
  floor7d: Float
  floorListingVersion: Float
  highestCollectionOffer: Float
  highestSold: Float
  highestSold24: Float
  highestSold30d: Float
  highestSold7d: Float
  highestSoldListingVersion: Float
  listed: Float
  longestAverageHeldInSeconds: Float
  lowestSold: Float
  lowestSold24: Float
  lowestSold30d: Float
  lowestSold7d: Float
  lowestSoldListingVersion: Float
  median: Float
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: Float
  primVolumeTz: Float
  secVolumeNb: Float
  secVolumeNb24: Float
  secVolumeNb30d: Float
  secVolumeNb7d: Float
  secVolumeTz: Float
  secVolumeTz24: Float
  secVolumeTz30d: Float
  secVolumeTz7d: Float
}

"""
Boolean expression to filter rows from the table "market_stats". All fields are combined with a logical 'AND'.
"""
input market_stats_bool_exp {
  _and: [market_stats_bool_exp!]
  _not: market_stats_bool_exp
  _or: [market_stats_bool_exp!]
  averageSalePrice: numeric_comparison_exp
  floor: numeric_comparison_exp
  floor24: numeric_comparison_exp
  floor30d: numeric_comparison_exp
  floor7d: numeric_comparison_exp
  floorListingId: String_comparison_exp
  floorListingVersion: Int_comparison_exp
  from: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  highestCollectionOffer: numeric_comparison_exp
  highestSold: numeric_comparison_exp
  highestSold24: numeric_comparison_exp
  highestSold30d: numeric_comparison_exp
  highestSold7d: numeric_comparison_exp
  highestSoldListingId: String_comparison_exp
  highestSoldListingVersion: Int_comparison_exp
  listed: Int_comparison_exp
  listing: listing_bool_exp
  listingByFloorlistingversionFloorlistingid: listing_bool_exp
  listingByLowestsoldlistingversionLowestsoldlistingid: listing_bool_exp
  longestAverageHeldInSeconds: bigint_comparison_exp
  lowestSold: numeric_comparison_exp
  lowestSold24: numeric_comparison_exp
  lowestSold30d: numeric_comparison_exp
  lowestSold7d: numeric_comparison_exp
  lowestSoldListingId: String_comparison_exp
  lowestSoldListingVersion: Int_comparison_exp
  median: numeric_comparison_exp
  percentListed: Float_comparison_exp
  percentNeverListed: Float_comparison_exp
  primVolumeNb: numeric_comparison_exp
  primVolumeTz: numeric_comparison_exp
  secVolumeNb: numeric_comparison_exp
  secVolumeNb24: numeric_comparison_exp
  secVolumeNb30d: numeric_comparison_exp
  secVolumeNb7d: numeric_comparison_exp
  secVolumeTz: numeric_comparison_exp
  secVolumeTz24: numeric_comparison_exp
  secVolumeTz30d: numeric_comparison_exp
  secVolumeTz7d: numeric_comparison_exp
  to: timestamptz_comparison_exp
  tokenId: String_comparison_exp
}

"""
unique or primary key constraints on table "market_stats"
"""
enum market_stats_constraint {
  """
  unique or primary key constraint on columns "tokenId"
  """
  PK_8a4893caa570bf7100d3f060fd8

  """
  unique or primary key constraint on columns "highestSoldListingVersion", "highestSoldListingId"
  """
  REL_281e5d025f8c10bbd96377a560

  """
  unique or primary key constraint on columns "floorListingVersion", "floorListingId"
  """
  REL_b47f2fd7c124043ee7765bef61

  """
  unique or primary key constraint on columns "lowestSoldListingId", "lowestSoldListingVersion"
  """
  REL_d1cbd8177ef70881960f87474d
}

"""
columns and relationships of "market_stats_history"
"""
type market_stats_history {
  averageSalePrice: bigint
  floor: bigint
  floorListingId: String
  floorListingVersion: Int
  from: timestamptz!

  """An object relationship"""
  generative_token: generative_token!
  highestCollectionOffer: bigint
  highestSold: bigint
  highestSoldListingId: String
  highestSoldListingVersion: Int
  id: Int!
  listed: Int

  """An object relationship"""
  listing: listing

  """An object relationship"""
  listingByFloorlistingidFloorlistingversion: listing

  """An object relationship"""
  listingByHighestsoldlistingidHighestsoldlistingversion: listing
  longestAverageHeldInSeconds: bigint
  lowestSold: bigint
  lowestSoldListingId: String
  lowestSoldListingVersion: Int
  median: bigint
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: bigint
  primVolumeTz: bigint
  secVolumeNb: bigint
  secVolumeTz: bigint
  to: timestamptz!
  tokenId: String!
}

"""
aggregated selection of "market_stats_history"
"""
type market_stats_history_aggregate {
  aggregate: market_stats_history_aggregate_fields
  nodes: [market_stats_history!]!
}

input market_stats_history_aggregate_bool_exp {
  count: market_stats_history_aggregate_bool_exp_count
}

input market_stats_history_aggregate_bool_exp_count {
  arguments: [market_stats_history_select_column!]
  distinct: Boolean
  filter: market_stats_history_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "market_stats_history"
"""
type market_stats_history_aggregate_fields {
  avg: market_stats_history_avg_fields
  count(columns: [market_stats_history_select_column!], distinct: Boolean): Int!
  max: market_stats_history_max_fields
  min: market_stats_history_min_fields
  stddev: market_stats_history_stddev_fields
  stddev_pop: market_stats_history_stddev_pop_fields
  stddev_samp: market_stats_history_stddev_samp_fields
  sum: market_stats_history_sum_fields
  var_pop: market_stats_history_var_pop_fields
  var_samp: market_stats_history_var_samp_fields
  variance: market_stats_history_variance_fields
}

"""
order by aggregate values of table "market_stats_history"
"""
input market_stats_history_aggregate_order_by {
  avg: market_stats_history_avg_order_by
  count: order_by
  max: market_stats_history_max_order_by
  min: market_stats_history_min_order_by
  stddev: market_stats_history_stddev_order_by
  stddev_pop: market_stats_history_stddev_pop_order_by
  stddev_samp: market_stats_history_stddev_samp_order_by
  sum: market_stats_history_sum_order_by
  var_pop: market_stats_history_var_pop_order_by
  var_samp: market_stats_history_var_samp_order_by
  variance: market_stats_history_variance_order_by
}

"""
input type for inserting array relation for remote table "market_stats_history"
"""
input market_stats_history_arr_rel_insert_input {
  data: [market_stats_history_insert_input!]!

  """upsert condition"""
  on_conflict: market_stats_history_on_conflict
}

"""aggregate avg on columns"""
type market_stats_history_avg_fields {
  averageSalePrice: Float
  floor: Float
  floorListingVersion: Float
  highestCollectionOffer: Float
  highestSold: Float
  highestSoldListingVersion: Float
  id: Float
  listed: Float
  longestAverageHeldInSeconds: Float
  lowestSold: Float
  lowestSoldListingVersion: Float
  median: Float
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: Float
  primVolumeTz: Float
  secVolumeNb: Float
  secVolumeTz: Float
}

"""
order by avg() on columns of table "market_stats_history"
"""
input market_stats_history_avg_order_by {
  averageSalePrice: order_by
  floor: order_by
  floorListingVersion: order_by
  highestCollectionOffer: order_by
  highestSold: order_by
  highestSoldListingVersion: order_by
  id: order_by
  listed: order_by
  longestAverageHeldInSeconds: order_by
  lowestSold: order_by
  lowestSoldListingVersion: order_by
  median: order_by
  percentListed: order_by
  percentNeverListed: order_by
  primVolumeNb: order_by
  primVolumeTz: order_by
  secVolumeNb: order_by
  secVolumeTz: order_by
}

"""
Boolean expression to filter rows from the table "market_stats_history". All fields are combined with a logical 'AND'.
"""
input market_stats_history_bool_exp {
  _and: [market_stats_history_bool_exp!]
  _not: market_stats_history_bool_exp
  _or: [market_stats_history_bool_exp!]
  averageSalePrice: bigint_comparison_exp
  floor: bigint_comparison_exp
  floorListingId: String_comparison_exp
  floorListingVersion: Int_comparison_exp
  from: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  highestCollectionOffer: bigint_comparison_exp
  highestSold: bigint_comparison_exp
  highestSoldListingId: String_comparison_exp
  highestSoldListingVersion: Int_comparison_exp
  id: Int_comparison_exp
  listed: Int_comparison_exp
  listing: listing_bool_exp
  listingByFloorlistingidFloorlistingversion: listing_bool_exp
  listingByHighestsoldlistingidHighestsoldlistingversion: listing_bool_exp
  longestAverageHeldInSeconds: bigint_comparison_exp
  lowestSold: bigint_comparison_exp
  lowestSoldListingId: String_comparison_exp
  lowestSoldListingVersion: Int_comparison_exp
  median: bigint_comparison_exp
  percentListed: Float_comparison_exp
  percentNeverListed: Float_comparison_exp
  primVolumeNb: bigint_comparison_exp
  primVolumeTz: bigint_comparison_exp
  secVolumeNb: bigint_comparison_exp
  secVolumeTz: bigint_comparison_exp
  to: timestamptz_comparison_exp
  tokenId: String_comparison_exp
}

"""
unique or primary key constraints on table "market_stats_history"
"""
enum market_stats_history_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_aa12f7e0ffa2992946087c870f9
}

"""
input type for incrementing numeric columns in table "market_stats_history"
"""
input market_stats_history_inc_input {
  averageSalePrice: bigint
  floor: bigint
  floorListingVersion: Int
  highestCollectionOffer: bigint
  highestSold: bigint
  highestSoldListingVersion: Int
  id: Int
  listed: Int
  longestAverageHeldInSeconds: bigint
  lowestSold: bigint
  lowestSoldListingVersion: Int
  median: bigint
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: bigint
  primVolumeTz: bigint
  secVolumeNb: bigint
  secVolumeTz: bigint
}

"""
input type for inserting data into table "market_stats_history"
"""
input market_stats_history_insert_input {
  averageSalePrice: bigint
  floor: bigint
  floorListingId: String
  floorListingVersion: Int
  from: timestamptz
  generative_token: generative_token_obj_rel_insert_input
  highestCollectionOffer: bigint
  highestSold: bigint
  highestSoldListingId: String
  highestSoldListingVersion: Int
  id: Int
  listed: Int
  listing: listing_obj_rel_insert_input
  listingByFloorlistingidFloorlistingversion: listing_obj_rel_insert_input
  listingByHighestsoldlistingidHighestsoldlistingversion: listing_obj_rel_insert_input
  longestAverageHeldInSeconds: bigint
  lowestSold: bigint
  lowestSoldListingId: String
  lowestSoldListingVersion: Int
  median: bigint
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: bigint
  primVolumeTz: bigint
  secVolumeNb: bigint
  secVolumeTz: bigint
  to: timestamptz
  tokenId: String
}

"""aggregate max on columns"""
type market_stats_history_max_fields {
  averageSalePrice: bigint
  floor: bigint
  floorListingId: String
  floorListingVersion: Int
  from: timestamptz
  highestCollectionOffer: bigint
  highestSold: bigint
  highestSoldListingId: String
  highestSoldListingVersion: Int
  id: Int
  listed: Int
  longestAverageHeldInSeconds: bigint
  lowestSold: bigint
  lowestSoldListingId: String
  lowestSoldListingVersion: Int
  median: bigint
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: bigint
  primVolumeTz: bigint
  secVolumeNb: bigint
  secVolumeTz: bigint
  to: timestamptz
  tokenId: String
}

"""
order by max() on columns of table "market_stats_history"
"""
input market_stats_history_max_order_by {
  averageSalePrice: order_by
  floor: order_by
  floorListingId: order_by
  floorListingVersion: order_by
  from: order_by
  highestCollectionOffer: order_by
  highestSold: order_by
  highestSoldListingId: order_by
  highestSoldListingVersion: order_by
  id: order_by
  listed: order_by
  longestAverageHeldInSeconds: order_by
  lowestSold: order_by
  lowestSoldListingId: order_by
  lowestSoldListingVersion: order_by
  median: order_by
  percentListed: order_by
  percentNeverListed: order_by
  primVolumeNb: order_by
  primVolumeTz: order_by
  secVolumeNb: order_by
  secVolumeTz: order_by
  to: order_by
  tokenId: order_by
}

"""aggregate min on columns"""
type market_stats_history_min_fields {
  averageSalePrice: bigint
  floor: bigint
  floorListingId: String
  floorListingVersion: Int
  from: timestamptz
  highestCollectionOffer: bigint
  highestSold: bigint
  highestSoldListingId: String
  highestSoldListingVersion: Int
  id: Int
  listed: Int
  longestAverageHeldInSeconds: bigint
  lowestSold: bigint
  lowestSoldListingId: String
  lowestSoldListingVersion: Int
  median: bigint
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: bigint
  primVolumeTz: bigint
  secVolumeNb: bigint
  secVolumeTz: bigint
  to: timestamptz
  tokenId: String
}

"""
order by min() on columns of table "market_stats_history"
"""
input market_stats_history_min_order_by {
  averageSalePrice: order_by
  floor: order_by
  floorListingId: order_by
  floorListingVersion: order_by
  from: order_by
  highestCollectionOffer: order_by
  highestSold: order_by
  highestSoldListingId: order_by
  highestSoldListingVersion: order_by
  id: order_by
  listed: order_by
  longestAverageHeldInSeconds: order_by
  lowestSold: order_by
  lowestSoldListingId: order_by
  lowestSoldListingVersion: order_by
  median: order_by
  percentListed: order_by
  percentNeverListed: order_by
  primVolumeNb: order_by
  primVolumeTz: order_by
  secVolumeNb: order_by
  secVolumeTz: order_by
  to: order_by
  tokenId: order_by
}

"""
response of any mutation on the table "market_stats_history"
"""
type market_stats_history_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [market_stats_history!]!
}

"""
on_conflict condition type for table "market_stats_history"
"""
input market_stats_history_on_conflict {
  constraint: market_stats_history_constraint!
  update_columns: [market_stats_history_update_column!]! = []
  where: market_stats_history_bool_exp
}

"""Ordering options when selecting data from "market_stats_history"."""
input market_stats_history_order_by {
  averageSalePrice: order_by
  floor: order_by
  floorListingId: order_by
  floorListingVersion: order_by
  from: order_by
  generative_token: generative_token_order_by
  highestCollectionOffer: order_by
  highestSold: order_by
  highestSoldListingId: order_by
  highestSoldListingVersion: order_by
  id: order_by
  listed: order_by
  listing: listing_order_by
  listingByFloorlistingidFloorlistingversion: listing_order_by
  listingByHighestsoldlistingidHighestsoldlistingversion: listing_order_by
  longestAverageHeldInSeconds: order_by
  lowestSold: order_by
  lowestSoldListingId: order_by
  lowestSoldListingVersion: order_by
  median: order_by
  percentListed: order_by
  percentNeverListed: order_by
  primVolumeNb: order_by
  primVolumeTz: order_by
  secVolumeNb: order_by
  secVolumeTz: order_by
  to: order_by
  tokenId: order_by
}

"""primary key columns input for table: market_stats_history"""
input market_stats_history_pk_columns_input {
  id: Int!
}

"""
select columns of table "market_stats_history"
"""
enum market_stats_history_select_column {
  """column name"""
  averageSalePrice

  """column name"""
  floor

  """column name"""
  floorListingId

  """column name"""
  floorListingVersion

  """column name"""
  from

  """column name"""
  highestCollectionOffer

  """column name"""
  highestSold

  """column name"""
  highestSoldListingId

  """column name"""
  highestSoldListingVersion

  """column name"""
  id

  """column name"""
  listed

  """column name"""
  longestAverageHeldInSeconds

  """column name"""
  lowestSold

  """column name"""
  lowestSoldListingId

  """column name"""
  lowestSoldListingVersion

  """column name"""
  median

  """column name"""
  percentListed

  """column name"""
  percentNeverListed

  """column name"""
  primVolumeNb

  """column name"""
  primVolumeTz

  """column name"""
  secVolumeNb

  """column name"""
  secVolumeTz

  """column name"""
  to

  """column name"""
  tokenId
}

"""
input type for updating data in table "market_stats_history"
"""
input market_stats_history_set_input {
  averageSalePrice: bigint
  floor: bigint
  floorListingId: String
  floorListingVersion: Int
  from: timestamptz
  highestCollectionOffer: bigint
  highestSold: bigint
  highestSoldListingId: String
  highestSoldListingVersion: Int
  id: Int
  listed: Int
  longestAverageHeldInSeconds: bigint
  lowestSold: bigint
  lowestSoldListingId: String
  lowestSoldListingVersion: Int
  median: bigint
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: bigint
  primVolumeTz: bigint
  secVolumeNb: bigint
  secVolumeTz: bigint
  to: timestamptz
  tokenId: String
}

"""aggregate stddev on columns"""
type market_stats_history_stddev_fields {
  averageSalePrice: Float
  floor: Float
  floorListingVersion: Float
  highestCollectionOffer: Float
  highestSold: Float
  highestSoldListingVersion: Float
  id: Float
  listed: Float
  longestAverageHeldInSeconds: Float
  lowestSold: Float
  lowestSoldListingVersion: Float
  median: Float
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: Float
  primVolumeTz: Float
  secVolumeNb: Float
  secVolumeTz: Float
}

"""
order by stddev() on columns of table "market_stats_history"
"""
input market_stats_history_stddev_order_by {
  averageSalePrice: order_by
  floor: order_by
  floorListingVersion: order_by
  highestCollectionOffer: order_by
  highestSold: order_by
  highestSoldListingVersion: order_by
  id: order_by
  listed: order_by
  longestAverageHeldInSeconds: order_by
  lowestSold: order_by
  lowestSoldListingVersion: order_by
  median: order_by
  percentListed: order_by
  percentNeverListed: order_by
  primVolumeNb: order_by
  primVolumeTz: order_by
  secVolumeNb: order_by
  secVolumeTz: order_by
}

"""aggregate stddev_pop on columns"""
type market_stats_history_stddev_pop_fields {
  averageSalePrice: Float
  floor: Float
  floorListingVersion: Float
  highestCollectionOffer: Float
  highestSold: Float
  highestSoldListingVersion: Float
  id: Float
  listed: Float
  longestAverageHeldInSeconds: Float
  lowestSold: Float
  lowestSoldListingVersion: Float
  median: Float
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: Float
  primVolumeTz: Float
  secVolumeNb: Float
  secVolumeTz: Float
}

"""
order by stddev_pop() on columns of table "market_stats_history"
"""
input market_stats_history_stddev_pop_order_by {
  averageSalePrice: order_by
  floor: order_by
  floorListingVersion: order_by
  highestCollectionOffer: order_by
  highestSold: order_by
  highestSoldListingVersion: order_by
  id: order_by
  listed: order_by
  longestAverageHeldInSeconds: order_by
  lowestSold: order_by
  lowestSoldListingVersion: order_by
  median: order_by
  percentListed: order_by
  percentNeverListed: order_by
  primVolumeNb: order_by
  primVolumeTz: order_by
  secVolumeNb: order_by
  secVolumeTz: order_by
}

"""aggregate stddev_samp on columns"""
type market_stats_history_stddev_samp_fields {
  averageSalePrice: Float
  floor: Float
  floorListingVersion: Float
  highestCollectionOffer: Float
  highestSold: Float
  highestSoldListingVersion: Float
  id: Float
  listed: Float
  longestAverageHeldInSeconds: Float
  lowestSold: Float
  lowestSoldListingVersion: Float
  median: Float
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: Float
  primVolumeTz: Float
  secVolumeNb: Float
  secVolumeTz: Float
}

"""
order by stddev_samp() on columns of table "market_stats_history"
"""
input market_stats_history_stddev_samp_order_by {
  averageSalePrice: order_by
  floor: order_by
  floorListingVersion: order_by
  highestCollectionOffer: order_by
  highestSold: order_by
  highestSoldListingVersion: order_by
  id: order_by
  listed: order_by
  longestAverageHeldInSeconds: order_by
  lowestSold: order_by
  lowestSoldListingVersion: order_by
  median: order_by
  percentListed: order_by
  percentNeverListed: order_by
  primVolumeNb: order_by
  primVolumeTz: order_by
  secVolumeNb: order_by
  secVolumeTz: order_by
}

"""
Streaming cursor of the table "market_stats_history"
"""
input market_stats_history_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: market_stats_history_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input market_stats_history_stream_cursor_value_input {
  averageSalePrice: bigint
  floor: bigint
  floorListingId: String
  floorListingVersion: Int
  from: timestamptz
  highestCollectionOffer: bigint
  highestSold: bigint
  highestSoldListingId: String
  highestSoldListingVersion: Int
  id: Int
  listed: Int
  longestAverageHeldInSeconds: bigint
  lowestSold: bigint
  lowestSoldListingId: String
  lowestSoldListingVersion: Int
  median: bigint
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: bigint
  primVolumeTz: bigint
  secVolumeNb: bigint
  secVolumeTz: bigint
  to: timestamptz
  tokenId: String
}

"""aggregate sum on columns"""
type market_stats_history_sum_fields {
  averageSalePrice: bigint
  floor: bigint
  floorListingVersion: Int
  highestCollectionOffer: bigint
  highestSold: bigint
  highestSoldListingVersion: Int
  id: Int
  listed: Int
  longestAverageHeldInSeconds: bigint
  lowestSold: bigint
  lowestSoldListingVersion: Int
  median: bigint
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: bigint
  primVolumeTz: bigint
  secVolumeNb: bigint
  secVolumeTz: bigint
}

"""
order by sum() on columns of table "market_stats_history"
"""
input market_stats_history_sum_order_by {
  averageSalePrice: order_by
  floor: order_by
  floorListingVersion: order_by
  highestCollectionOffer: order_by
  highestSold: order_by
  highestSoldListingVersion: order_by
  id: order_by
  listed: order_by
  longestAverageHeldInSeconds: order_by
  lowestSold: order_by
  lowestSoldListingVersion: order_by
  median: order_by
  percentListed: order_by
  percentNeverListed: order_by
  primVolumeNb: order_by
  primVolumeTz: order_by
  secVolumeNb: order_by
  secVolumeTz: order_by
}

"""
update columns of table "market_stats_history"
"""
enum market_stats_history_update_column {
  """column name"""
  averageSalePrice

  """column name"""
  floor

  """column name"""
  floorListingId

  """column name"""
  floorListingVersion

  """column name"""
  from

  """column name"""
  highestCollectionOffer

  """column name"""
  highestSold

  """column name"""
  highestSoldListingId

  """column name"""
  highestSoldListingVersion

  """column name"""
  id

  """column name"""
  listed

  """column name"""
  longestAverageHeldInSeconds

  """column name"""
  lowestSold

  """column name"""
  lowestSoldListingId

  """column name"""
  lowestSoldListingVersion

  """column name"""
  median

  """column name"""
  percentListed

  """column name"""
  percentNeverListed

  """column name"""
  primVolumeNb

  """column name"""
  primVolumeTz

  """column name"""
  secVolumeNb

  """column name"""
  secVolumeTz

  """column name"""
  to

  """column name"""
  tokenId
}

input market_stats_history_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: market_stats_history_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: market_stats_history_set_input

  """filter the rows which have to be updated"""
  where: market_stats_history_bool_exp!
}

"""aggregate var_pop on columns"""
type market_stats_history_var_pop_fields {
  averageSalePrice: Float
  floor: Float
  floorListingVersion: Float
  highestCollectionOffer: Float
  highestSold: Float
  highestSoldListingVersion: Float
  id: Float
  listed: Float
  longestAverageHeldInSeconds: Float
  lowestSold: Float
  lowestSoldListingVersion: Float
  median: Float
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: Float
  primVolumeTz: Float
  secVolumeNb: Float
  secVolumeTz: Float
}

"""
order by var_pop() on columns of table "market_stats_history"
"""
input market_stats_history_var_pop_order_by {
  averageSalePrice: order_by
  floor: order_by
  floorListingVersion: order_by
  highestCollectionOffer: order_by
  highestSold: order_by
  highestSoldListingVersion: order_by
  id: order_by
  listed: order_by
  longestAverageHeldInSeconds: order_by
  lowestSold: order_by
  lowestSoldListingVersion: order_by
  median: order_by
  percentListed: order_by
  percentNeverListed: order_by
  primVolumeNb: order_by
  primVolumeTz: order_by
  secVolumeNb: order_by
  secVolumeTz: order_by
}

"""aggregate var_samp on columns"""
type market_stats_history_var_samp_fields {
  averageSalePrice: Float
  floor: Float
  floorListingVersion: Float
  highestCollectionOffer: Float
  highestSold: Float
  highestSoldListingVersion: Float
  id: Float
  listed: Float
  longestAverageHeldInSeconds: Float
  lowestSold: Float
  lowestSoldListingVersion: Float
  median: Float
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: Float
  primVolumeTz: Float
  secVolumeNb: Float
  secVolumeTz: Float
}

"""
order by var_samp() on columns of table "market_stats_history"
"""
input market_stats_history_var_samp_order_by {
  averageSalePrice: order_by
  floor: order_by
  floorListingVersion: order_by
  highestCollectionOffer: order_by
  highestSold: order_by
  highestSoldListingVersion: order_by
  id: order_by
  listed: order_by
  longestAverageHeldInSeconds: order_by
  lowestSold: order_by
  lowestSoldListingVersion: order_by
  median: order_by
  percentListed: order_by
  percentNeverListed: order_by
  primVolumeNb: order_by
  primVolumeTz: order_by
  secVolumeNb: order_by
  secVolumeTz: order_by
}

"""aggregate variance on columns"""
type market_stats_history_variance_fields {
  averageSalePrice: Float
  floor: Float
  floorListingVersion: Float
  highestCollectionOffer: Float
  highestSold: Float
  highestSoldListingVersion: Float
  id: Float
  listed: Float
  longestAverageHeldInSeconds: Float
  lowestSold: Float
  lowestSoldListingVersion: Float
  median: Float
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: Float
  primVolumeTz: Float
  secVolumeNb: Float
  secVolumeTz: Float
}

"""
order by variance() on columns of table "market_stats_history"
"""
input market_stats_history_variance_order_by {
  averageSalePrice: order_by
  floor: order_by
  floorListingVersion: order_by
  highestCollectionOffer: order_by
  highestSold: order_by
  highestSoldListingVersion: order_by
  id: order_by
  listed: order_by
  longestAverageHeldInSeconds: order_by
  lowestSold: order_by
  lowestSoldListingVersion: order_by
  median: order_by
  percentListed: order_by
  percentNeverListed: order_by
  primVolumeNb: order_by
  primVolumeTz: order_by
  secVolumeNb: order_by
  secVolumeTz: order_by
}

"""
input type for incrementing numeric columns in table "market_stats"
"""
input market_stats_inc_input {
  averageSalePrice: numeric
  floor: numeric
  floor24: numeric
  floor30d: numeric
  floor7d: numeric
  floorListingVersion: Int
  highestCollectionOffer: numeric
  highestSold: numeric
  highestSold24: numeric
  highestSold30d: numeric
  highestSold7d: numeric
  highestSoldListingVersion: Int
  listed: Int
  longestAverageHeldInSeconds: bigint
  lowestSold: numeric
  lowestSold24: numeric
  lowestSold30d: numeric
  lowestSold7d: numeric
  lowestSoldListingVersion: Int
  median: numeric
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: numeric
  primVolumeTz: numeric
  secVolumeNb: numeric
  secVolumeNb24: numeric
  secVolumeNb30d: numeric
  secVolumeNb7d: numeric
  secVolumeTz: numeric
  secVolumeTz24: numeric
  secVolumeTz30d: numeric
  secVolumeTz7d: numeric
}

"""
input type for inserting data into table "market_stats"
"""
input market_stats_insert_input {
  averageSalePrice: numeric
  floor: numeric
  floor24: numeric
  floor30d: numeric
  floor7d: numeric
  floorListingId: String
  floorListingVersion: Int
  from: timestamptz
  generative_token: generative_token_obj_rel_insert_input
  highestCollectionOffer: numeric
  highestSold: numeric
  highestSold24: numeric
  highestSold30d: numeric
  highestSold7d: numeric
  highestSoldListingId: String
  highestSoldListingVersion: Int
  listed: Int
  listing: listing_obj_rel_insert_input
  listingByFloorlistingversionFloorlistingid: listing_obj_rel_insert_input
  listingByLowestsoldlistingversionLowestsoldlistingid: listing_obj_rel_insert_input
  longestAverageHeldInSeconds: bigint
  lowestSold: numeric
  lowestSold24: numeric
  lowestSold30d: numeric
  lowestSold7d: numeric
  lowestSoldListingId: String
  lowestSoldListingVersion: Int
  median: numeric
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: numeric
  primVolumeTz: numeric
  secVolumeNb: numeric
  secVolumeNb24: numeric
  secVolumeNb30d: numeric
  secVolumeNb7d: numeric
  secVolumeTz: numeric
  secVolumeTz24: numeric
  secVolumeTz30d: numeric
  secVolumeTz7d: numeric
  to: timestamptz
  tokenId: String
}

"""aggregate max on columns"""
type market_stats_max_fields {
  averageSalePrice: numeric
  floor: numeric
  floor24: numeric
  floor30d: numeric
  floor7d: numeric
  floorListingId: String
  floorListingVersion: Int
  from: timestamptz
  highestCollectionOffer: numeric
  highestSold: numeric
  highestSold24: numeric
  highestSold30d: numeric
  highestSold7d: numeric
  highestSoldListingId: String
  highestSoldListingVersion: Int
  listed: Int
  longestAverageHeldInSeconds: bigint
  lowestSold: numeric
  lowestSold24: numeric
  lowestSold30d: numeric
  lowestSold7d: numeric
  lowestSoldListingId: String
  lowestSoldListingVersion: Int
  median: numeric
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: numeric
  primVolumeTz: numeric
  secVolumeNb: numeric
  secVolumeNb24: numeric
  secVolumeNb30d: numeric
  secVolumeNb7d: numeric
  secVolumeTz: numeric
  secVolumeTz24: numeric
  secVolumeTz30d: numeric
  secVolumeTz7d: numeric
  to: timestamptz
  tokenId: String
}

"""aggregate min on columns"""
type market_stats_min_fields {
  averageSalePrice: numeric
  floor: numeric
  floor24: numeric
  floor30d: numeric
  floor7d: numeric
  floorListingId: String
  floorListingVersion: Int
  from: timestamptz
  highestCollectionOffer: numeric
  highestSold: numeric
  highestSold24: numeric
  highestSold30d: numeric
  highestSold7d: numeric
  highestSoldListingId: String
  highestSoldListingVersion: Int
  listed: Int
  longestAverageHeldInSeconds: bigint
  lowestSold: numeric
  lowestSold24: numeric
  lowestSold30d: numeric
  lowestSold7d: numeric
  lowestSoldListingId: String
  lowestSoldListingVersion: Int
  median: numeric
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: numeric
  primVolumeTz: numeric
  secVolumeNb: numeric
  secVolumeNb24: numeric
  secVolumeNb30d: numeric
  secVolumeNb7d: numeric
  secVolumeTz: numeric
  secVolumeTz24: numeric
  secVolumeTz30d: numeric
  secVolumeTz7d: numeric
  to: timestamptz
  tokenId: String
}

"""
response of any mutation on the table "market_stats"
"""
type market_stats_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [market_stats!]!
}

"""
input type for inserting object relation for remote table "market_stats"
"""
input market_stats_obj_rel_insert_input {
  data: market_stats_insert_input!

  """upsert condition"""
  on_conflict: market_stats_on_conflict
}

"""
on_conflict condition type for table "market_stats"
"""
input market_stats_on_conflict {
  constraint: market_stats_constraint!
  update_columns: [market_stats_update_column!]! = []
  where: market_stats_bool_exp
}

"""Ordering options when selecting data from "market_stats"."""
input market_stats_order_by {
  averageSalePrice: order_by
  floor: order_by
  floor24: order_by
  floor30d: order_by
  floor7d: order_by
  floorListingId: order_by
  floorListingVersion: order_by
  from: order_by
  generative_token: generative_token_order_by
  highestCollectionOffer: order_by
  highestSold: order_by
  highestSold24: order_by
  highestSold30d: order_by
  highestSold7d: order_by
  highestSoldListingId: order_by
  highestSoldListingVersion: order_by
  listed: order_by
  listing: listing_order_by
  listingByFloorlistingversionFloorlistingid: listing_order_by
  listingByLowestsoldlistingversionLowestsoldlistingid: listing_order_by
  longestAverageHeldInSeconds: order_by
  lowestSold: order_by
  lowestSold24: order_by
  lowestSold30d: order_by
  lowestSold7d: order_by
  lowestSoldListingId: order_by
  lowestSoldListingVersion: order_by
  median: order_by
  percentListed: order_by
  percentNeverListed: order_by
  primVolumeNb: order_by
  primVolumeTz: order_by
  secVolumeNb: order_by
  secVolumeNb24: order_by
  secVolumeNb30d: order_by
  secVolumeNb7d: order_by
  secVolumeTz: order_by
  secVolumeTz24: order_by
  secVolumeTz30d: order_by
  secVolumeTz7d: order_by
  to: order_by
  tokenId: order_by
}

"""primary key columns input for table: market_stats"""
input market_stats_pk_columns_input {
  tokenId: String!
}

"""
select columns of table "market_stats"
"""
enum market_stats_select_column {
  """column name"""
  averageSalePrice

  """column name"""
  floor

  """column name"""
  floor24

  """column name"""
  floor30d

  """column name"""
  floor7d

  """column name"""
  floorListingId

  """column name"""
  floorListingVersion

  """column name"""
  from

  """column name"""
  highestCollectionOffer

  """column name"""
  highestSold

  """column name"""
  highestSold24

  """column name"""
  highestSold30d

  """column name"""
  highestSold7d

  """column name"""
  highestSoldListingId

  """column name"""
  highestSoldListingVersion

  """column name"""
  listed

  """column name"""
  longestAverageHeldInSeconds

  """column name"""
  lowestSold

  """column name"""
  lowestSold24

  """column name"""
  lowestSold30d

  """column name"""
  lowestSold7d

  """column name"""
  lowestSoldListingId

  """column name"""
  lowestSoldListingVersion

  """column name"""
  median

  """column name"""
  percentListed

  """column name"""
  percentNeverListed

  """column name"""
  primVolumeNb

  """column name"""
  primVolumeTz

  """column name"""
  secVolumeNb

  """column name"""
  secVolumeNb24

  """column name"""
  secVolumeNb30d

  """column name"""
  secVolumeNb7d

  """column name"""
  secVolumeTz

  """column name"""
  secVolumeTz24

  """column name"""
  secVolumeTz30d

  """column name"""
  secVolumeTz7d

  """column name"""
  to

  """column name"""
  tokenId
}

"""
input type for updating data in table "market_stats"
"""
input market_stats_set_input {
  averageSalePrice: numeric
  floor: numeric
  floor24: numeric
  floor30d: numeric
  floor7d: numeric
  floorListingId: String
  floorListingVersion: Int
  from: timestamptz
  highestCollectionOffer: numeric
  highestSold: numeric
  highestSold24: numeric
  highestSold30d: numeric
  highestSold7d: numeric
  highestSoldListingId: String
  highestSoldListingVersion: Int
  listed: Int
  longestAverageHeldInSeconds: bigint
  lowestSold: numeric
  lowestSold24: numeric
  lowestSold30d: numeric
  lowestSold7d: numeric
  lowestSoldListingId: String
  lowestSoldListingVersion: Int
  median: numeric
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: numeric
  primVolumeTz: numeric
  secVolumeNb: numeric
  secVolumeNb24: numeric
  secVolumeNb30d: numeric
  secVolumeNb7d: numeric
  secVolumeTz: numeric
  secVolumeTz24: numeric
  secVolumeTz30d: numeric
  secVolumeTz7d: numeric
  to: timestamptz
  tokenId: String
}

"""aggregate stddev on columns"""
type market_stats_stddev_fields {
  averageSalePrice: Float
  floor: Float
  floor24: Float
  floor30d: Float
  floor7d: Float
  floorListingVersion: Float
  highestCollectionOffer: Float
  highestSold: Float
  highestSold24: Float
  highestSold30d: Float
  highestSold7d: Float
  highestSoldListingVersion: Float
  listed: Float
  longestAverageHeldInSeconds: Float
  lowestSold: Float
  lowestSold24: Float
  lowestSold30d: Float
  lowestSold7d: Float
  lowestSoldListingVersion: Float
  median: Float
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: Float
  primVolumeTz: Float
  secVolumeNb: Float
  secVolumeNb24: Float
  secVolumeNb30d: Float
  secVolumeNb7d: Float
  secVolumeTz: Float
  secVolumeTz24: Float
  secVolumeTz30d: Float
  secVolumeTz7d: Float
}

"""aggregate stddev_pop on columns"""
type market_stats_stddev_pop_fields {
  averageSalePrice: Float
  floor: Float
  floor24: Float
  floor30d: Float
  floor7d: Float
  floorListingVersion: Float
  highestCollectionOffer: Float
  highestSold: Float
  highestSold24: Float
  highestSold30d: Float
  highestSold7d: Float
  highestSoldListingVersion: Float
  listed: Float
  longestAverageHeldInSeconds: Float
  lowestSold: Float
  lowestSold24: Float
  lowestSold30d: Float
  lowestSold7d: Float
  lowestSoldListingVersion: Float
  median: Float
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: Float
  primVolumeTz: Float
  secVolumeNb: Float
  secVolumeNb24: Float
  secVolumeNb30d: Float
  secVolumeNb7d: Float
  secVolumeTz: Float
  secVolumeTz24: Float
  secVolumeTz30d: Float
  secVolumeTz7d: Float
}

"""aggregate stddev_samp on columns"""
type market_stats_stddev_samp_fields {
  averageSalePrice: Float
  floor: Float
  floor24: Float
  floor30d: Float
  floor7d: Float
  floorListingVersion: Float
  highestCollectionOffer: Float
  highestSold: Float
  highestSold24: Float
  highestSold30d: Float
  highestSold7d: Float
  highestSoldListingVersion: Float
  listed: Float
  longestAverageHeldInSeconds: Float
  lowestSold: Float
  lowestSold24: Float
  lowestSold30d: Float
  lowestSold7d: Float
  lowestSoldListingVersion: Float
  median: Float
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: Float
  primVolumeTz: Float
  secVolumeNb: Float
  secVolumeNb24: Float
  secVolumeNb30d: Float
  secVolumeNb7d: Float
  secVolumeTz: Float
  secVolumeTz24: Float
  secVolumeTz30d: Float
  secVolumeTz7d: Float
}

"""
Streaming cursor of the table "market_stats"
"""
input market_stats_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: market_stats_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input market_stats_stream_cursor_value_input {
  averageSalePrice: numeric
  floor: numeric
  floor24: numeric
  floor30d: numeric
  floor7d: numeric
  floorListingId: String
  floorListingVersion: Int
  from: timestamptz
  highestCollectionOffer: numeric
  highestSold: numeric
  highestSold24: numeric
  highestSold30d: numeric
  highestSold7d: numeric
  highestSoldListingId: String
  highestSoldListingVersion: Int
  listed: Int
  longestAverageHeldInSeconds: bigint
  lowestSold: numeric
  lowestSold24: numeric
  lowestSold30d: numeric
  lowestSold7d: numeric
  lowestSoldListingId: String
  lowestSoldListingVersion: Int
  median: numeric
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: numeric
  primVolumeTz: numeric
  secVolumeNb: numeric
  secVolumeNb24: numeric
  secVolumeNb30d: numeric
  secVolumeNb7d: numeric
  secVolumeTz: numeric
  secVolumeTz24: numeric
  secVolumeTz30d: numeric
  secVolumeTz7d: numeric
  to: timestamptz
  tokenId: String
}

"""aggregate sum on columns"""
type market_stats_sum_fields {
  averageSalePrice: numeric
  floor: numeric
  floor24: numeric
  floor30d: numeric
  floor7d: numeric
  floorListingVersion: Int
  highestCollectionOffer: numeric
  highestSold: numeric
  highestSold24: numeric
  highestSold30d: numeric
  highestSold7d: numeric
  highestSoldListingVersion: Int
  listed: Int
  longestAverageHeldInSeconds: bigint
  lowestSold: numeric
  lowestSold24: numeric
  lowestSold30d: numeric
  lowestSold7d: numeric
  lowestSoldListingVersion: Int
  median: numeric
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: numeric
  primVolumeTz: numeric
  secVolumeNb: numeric
  secVolumeNb24: numeric
  secVolumeNb30d: numeric
  secVolumeNb7d: numeric
  secVolumeTz: numeric
  secVolumeTz24: numeric
  secVolumeTz30d: numeric
  secVolumeTz7d: numeric
}

"""
update columns of table "market_stats"
"""
enum market_stats_update_column {
  """column name"""
  averageSalePrice

  """column name"""
  floor

  """column name"""
  floor24

  """column name"""
  floor30d

  """column name"""
  floor7d

  """column name"""
  floorListingId

  """column name"""
  floorListingVersion

  """column name"""
  from

  """column name"""
  highestCollectionOffer

  """column name"""
  highestSold

  """column name"""
  highestSold24

  """column name"""
  highestSold30d

  """column name"""
  highestSold7d

  """column name"""
  highestSoldListingId

  """column name"""
  highestSoldListingVersion

  """column name"""
  listed

  """column name"""
  longestAverageHeldInSeconds

  """column name"""
  lowestSold

  """column name"""
  lowestSold24

  """column name"""
  lowestSold30d

  """column name"""
  lowestSold7d

  """column name"""
  lowestSoldListingId

  """column name"""
  lowestSoldListingVersion

  """column name"""
  median

  """column name"""
  percentListed

  """column name"""
  percentNeverListed

  """column name"""
  primVolumeNb

  """column name"""
  primVolumeTz

  """column name"""
  secVolumeNb

  """column name"""
  secVolumeNb24

  """column name"""
  secVolumeNb30d

  """column name"""
  secVolumeNb7d

  """column name"""
  secVolumeTz

  """column name"""
  secVolumeTz24

  """column name"""
  secVolumeTz30d

  """column name"""
  secVolumeTz7d

  """column name"""
  to

  """column name"""
  tokenId
}

input market_stats_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: market_stats_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: market_stats_set_input

  """filter the rows which have to be updated"""
  where: market_stats_bool_exp!
}

"""aggregate var_pop on columns"""
type market_stats_var_pop_fields {
  averageSalePrice: Float
  floor: Float
  floor24: Float
  floor30d: Float
  floor7d: Float
  floorListingVersion: Float
  highestCollectionOffer: Float
  highestSold: Float
  highestSold24: Float
  highestSold30d: Float
  highestSold7d: Float
  highestSoldListingVersion: Float
  listed: Float
  longestAverageHeldInSeconds: Float
  lowestSold: Float
  lowestSold24: Float
  lowestSold30d: Float
  lowestSold7d: Float
  lowestSoldListingVersion: Float
  median: Float
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: Float
  primVolumeTz: Float
  secVolumeNb: Float
  secVolumeNb24: Float
  secVolumeNb30d: Float
  secVolumeNb7d: Float
  secVolumeTz: Float
  secVolumeTz24: Float
  secVolumeTz30d: Float
  secVolumeTz7d: Float
}

"""aggregate var_samp on columns"""
type market_stats_var_samp_fields {
  averageSalePrice: Float
  floor: Float
  floor24: Float
  floor30d: Float
  floor7d: Float
  floorListingVersion: Float
  highestCollectionOffer: Float
  highestSold: Float
  highestSold24: Float
  highestSold30d: Float
  highestSold7d: Float
  highestSoldListingVersion: Float
  listed: Float
  longestAverageHeldInSeconds: Float
  lowestSold: Float
  lowestSold24: Float
  lowestSold30d: Float
  lowestSold7d: Float
  lowestSoldListingVersion: Float
  median: Float
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: Float
  primVolumeTz: Float
  secVolumeNb: Float
  secVolumeNb24: Float
  secVolumeNb30d: Float
  secVolumeNb7d: Float
  secVolumeTz: Float
  secVolumeTz24: Float
  secVolumeTz30d: Float
  secVolumeTz7d: Float
}

"""aggregate variance on columns"""
type market_stats_variance_fields {
  averageSalePrice: Float
  floor: Float
  floor24: Float
  floor30d: Float
  floor7d: Float
  floorListingVersion: Float
  highestCollectionOffer: Float
  highestSold: Float
  highestSold24: Float
  highestSold30d: Float
  highestSold7d: Float
  highestSoldListingVersion: Float
  listed: Float
  longestAverageHeldInSeconds: Float
  lowestSold: Float
  lowestSold24: Float
  lowestSold30d: Float
  lowestSold7d: Float
  lowestSoldListingVersion: Float
  median: Float
  percentListed: Float
  percentNeverListed: Float
  primVolumeNb: Float
  primVolumeTz: Float
  secVolumeNb: Float
  secVolumeNb24: Float
  secVolumeNb30d: Float
  secVolumeNb7d: Float
  secVolumeTz: Float
  secVolumeTz24: Float
  secVolumeTz30d: Float
  secVolumeTz7d: Float
}

"""
columns and relationships of "media_image"
"""
type media_image {
  """An array relationship"""
  articles(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): [article!]!

  """An aggregate relationship"""
  articles_aggregate(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): article_aggregate!
  cid: bpchar!

  """An array relationship"""
  generative_tokens(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): [generative_token!]!

  """An aggregate relationship"""
  generative_tokens_aggregate(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): generative_token_aggregate!
  height: Int
  metadata(
    """JSON select path"""
    path: String
  ): json
  mimeType: String

  """An array relationship"""
  mint_ticket_settings(
    """distinct select on columns"""
    distinct_on: [mint_ticket_settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_settings_order_by!]

    """filter the rows returned"""
    where: mint_ticket_settings_bool_exp
  ): [mint_ticket_settings!]!

  """An aggregate relationship"""
  mint_ticket_settings_aggregate(
    """distinct select on columns"""
    distinct_on: [mint_ticket_settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_settings_order_by!]

    """filter the rows returned"""
    where: mint_ticket_settings_bool_exp
  ): mint_ticket_settings_aggregate!

  """An array relationship"""
  objkts(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): [objkt!]!

  """An aggregate relationship"""
  objkts_aggregate(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): objkt_aggregate!
  placeholder: String
  processCounters: smallint!
  processed: Boolean!

  """An array relationship"""
  users(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): [user!]!

  """An aggregate relationship"""
  users_aggregate(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): user_aggregate!
  width: Int
}

"""
aggregated selection of "media_image"
"""
type media_image_aggregate {
  aggregate: media_image_aggregate_fields
  nodes: [media_image!]!
}

"""
aggregate fields of "media_image"
"""
type media_image_aggregate_fields {
  avg: media_image_avg_fields
  count(columns: [media_image_select_column!], distinct: Boolean): Int!
  max: media_image_max_fields
  min: media_image_min_fields
  stddev: media_image_stddev_fields
  stddev_pop: media_image_stddev_pop_fields
  stddev_samp: media_image_stddev_samp_fields
  sum: media_image_sum_fields
  var_pop: media_image_var_pop_fields
  var_samp: media_image_var_samp_fields
  variance: media_image_variance_fields
}

"""aggregate avg on columns"""
type media_image_avg_fields {
  height: Float
  processCounters: Float
  width: Float
}

"""
Boolean expression to filter rows from the table "media_image". All fields are combined with a logical 'AND'.
"""
input media_image_bool_exp {
  _and: [media_image_bool_exp!]
  _not: media_image_bool_exp
  _or: [media_image_bool_exp!]
  articles: article_bool_exp
  articles_aggregate: article_aggregate_bool_exp
  cid: bpchar_comparison_exp
  generative_tokens: generative_token_bool_exp
  generative_tokens_aggregate: generative_token_aggregate_bool_exp
  height: Int_comparison_exp
  metadata: json_comparison_exp
  mimeType: String_comparison_exp
  mint_ticket_settings: mint_ticket_settings_bool_exp
  mint_ticket_settings_aggregate: mint_ticket_settings_aggregate_bool_exp
  objkts: objkt_bool_exp
  objkts_aggregate: objkt_aggregate_bool_exp
  placeholder: String_comparison_exp
  processCounters: smallint_comparison_exp
  processed: Boolean_comparison_exp
  users: user_bool_exp
  users_aggregate: user_aggregate_bool_exp
  width: Int_comparison_exp
}

"""
unique or primary key constraints on table "media_image"
"""
enum media_image_constraint {
  """
  unique or primary key constraint on columns "cid"
  """
  PK_6b20376a151c97894a44a572715
}

"""
input type for incrementing numeric columns in table "media_image"
"""
input media_image_inc_input {
  height: Int
  processCounters: smallint
  width: Int
}

"""
input type for inserting data into table "media_image"
"""
input media_image_insert_input {
  articles: article_arr_rel_insert_input
  cid: bpchar
  generative_tokens: generative_token_arr_rel_insert_input
  height: Int
  metadata: json
  mimeType: String
  mint_ticket_settings: mint_ticket_settings_arr_rel_insert_input
  objkts: objkt_arr_rel_insert_input
  placeholder: String
  processCounters: smallint
  processed: Boolean
  users: user_arr_rel_insert_input
  width: Int
}

"""aggregate max on columns"""
type media_image_max_fields {
  cid: bpchar
  height: Int
  mimeType: String
  placeholder: String
  processCounters: smallint
  width: Int
}

"""aggregate min on columns"""
type media_image_min_fields {
  cid: bpchar
  height: Int
  mimeType: String
  placeholder: String
  processCounters: smallint
  width: Int
}

"""
response of any mutation on the table "media_image"
"""
type media_image_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [media_image!]!
}

"""
input type for inserting object relation for remote table "media_image"
"""
input media_image_obj_rel_insert_input {
  data: media_image_insert_input!

  """upsert condition"""
  on_conflict: media_image_on_conflict
}

"""
on_conflict condition type for table "media_image"
"""
input media_image_on_conflict {
  constraint: media_image_constraint!
  update_columns: [media_image_update_column!]! = []
  where: media_image_bool_exp
}

"""Ordering options when selecting data from "media_image"."""
input media_image_order_by {
  articles_aggregate: article_aggregate_order_by
  cid: order_by
  generative_tokens_aggregate: generative_token_aggregate_order_by
  height: order_by
  metadata: order_by
  mimeType: order_by
  mint_ticket_settings_aggregate: mint_ticket_settings_aggregate_order_by
  objkts_aggregate: objkt_aggregate_order_by
  placeholder: order_by
  processCounters: order_by
  processed: order_by
  users_aggregate: user_aggregate_order_by
  width: order_by
}

"""primary key columns input for table: media_image"""
input media_image_pk_columns_input {
  cid: bpchar!
}

"""
select columns of table "media_image"
"""
enum media_image_select_column {
  """column name"""
  cid

  """column name"""
  height

  """column name"""
  metadata

  """column name"""
  mimeType

  """column name"""
  placeholder

  """column name"""
  processCounters

  """column name"""
  processed

  """column name"""
  width
}

"""
input type for updating data in table "media_image"
"""
input media_image_set_input {
  cid: bpchar
  height: Int
  metadata: json
  mimeType: String
  placeholder: String
  processCounters: smallint
  processed: Boolean
  width: Int
}

"""aggregate stddev on columns"""
type media_image_stddev_fields {
  height: Float
  processCounters: Float
  width: Float
}

"""aggregate stddev_pop on columns"""
type media_image_stddev_pop_fields {
  height: Float
  processCounters: Float
  width: Float
}

"""aggregate stddev_samp on columns"""
type media_image_stddev_samp_fields {
  height: Float
  processCounters: Float
  width: Float
}

"""
Streaming cursor of the table "media_image"
"""
input media_image_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: media_image_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input media_image_stream_cursor_value_input {
  cid: bpchar
  height: Int
  metadata: json
  mimeType: String
  placeholder: String
  processCounters: smallint
  processed: Boolean
  width: Int
}

"""aggregate sum on columns"""
type media_image_sum_fields {
  height: Int
  processCounters: smallint
  width: Int
}

"""
update columns of table "media_image"
"""
enum media_image_update_column {
  """column name"""
  cid

  """column name"""
  height

  """column name"""
  metadata

  """column name"""
  mimeType

  """column name"""
  placeholder

  """column name"""
  processCounters

  """column name"""
  processed

  """column name"""
  width
}

input media_image_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: media_image_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: media_image_set_input

  """filter the rows which have to be updated"""
  where: media_image_bool_exp!
}

"""aggregate var_pop on columns"""
type media_image_var_pop_fields {
  height: Float
  processCounters: Float
  width: Float
}

"""aggregate var_samp on columns"""
type media_image_var_samp_fields {
  height: Float
  processCounters: Float
  width: Float
}

"""aggregate variance on columns"""
type media_image_variance_fields {
  height: Float
  processCounters: Float
  width: Float
}

"""
columns and relationships of "metric"
"""
type metric {
  endedAt: Int!
  id: String!
  name: String!
  startedAt: Int!
}

"""
aggregated selection of "metric"
"""
type metric_aggregate {
  aggregate: metric_aggregate_fields
  nodes: [metric!]!
}

"""
aggregate fields of "metric"
"""
type metric_aggregate_fields {
  avg: metric_avg_fields
  count(columns: [metric_select_column!], distinct: Boolean): Int!
  max: metric_max_fields
  min: metric_min_fields
  stddev: metric_stddev_fields
  stddev_pop: metric_stddev_pop_fields
  stddev_samp: metric_stddev_samp_fields
  sum: metric_sum_fields
  var_pop: metric_var_pop_fields
  var_samp: metric_var_samp_fields
  variance: metric_variance_fields
}

"""aggregate avg on columns"""
type metric_avg_fields {
  endedAt: Float
  startedAt: Float
}

"""
Boolean expression to filter rows from the table "metric". All fields are combined with a logical 'AND'.
"""
input metric_bool_exp {
  _and: [metric_bool_exp!]
  _not: metric_bool_exp
  _or: [metric_bool_exp!]
  endedAt: Int_comparison_exp
  id: String_comparison_exp
  name: String_comparison_exp
  startedAt: Int_comparison_exp
}

"""
unique or primary key constraints on table "metric"
"""
enum metric_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_7d24c075ea2926dd32bd1c534ce
}

"""
input type for incrementing numeric columns in table "metric"
"""
input metric_inc_input {
  endedAt: Int
  startedAt: Int
}

"""
input type for inserting data into table "metric"
"""
input metric_insert_input {
  endedAt: Int
  id: String
  name: String
  startedAt: Int
}

"""aggregate max on columns"""
type metric_max_fields {
  endedAt: Int
  id: String
  name: String
  startedAt: Int
}

"""aggregate min on columns"""
type metric_min_fields {
  endedAt: Int
  id: String
  name: String
  startedAt: Int
}

"""
response of any mutation on the table "metric"
"""
type metric_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [metric!]!
}

"""
on_conflict condition type for table "metric"
"""
input metric_on_conflict {
  constraint: metric_constraint!
  update_columns: [metric_update_column!]! = []
  where: metric_bool_exp
}

"""Ordering options when selecting data from "metric"."""
input metric_order_by {
  endedAt: order_by
  id: order_by
  name: order_by
  startedAt: order_by
}

"""primary key columns input for table: metric"""
input metric_pk_columns_input {
  id: String!
}

"""
select columns of table "metric"
"""
enum metric_select_column {
  """column name"""
  endedAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  startedAt
}

"""
input type for updating data in table "metric"
"""
input metric_set_input {
  endedAt: Int
  id: String
  name: String
  startedAt: Int
}

"""aggregate stddev on columns"""
type metric_stddev_fields {
  endedAt: Float
  startedAt: Float
}

"""aggregate stddev_pop on columns"""
type metric_stddev_pop_fields {
  endedAt: Float
  startedAt: Float
}

"""aggregate stddev_samp on columns"""
type metric_stddev_samp_fields {
  endedAt: Float
  startedAt: Float
}

"""
Streaming cursor of the table "metric"
"""
input metric_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: metric_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input metric_stream_cursor_value_input {
  endedAt: Int
  id: String
  name: String
  startedAt: Int
}

"""aggregate sum on columns"""
type metric_sum_fields {
  endedAt: Int
  startedAt: Int
}

"""
update columns of table "metric"
"""
enum metric_update_column {
  """column name"""
  endedAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  startedAt
}

input metric_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: metric_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: metric_set_input

  """filter the rows which have to be updated"""
  where: metric_bool_exp!
}

"""aggregate var_pop on columns"""
type metric_var_pop_fields {
  endedAt: Float
  startedAt: Float
}

"""aggregate var_samp on columns"""
type metric_var_samp_fields {
  endedAt: Float
  startedAt: Float
}

"""aggregate variance on columns"""
type metric_variance_fields {
  endedAt: Float
  startedAt: Float
}

"""
columns and relationships of "mint_ticket"
"""
type mint_ticket {
  createdAt: timestamptz!

  """An object relationship"""
  generative_token: generative_token
  id: String!
  ownerId: String!
  price: numeric!
  taxationLocked: numeric!
  taxationPaidUntil: timestamptz!
  taxationStart: timestamptz!
  tokenId: String

  """An object relationship"""
  user: user!
}

"""
aggregated selection of "mint_ticket"
"""
type mint_ticket_aggregate {
  aggregate: mint_ticket_aggregate_fields
  nodes: [mint_ticket!]!
}

input mint_ticket_aggregate_bool_exp {
  count: mint_ticket_aggregate_bool_exp_count
}

input mint_ticket_aggregate_bool_exp_count {
  arguments: [mint_ticket_select_column!]
  distinct: Boolean
  filter: mint_ticket_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "mint_ticket"
"""
type mint_ticket_aggregate_fields {
  avg: mint_ticket_avg_fields
  count(columns: [mint_ticket_select_column!], distinct: Boolean): Int!
  max: mint_ticket_max_fields
  min: mint_ticket_min_fields
  stddev: mint_ticket_stddev_fields
  stddev_pop: mint_ticket_stddev_pop_fields
  stddev_samp: mint_ticket_stddev_samp_fields
  sum: mint_ticket_sum_fields
  var_pop: mint_ticket_var_pop_fields
  var_samp: mint_ticket_var_samp_fields
  variance: mint_ticket_variance_fields
}

"""
order by aggregate values of table "mint_ticket"
"""
input mint_ticket_aggregate_order_by {
  avg: mint_ticket_avg_order_by
  count: order_by
  max: mint_ticket_max_order_by
  min: mint_ticket_min_order_by
  stddev: mint_ticket_stddev_order_by
  stddev_pop: mint_ticket_stddev_pop_order_by
  stddev_samp: mint_ticket_stddev_samp_order_by
  sum: mint_ticket_sum_order_by
  var_pop: mint_ticket_var_pop_order_by
  var_samp: mint_ticket_var_samp_order_by
  variance: mint_ticket_variance_order_by
}

"""
input type for inserting array relation for remote table "mint_ticket"
"""
input mint_ticket_arr_rel_insert_input {
  data: [mint_ticket_insert_input!]!

  """upsert condition"""
  on_conflict: mint_ticket_on_conflict
}

"""aggregate avg on columns"""
type mint_ticket_avg_fields {
  price: Float
  taxationLocked: Float
}

"""
order by avg() on columns of table "mint_ticket"
"""
input mint_ticket_avg_order_by {
  price: order_by
  taxationLocked: order_by
}

"""
Boolean expression to filter rows from the table "mint_ticket". All fields are combined with a logical 'AND'.
"""
input mint_ticket_bool_exp {
  _and: [mint_ticket_bool_exp!]
  _not: mint_ticket_bool_exp
  _or: [mint_ticket_bool_exp!]
  createdAt: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  id: String_comparison_exp
  ownerId: String_comparison_exp
  price: numeric_comparison_exp
  taxationLocked: numeric_comparison_exp
  taxationPaidUntil: timestamptz_comparison_exp
  taxationStart: timestamptz_comparison_exp
  tokenId: String_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "mint_ticket"
"""
enum mint_ticket_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_703bfcfef7f2257bf4815fb59d1
}

"""
input type for incrementing numeric columns in table "mint_ticket"
"""
input mint_ticket_inc_input {
  price: numeric
  taxationLocked: numeric
}

"""
input type for inserting data into table "mint_ticket"
"""
input mint_ticket_insert_input {
  createdAt: timestamptz
  generative_token: generative_token_obj_rel_insert_input
  id: String
  ownerId: String
  price: numeric
  taxationLocked: numeric
  taxationPaidUntil: timestamptz
  taxationStart: timestamptz
  tokenId: String
  user: user_obj_rel_insert_input
}

"""aggregate max on columns"""
type mint_ticket_max_fields {
  createdAt: timestamptz
  id: String
  ownerId: String
  price: numeric
  taxationLocked: numeric
  taxationPaidUntil: timestamptz
  taxationStart: timestamptz
  tokenId: String
}

"""
order by max() on columns of table "mint_ticket"
"""
input mint_ticket_max_order_by {
  createdAt: order_by
  id: order_by
  ownerId: order_by
  price: order_by
  taxationLocked: order_by
  taxationPaidUntil: order_by
  taxationStart: order_by
  tokenId: order_by
}

"""aggregate min on columns"""
type mint_ticket_min_fields {
  createdAt: timestamptz
  id: String
  ownerId: String
  price: numeric
  taxationLocked: numeric
  taxationPaidUntil: timestamptz
  taxationStart: timestamptz
  tokenId: String
}

"""
order by min() on columns of table "mint_ticket"
"""
input mint_ticket_min_order_by {
  createdAt: order_by
  id: order_by
  ownerId: order_by
  price: order_by
  taxationLocked: order_by
  taxationPaidUntil: order_by
  taxationStart: order_by
  tokenId: order_by
}

"""
response of any mutation on the table "mint_ticket"
"""
type mint_ticket_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [mint_ticket!]!
}

"""
on_conflict condition type for table "mint_ticket"
"""
input mint_ticket_on_conflict {
  constraint: mint_ticket_constraint!
  update_columns: [mint_ticket_update_column!]! = []
  where: mint_ticket_bool_exp
}

"""Ordering options when selecting data from "mint_ticket"."""
input mint_ticket_order_by {
  createdAt: order_by
  generative_token: generative_token_order_by
  id: order_by
  ownerId: order_by
  price: order_by
  taxationLocked: order_by
  taxationPaidUntil: order_by
  taxationStart: order_by
  tokenId: order_by
  user: user_order_by
}

"""primary key columns input for table: mint_ticket"""
input mint_ticket_pk_columns_input {
  id: String!
}

"""
select columns of table "mint_ticket"
"""
enum mint_ticket_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  ownerId

  """column name"""
  price

  """column name"""
  taxationLocked

  """column name"""
  taxationPaidUntil

  """column name"""
  taxationStart

  """column name"""
  tokenId
}

"""
input type for updating data in table "mint_ticket"
"""
input mint_ticket_set_input {
  createdAt: timestamptz
  id: String
  ownerId: String
  price: numeric
  taxationLocked: numeric
  taxationPaidUntil: timestamptz
  taxationStart: timestamptz
  tokenId: String
}

"""
columns and relationships of "mint_ticket_settings"
"""
type mint_ticket_settings {
  captureMediaId: bpchar

  """An object relationship"""
  generative_token: generative_token
  gracingPeriod: Int!
  id: String!

  """An object relationship"""
  media_image: media_image
  metadata(
    """JSON select path"""
    path: String
  ): json!
  metadataUri: String
  tokenId: String
}

"""
aggregated selection of "mint_ticket_settings"
"""
type mint_ticket_settings_aggregate {
  aggregate: mint_ticket_settings_aggregate_fields
  nodes: [mint_ticket_settings!]!
}

input mint_ticket_settings_aggregate_bool_exp {
  count: mint_ticket_settings_aggregate_bool_exp_count
}

input mint_ticket_settings_aggregate_bool_exp_count {
  arguments: [mint_ticket_settings_select_column!]
  distinct: Boolean
  filter: mint_ticket_settings_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "mint_ticket_settings"
"""
type mint_ticket_settings_aggregate_fields {
  avg: mint_ticket_settings_avg_fields
  count(columns: [mint_ticket_settings_select_column!], distinct: Boolean): Int!
  max: mint_ticket_settings_max_fields
  min: mint_ticket_settings_min_fields
  stddev: mint_ticket_settings_stddev_fields
  stddev_pop: mint_ticket_settings_stddev_pop_fields
  stddev_samp: mint_ticket_settings_stddev_samp_fields
  sum: mint_ticket_settings_sum_fields
  var_pop: mint_ticket_settings_var_pop_fields
  var_samp: mint_ticket_settings_var_samp_fields
  variance: mint_ticket_settings_variance_fields
}

"""
order by aggregate values of table "mint_ticket_settings"
"""
input mint_ticket_settings_aggregate_order_by {
  avg: mint_ticket_settings_avg_order_by
  count: order_by
  max: mint_ticket_settings_max_order_by
  min: mint_ticket_settings_min_order_by
  stddev: mint_ticket_settings_stddev_order_by
  stddev_pop: mint_ticket_settings_stddev_pop_order_by
  stddev_samp: mint_ticket_settings_stddev_samp_order_by
  sum: mint_ticket_settings_sum_order_by
  var_pop: mint_ticket_settings_var_pop_order_by
  var_samp: mint_ticket_settings_var_samp_order_by
  variance: mint_ticket_settings_variance_order_by
}

"""
input type for inserting array relation for remote table "mint_ticket_settings"
"""
input mint_ticket_settings_arr_rel_insert_input {
  data: [mint_ticket_settings_insert_input!]!

  """upsert condition"""
  on_conflict: mint_ticket_settings_on_conflict
}

"""aggregate avg on columns"""
type mint_ticket_settings_avg_fields {
  gracingPeriod: Float
}

"""
order by avg() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_avg_order_by {
  gracingPeriod: order_by
}

"""
Boolean expression to filter rows from the table "mint_ticket_settings". All fields are combined with a logical 'AND'.
"""
input mint_ticket_settings_bool_exp {
  _and: [mint_ticket_settings_bool_exp!]
  _not: mint_ticket_settings_bool_exp
  _or: [mint_ticket_settings_bool_exp!]
  captureMediaId: bpchar_comparison_exp
  generative_token: generative_token_bool_exp
  gracingPeriod: Int_comparison_exp
  id: String_comparison_exp
  media_image: media_image_bool_exp
  metadata: json_comparison_exp
  metadataUri: String_comparison_exp
  tokenId: String_comparison_exp
}

"""
unique or primary key constraints on table "mint_ticket_settings"
"""
enum mint_ticket_settings_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_3d9d47cf1717a7d63bdd4d0c6ab
}

"""
input type for incrementing numeric columns in table "mint_ticket_settings"
"""
input mint_ticket_settings_inc_input {
  gracingPeriod: Int
}

"""
input type for inserting data into table "mint_ticket_settings"
"""
input mint_ticket_settings_insert_input {
  captureMediaId: bpchar
  generative_token: generative_token_obj_rel_insert_input
  gracingPeriod: Int
  id: String
  media_image: media_image_obj_rel_insert_input
  metadata: json
  metadataUri: String
  tokenId: String
}

"""aggregate max on columns"""
type mint_ticket_settings_max_fields {
  captureMediaId: bpchar
  gracingPeriod: Int
  id: String
  metadataUri: String
  tokenId: String
}

"""
order by max() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_max_order_by {
  captureMediaId: order_by
  gracingPeriod: order_by
  id: order_by
  metadataUri: order_by
  tokenId: order_by
}

"""aggregate min on columns"""
type mint_ticket_settings_min_fields {
  captureMediaId: bpchar
  gracingPeriod: Int
  id: String
  metadataUri: String
  tokenId: String
}

"""
order by min() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_min_order_by {
  captureMediaId: order_by
  gracingPeriod: order_by
  id: order_by
  metadataUri: order_by
  tokenId: order_by
}

"""
response of any mutation on the table "mint_ticket_settings"
"""
type mint_ticket_settings_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [mint_ticket_settings!]!
}

"""
input type for inserting object relation for remote table "mint_ticket_settings"
"""
input mint_ticket_settings_obj_rel_insert_input {
  data: mint_ticket_settings_insert_input!

  """upsert condition"""
  on_conflict: mint_ticket_settings_on_conflict
}

"""
on_conflict condition type for table "mint_ticket_settings"
"""
input mint_ticket_settings_on_conflict {
  constraint: mint_ticket_settings_constraint!
  update_columns: [mint_ticket_settings_update_column!]! = []
  where: mint_ticket_settings_bool_exp
}

"""Ordering options when selecting data from "mint_ticket_settings"."""
input mint_ticket_settings_order_by {
  captureMediaId: order_by
  generative_token: generative_token_order_by
  gracingPeriod: order_by
  id: order_by
  media_image: media_image_order_by
  metadata: order_by
  metadataUri: order_by
  tokenId: order_by
}

"""primary key columns input for table: mint_ticket_settings"""
input mint_ticket_settings_pk_columns_input {
  id: String!
}

"""
select columns of table "mint_ticket_settings"
"""
enum mint_ticket_settings_select_column {
  """column name"""
  captureMediaId

  """column name"""
  gracingPeriod

  """column name"""
  id

  """column name"""
  metadata

  """column name"""
  metadataUri

  """column name"""
  tokenId
}

"""
input type for updating data in table "mint_ticket_settings"
"""
input mint_ticket_settings_set_input {
  captureMediaId: bpchar
  gracingPeriod: Int
  id: String
  metadata: json
  metadataUri: String
  tokenId: String
}

"""aggregate stddev on columns"""
type mint_ticket_settings_stddev_fields {
  gracingPeriod: Float
}

"""
order by stddev() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_stddev_order_by {
  gracingPeriod: order_by
}

"""aggregate stddev_pop on columns"""
type mint_ticket_settings_stddev_pop_fields {
  gracingPeriod: Float
}

"""
order by stddev_pop() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_stddev_pop_order_by {
  gracingPeriod: order_by
}

"""aggregate stddev_samp on columns"""
type mint_ticket_settings_stddev_samp_fields {
  gracingPeriod: Float
}

"""
order by stddev_samp() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_stddev_samp_order_by {
  gracingPeriod: order_by
}

"""
Streaming cursor of the table "mint_ticket_settings"
"""
input mint_ticket_settings_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: mint_ticket_settings_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input mint_ticket_settings_stream_cursor_value_input {
  captureMediaId: bpchar
  gracingPeriod: Int
  id: String
  metadata: json
  metadataUri: String
  tokenId: String
}

"""aggregate sum on columns"""
type mint_ticket_settings_sum_fields {
  gracingPeriod: Int
}

"""
order by sum() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_sum_order_by {
  gracingPeriod: order_by
}

"""
update columns of table "mint_ticket_settings"
"""
enum mint_ticket_settings_update_column {
  """column name"""
  captureMediaId

  """column name"""
  gracingPeriod

  """column name"""
  id

  """column name"""
  metadata

  """column name"""
  metadataUri

  """column name"""
  tokenId
}

input mint_ticket_settings_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: mint_ticket_settings_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: mint_ticket_settings_set_input

  """filter the rows which have to be updated"""
  where: mint_ticket_settings_bool_exp!
}

"""aggregate var_pop on columns"""
type mint_ticket_settings_var_pop_fields {
  gracingPeriod: Float
}

"""
order by var_pop() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_var_pop_order_by {
  gracingPeriod: order_by
}

"""aggregate var_samp on columns"""
type mint_ticket_settings_var_samp_fields {
  gracingPeriod: Float
}

"""
order by var_samp() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_var_samp_order_by {
  gracingPeriod: order_by
}

"""aggregate variance on columns"""
type mint_ticket_settings_variance_fields {
  gracingPeriod: Float
}

"""
order by variance() on columns of table "mint_ticket_settings"
"""
input mint_ticket_settings_variance_order_by {
  gracingPeriod: order_by
}

"""aggregate stddev on columns"""
type mint_ticket_stddev_fields {
  price: Float
  taxationLocked: Float
}

"""
order by stddev() on columns of table "mint_ticket"
"""
input mint_ticket_stddev_order_by {
  price: order_by
  taxationLocked: order_by
}

"""aggregate stddev_pop on columns"""
type mint_ticket_stddev_pop_fields {
  price: Float
  taxationLocked: Float
}

"""
order by stddev_pop() on columns of table "mint_ticket"
"""
input mint_ticket_stddev_pop_order_by {
  price: order_by
  taxationLocked: order_by
}

"""aggregate stddev_samp on columns"""
type mint_ticket_stddev_samp_fields {
  price: Float
  taxationLocked: Float
}

"""
order by stddev_samp() on columns of table "mint_ticket"
"""
input mint_ticket_stddev_samp_order_by {
  price: order_by
  taxationLocked: order_by
}

"""
Streaming cursor of the table "mint_ticket"
"""
input mint_ticket_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: mint_ticket_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input mint_ticket_stream_cursor_value_input {
  createdAt: timestamptz
  id: String
  ownerId: String
  price: numeric
  taxationLocked: numeric
  taxationPaidUntil: timestamptz
  taxationStart: timestamptz
  tokenId: String
}

"""aggregate sum on columns"""
type mint_ticket_sum_fields {
  price: numeric
  taxationLocked: numeric
}

"""
order by sum() on columns of table "mint_ticket"
"""
input mint_ticket_sum_order_by {
  price: order_by
  taxationLocked: order_by
}

"""
update columns of table "mint_ticket"
"""
enum mint_ticket_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  ownerId

  """column name"""
  price

  """column name"""
  taxationLocked

  """column name"""
  taxationPaidUntil

  """column name"""
  taxationStart

  """column name"""
  tokenId
}

input mint_ticket_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: mint_ticket_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: mint_ticket_set_input

  """filter the rows which have to be updated"""
  where: mint_ticket_bool_exp!
}

"""aggregate var_pop on columns"""
type mint_ticket_var_pop_fields {
  price: Float
  taxationLocked: Float
}

"""
order by var_pop() on columns of table "mint_ticket"
"""
input mint_ticket_var_pop_order_by {
  price: order_by
  taxationLocked: order_by
}

"""aggregate var_samp on columns"""
type mint_ticket_var_samp_fields {
  price: Float
  taxationLocked: Float
}

"""
order by var_samp() on columns of table "mint_ticket"
"""
input mint_ticket_var_samp_order_by {
  price: order_by
  taxationLocked: order_by
}

"""aggregate variance on columns"""
type mint_ticket_variance_fields {
  price: Float
  taxationLocked: Float
}

"""
order by variance() on columns of table "mint_ticket"
"""
input mint_ticket_variance_order_by {
  price: order_by
  taxationLocked: order_by
}

"""
columns and relationships of "moderation_reason"
"""
type moderation_reason {
  """An array relationship"""
  articles(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): [article!]!

  """An aggregate relationship"""
  articles_aggregate(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): article_aggregate!

  """An array relationship"""
  generative_tokens(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): [generative_token!]!

  """An aggregate relationship"""
  generative_tokens_aggregate(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): generative_token_aggregate!
  id: String!
  reason: String!

  """An array relationship"""
  reports(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!

  """An aggregate relationship"""
  reports_aggregate(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): report_aggregate!

  """An array relationship"""
  users(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): [user!]!

  """An aggregate relationship"""
  users_aggregate(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): user_aggregate!
}

"""
aggregated selection of "moderation_reason"
"""
type moderation_reason_aggregate {
  aggregate: moderation_reason_aggregate_fields
  nodes: [moderation_reason!]!
}

"""
aggregate fields of "moderation_reason"
"""
type moderation_reason_aggregate_fields {
  count(columns: [moderation_reason_select_column!], distinct: Boolean): Int!
  max: moderation_reason_max_fields
  min: moderation_reason_min_fields
}

"""
Boolean expression to filter rows from the table "moderation_reason". All fields are combined with a logical 'AND'.
"""
input moderation_reason_bool_exp {
  _and: [moderation_reason_bool_exp!]
  _not: moderation_reason_bool_exp
  _or: [moderation_reason_bool_exp!]
  articles: article_bool_exp
  articles_aggregate: article_aggregate_bool_exp
  generative_tokens: generative_token_bool_exp
  generative_tokens_aggregate: generative_token_aggregate_bool_exp
  id: String_comparison_exp
  reason: String_comparison_exp
  reports: report_bool_exp
  reports_aggregate: report_aggregate_bool_exp
  users: user_bool_exp
  users_aggregate: user_aggregate_bool_exp
}

"""
unique or primary key constraints on table "moderation_reason"
"""
enum moderation_reason_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_fdcfcb2db6d8f8d793f0a26a87b
}

"""
input type for inserting data into table "moderation_reason"
"""
input moderation_reason_insert_input {
  articles: article_arr_rel_insert_input
  generative_tokens: generative_token_arr_rel_insert_input
  id: String
  reason: String
  reports: report_arr_rel_insert_input
  users: user_arr_rel_insert_input
}

"""aggregate max on columns"""
type moderation_reason_max_fields {
  id: String
  reason: String
}

"""aggregate min on columns"""
type moderation_reason_min_fields {
  id: String
  reason: String
}

"""
response of any mutation on the table "moderation_reason"
"""
type moderation_reason_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [moderation_reason!]!
}

"""
input type for inserting object relation for remote table "moderation_reason"
"""
input moderation_reason_obj_rel_insert_input {
  data: moderation_reason_insert_input!

  """upsert condition"""
  on_conflict: moderation_reason_on_conflict
}

"""
on_conflict condition type for table "moderation_reason"
"""
input moderation_reason_on_conflict {
  constraint: moderation_reason_constraint!
  update_columns: [moderation_reason_update_column!]! = []
  where: moderation_reason_bool_exp
}

"""Ordering options when selecting data from "moderation_reason"."""
input moderation_reason_order_by {
  articles_aggregate: article_aggregate_order_by
  generative_tokens_aggregate: generative_token_aggregate_order_by
  id: order_by
  reason: order_by
  reports_aggregate: report_aggregate_order_by
  users_aggregate: user_aggregate_order_by
}

"""primary key columns input for table: moderation_reason"""
input moderation_reason_pk_columns_input {
  id: String!
}

"""
select columns of table "moderation_reason"
"""
enum moderation_reason_select_column {
  """column name"""
  id

  """column name"""
  reason
}

"""
input type for updating data in table "moderation_reason"
"""
input moderation_reason_set_input {
  id: String
  reason: String
}

"""
Streaming cursor of the table "moderation_reason"
"""
input moderation_reason_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: moderation_reason_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input moderation_reason_stream_cursor_value_input {
  id: String
  reason: String
}

"""
update columns of table "moderation_reason"
"""
enum moderation_reason_update_column {
  """column name"""
  id

  """column name"""
  reason
}

input moderation_reason_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: moderation_reason_set_input

  """filter the rows which have to be updated"""
  where: moderation_reason_bool_exp!
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "action"
  """
  delete_action(
    """filter the rows which have to be deleted"""
    where: action_bool_exp!
  ): action_mutation_response

  """
  delete single row from the table: "action"
  """
  delete_action_by_pk(id: uuid!): action

  """
  delete data from the table: "article"
  """
  delete_article(
    """filter the rows which have to be deleted"""
    where: article_bool_exp!
  ): article_mutation_response

  """
  delete single row from the table: "article"
  """
  delete_article_by_pk(id: Int!): article

  """
  delete data from the table: "article_generative_token"
  """
  delete_article_generative_token(
    """filter the rows which have to be deleted"""
    where: article_generative_token_bool_exp!
  ): article_generative_token_mutation_response

  """
  delete single row from the table: "article_generative_token"
  """
  delete_article_generative_token_by_pk(articleId: Int!, generativeTokenId: String!): article_generative_token

  """
  delete data from the table: "article_ledger"
  """
  delete_article_ledger(
    """filter the rows which have to be deleted"""
    where: article_ledger_bool_exp!
  ): article_ledger_mutation_response

  """
  delete single row from the table: "article_ledger"
  """
  delete_article_ledger_by_pk(articleId: Int!, ownerId: String!): article_ledger

  """
  delete data from the table: "article_revision"
  """
  delete_article_revision(
    """filter the rows which have to be deleted"""
    where: article_revision_bool_exp!
  ): article_revision_mutation_response

  """
  delete single row from the table: "article_revision"
  """
  delete_article_revision_by_pk(articleId: Int!, iteration: smallint!): article_revision

  """
  delete data from the table: "auction"
  """
  delete_auction(
    """filter the rows which have to be deleted"""
    where: auction_bool_exp!
  ): auction_mutation_response

  """
  delete data from the table: "auction_bid"
  """
  delete_auction_bid(
    """filter the rows which have to be deleted"""
    where: auction_bid_bool_exp!
  ): auction_bid_mutation_response

  """
  delete single row from the table: "auction_bid"
  """
  delete_auction_bid_by_pk(id: uuid!): auction_bid

  """
  delete data from the table: "auction_bid_table"
  """
  delete_auction_bid_table(
    """filter the rows which have to be deleted"""
    where: auction_bid_table_bool_exp!
  ): auction_bid_table_mutation_response

  """
  delete single row from the table: "auction_bid_table"
  """
  delete_auction_bid_table_by_pk(id: Int!): auction_bid_table

  """
  delete single row from the table: "auction"
  """
  delete_auction_by_pk(id: Int!, version: Int!): auction

  """
  delete data from the table: "codex"
  """
  delete_codex(
    """filter the rows which have to be deleted"""
    where: codex_bool_exp!
  ): codex_mutation_response

  """
  delete single row from the table: "codex"
  """
  delete_codex_by_pk(id: String!, tokenVersion: generative_token_version!): codex

  """
  delete data from the table: "codex_update_request"
  """
  delete_codex_update_request(
    """filter the rows which have to be deleted"""
    where: codex_update_request_bool_exp!
  ): codex_update_request_mutation_response

  """
  delete single row from the table: "codex_update_request"
  """
  delete_codex_update_request_by_pk(codexId: String!, tokenId: String!, tokenVersion: generative_token_version!): codex_update_request

  """
  delete data from the table: "collaboration"
  """
  delete_collaboration(
    """filter the rows which have to be deleted"""
    where: collaboration_bool_exp!
  ): collaboration_mutation_response

  """
  delete single row from the table: "collaboration"
  """
  delete_collaboration_by_pk(collaborationContractId: String!, collaboratorId: String!): collaboration

  """
  delete data from the table: "collection_offer"
  """
  delete_collection_offer(
    """filter the rows which have to be deleted"""
    where: collection_offer_bool_exp!
  ): collection_offer_mutation_response

  """
  delete single row from the table: "collection_offer"
  """
  delete_collection_offer_by_pk(id: String!, version: Int!): collection_offer

  """
  delete data from the table: "generative_token"
  """
  delete_generative_token(
    """filter the rows which have to be deleted"""
    where: generative_token_bool_exp!
  ): generative_token_mutation_response

  """
  delete single row from the table: "generative_token"
  """
  delete_generative_token_by_pk(id: String!): generative_token

  """
  delete data from the table: "gentk_assign"
  """
  delete_gentk_assign(
    """filter the rows which have to be deleted"""
    where: gentk_assign_bool_exp!
  ): gentk_assign_mutation_response

  """
  delete single row from the table: "gentk_assign"
  """
  delete_gentk_assign_by_pk(gentkId: String!, gentkIssuerVersion: generative_token_version!): gentk_assign

  """
  delete data from the table: "ipfs_cid"
  """
  delete_ipfs_cid(
    """filter the rows which have to be deleted"""
    where: ipfs_cid_bool_exp!
  ): ipfs_cid_mutation_response

  """
  delete single row from the table: "ipfs_cid"
  """
  delete_ipfs_cid_by_pk(cid: String!): ipfs_cid

  """
  delete data from the table: "listing"
  """
  delete_listing(
    """filter the rows which have to be deleted"""
    where: listing_bool_exp!
  ): listing_mutation_response

  """
  delete single row from the table: "listing"
  """
  delete_listing_by_pk(id: String!, version: Int!): listing

  """
  delete data from the table: "market_stats"
  """
  delete_market_stats(
    """filter the rows which have to be deleted"""
    where: market_stats_bool_exp!
  ): market_stats_mutation_response

  """
  delete single row from the table: "market_stats"
  """
  delete_market_stats_by_pk(tokenId: String!): market_stats

  """
  delete data from the table: "market_stats_history"
  """
  delete_market_stats_history(
    """filter the rows which have to be deleted"""
    where: market_stats_history_bool_exp!
  ): market_stats_history_mutation_response

  """
  delete single row from the table: "market_stats_history"
  """
  delete_market_stats_history_by_pk(id: Int!): market_stats_history

  """
  delete data from the table: "media_image"
  """
  delete_media_image(
    """filter the rows which have to be deleted"""
    where: media_image_bool_exp!
  ): media_image_mutation_response

  """
  delete single row from the table: "media_image"
  """
  delete_media_image_by_pk(cid: bpchar!): media_image

  """
  delete data from the table: "metric"
  """
  delete_metric(
    """filter the rows which have to be deleted"""
    where: metric_bool_exp!
  ): metric_mutation_response

  """
  delete single row from the table: "metric"
  """
  delete_metric_by_pk(id: String!): metric

  """
  delete data from the table: "mint_ticket"
  """
  delete_mint_ticket(
    """filter the rows which have to be deleted"""
    where: mint_ticket_bool_exp!
  ): mint_ticket_mutation_response

  """
  delete single row from the table: "mint_ticket"
  """
  delete_mint_ticket_by_pk(id: String!): mint_ticket

  """
  delete data from the table: "mint_ticket_settings"
  """
  delete_mint_ticket_settings(
    """filter the rows which have to be deleted"""
    where: mint_ticket_settings_bool_exp!
  ): mint_ticket_settings_mutation_response

  """
  delete single row from the table: "mint_ticket_settings"
  """
  delete_mint_ticket_settings_by_pk(id: String!): mint_ticket_settings

  """
  delete data from the table: "moderation_reason"
  """
  delete_moderation_reason(
    """filter the rows which have to be deleted"""
    where: moderation_reason_bool_exp!
  ): moderation_reason_mutation_response

  """
  delete single row from the table: "moderation_reason"
  """
  delete_moderation_reason_by_pk(id: String!): moderation_reason

  """
  delete data from the table: "objkt"
  """
  delete_objkt(
    """filter the rows which have to be deleted"""
    where: objkt_bool_exp!
  ): objkt_mutation_response

  """
  delete single row from the table: "objkt"
  """
  delete_objkt_by_pk(id: String!, issuerVersion: generative_token_version!): objkt

  """
  delete data from the table: "offer"
  """
  delete_offer(
    """filter the rows which have to be deleted"""
    where: offer_bool_exp!
  ): offer_mutation_response

  """
  delete single row from the table: "offer"
  """
  delete_offer_by_pk(id: String!, version: Int!): offer

  """
  delete data from the table: "pricing_dutch_auction"
  """
  delete_pricing_dutch_auction(
    """filter the rows which have to be deleted"""
    where: pricing_dutch_auction_bool_exp!
  ): pricing_dutch_auction_mutation_response

  """
  delete single row from the table: "pricing_dutch_auction"
  """
  delete_pricing_dutch_auction_by_pk(id: String!): pricing_dutch_auction

  """
  delete data from the table: "pricing_fixed"
  """
  delete_pricing_fixed(
    """filter the rows which have to be deleted"""
    where: pricing_fixed_bool_exp!
  ): pricing_fixed_mutation_response

  """
  delete single row from the table: "pricing_fixed"
  """
  delete_pricing_fixed_by_pk(id: String!): pricing_fixed

  """
  delete data from the table: "redeemable"
  """
  delete_redeemable(
    """filter the rows which have to be deleted"""
    where: redeemable_bool_exp!
  ): redeemable_mutation_response

  """
  delete single row from the table: "redeemable"
  """
  delete_redeemable_by_pk(address: String!): redeemable

  """
  delete data from the table: "redemption"
  """
  delete_redemption(
    """filter the rows which have to be deleted"""
    where: redemption_bool_exp!
  ): redemption_mutation_response

  """
  delete single row from the table: "redemption"
  """
  delete_redemption_by_pk(id: Int!): redemption

  """
  delete data from the table: "report"
  """
  delete_report(
    """filter the rows which have to be deleted"""
    where: report_bool_exp!
  ): report_mutation_response

  """
  delete single row from the table: "report"
  """
  delete_report_by_pk(id: uuid!): report

  """
  delete data from the table: "reserve"
  """
  delete_reserve(
    """filter the rows which have to be deleted"""
    where: reserve_bool_exp!
  ): reserve_mutation_response

  """
  delete single row from the table: "reserve"
  """
  delete_reserve_by_pk(id: Int!): reserve

  """
  delete data from the table: "split"
  """
  delete_split(
    """filter the rows which have to be deleted"""
    where: split_bool_exp!
  ): split_mutation_response

  """
  delete single row from the table: "split"
  """
  delete_split_by_pk(id: Int!): split

  """
  delete data from the table: "transaction"
  """
  delete_transaction(
    """filter the rows which have to be deleted"""
    where: transaction_bool_exp!
  ): transaction_mutation_response

  """
  delete single row from the table: "transaction"
  """
  delete_transaction_by_pk(id: Int!): transaction

  """
  delete data from the table: "user"
  """
  delete_user(
    """filter the rows which have to be deleted"""
    where: user_bool_exp!
  ): user_mutation_response

  """
  delete single row from the table: "user"
  """
  delete_user_by_pk(id: String!): user

  """
  delete data from the table: "user_stats"
  """
  delete_user_stats(
    """filter the rows which have to be deleted"""
    where: user_stats_bool_exp!
  ): user_stats_mutation_response

  """
  delete single row from the table: "user_stats"
  """
  delete_user_stats_by_pk(userId: String!): user_stats

  """
  insert data into the table: "action"
  """
  insert_action(
    """the rows to be inserted"""
    objects: [action_insert_input!]!

    """upsert condition"""
    on_conflict: action_on_conflict
  ): action_mutation_response

  """
  insert a single row into the table: "action"
  """
  insert_action_one(
    """the row to be inserted"""
    object: action_insert_input!

    """upsert condition"""
    on_conflict: action_on_conflict
  ): action

  """
  insert data into the table: "article"
  """
  insert_article(
    """the rows to be inserted"""
    objects: [article_insert_input!]!

    """upsert condition"""
    on_conflict: article_on_conflict
  ): article_mutation_response

  """
  insert data into the table: "article_generative_token"
  """
  insert_article_generative_token(
    """the rows to be inserted"""
    objects: [article_generative_token_insert_input!]!

    """upsert condition"""
    on_conflict: article_generative_token_on_conflict
  ): article_generative_token_mutation_response

  """
  insert a single row into the table: "article_generative_token"
  """
  insert_article_generative_token_one(
    """the row to be inserted"""
    object: article_generative_token_insert_input!

    """upsert condition"""
    on_conflict: article_generative_token_on_conflict
  ): article_generative_token

  """
  insert data into the table: "article_ledger"
  """
  insert_article_ledger(
    """the rows to be inserted"""
    objects: [article_ledger_insert_input!]!

    """upsert condition"""
    on_conflict: article_ledger_on_conflict
  ): article_ledger_mutation_response

  """
  insert a single row into the table: "article_ledger"
  """
  insert_article_ledger_one(
    """the row to be inserted"""
    object: article_ledger_insert_input!

    """upsert condition"""
    on_conflict: article_ledger_on_conflict
  ): article_ledger

  """
  insert a single row into the table: "article"
  """
  insert_article_one(
    """the row to be inserted"""
    object: article_insert_input!

    """upsert condition"""
    on_conflict: article_on_conflict
  ): article

  """
  insert data into the table: "article_revision"
  """
  insert_article_revision(
    """the rows to be inserted"""
    objects: [article_revision_insert_input!]!

    """upsert condition"""
    on_conflict: article_revision_on_conflict
  ): article_revision_mutation_response

  """
  insert a single row into the table: "article_revision"
  """
  insert_article_revision_one(
    """the row to be inserted"""
    object: article_revision_insert_input!

    """upsert condition"""
    on_conflict: article_revision_on_conflict
  ): article_revision

  """
  insert data into the table: "auction"
  """
  insert_auction(
    """the rows to be inserted"""
    objects: [auction_insert_input!]!

    """upsert condition"""
    on_conflict: auction_on_conflict
  ): auction_mutation_response

  """
  insert data into the table: "auction_bid"
  """
  insert_auction_bid(
    """the rows to be inserted"""
    objects: [auction_bid_insert_input!]!

    """upsert condition"""
    on_conflict: auction_bid_on_conflict
  ): auction_bid_mutation_response

  """
  insert a single row into the table: "auction_bid"
  """
  insert_auction_bid_one(
    """the row to be inserted"""
    object: auction_bid_insert_input!

    """upsert condition"""
    on_conflict: auction_bid_on_conflict
  ): auction_bid

  """
  insert data into the table: "auction_bid_table"
  """
  insert_auction_bid_table(
    """the rows to be inserted"""
    objects: [auction_bid_table_insert_input!]!

    """upsert condition"""
    on_conflict: auction_bid_table_on_conflict
  ): auction_bid_table_mutation_response

  """
  insert a single row into the table: "auction_bid_table"
  """
  insert_auction_bid_table_one(
    """the row to be inserted"""
    object: auction_bid_table_insert_input!

    """upsert condition"""
    on_conflict: auction_bid_table_on_conflict
  ): auction_bid_table

  """
  insert a single row into the table: "auction"
  """
  insert_auction_one(
    """the row to be inserted"""
    object: auction_insert_input!

    """upsert condition"""
    on_conflict: auction_on_conflict
  ): auction

  """
  insert data into the table: "codex"
  """
  insert_codex(
    """the rows to be inserted"""
    objects: [codex_insert_input!]!

    """upsert condition"""
    on_conflict: codex_on_conflict
  ): codex_mutation_response

  """
  insert a single row into the table: "codex"
  """
  insert_codex_one(
    """the row to be inserted"""
    object: codex_insert_input!

    """upsert condition"""
    on_conflict: codex_on_conflict
  ): codex

  """
  insert data into the table: "codex_update_request"
  """
  insert_codex_update_request(
    """the rows to be inserted"""
    objects: [codex_update_request_insert_input!]!

    """upsert condition"""
    on_conflict: codex_update_request_on_conflict
  ): codex_update_request_mutation_response

  """
  insert a single row into the table: "codex_update_request"
  """
  insert_codex_update_request_one(
    """the row to be inserted"""
    object: codex_update_request_insert_input!

    """upsert condition"""
    on_conflict: codex_update_request_on_conflict
  ): codex_update_request

  """
  insert data into the table: "collaboration"
  """
  insert_collaboration(
    """the rows to be inserted"""
    objects: [collaboration_insert_input!]!

    """upsert condition"""
    on_conflict: collaboration_on_conflict
  ): collaboration_mutation_response

  """
  insert a single row into the table: "collaboration"
  """
  insert_collaboration_one(
    """the row to be inserted"""
    object: collaboration_insert_input!

    """upsert condition"""
    on_conflict: collaboration_on_conflict
  ): collaboration

  """
  insert data into the table: "collection_offer"
  """
  insert_collection_offer(
    """the rows to be inserted"""
    objects: [collection_offer_insert_input!]!

    """upsert condition"""
    on_conflict: collection_offer_on_conflict
  ): collection_offer_mutation_response

  """
  insert a single row into the table: "collection_offer"
  """
  insert_collection_offer_one(
    """the row to be inserted"""
    object: collection_offer_insert_input!

    """upsert condition"""
    on_conflict: collection_offer_on_conflict
  ): collection_offer

  """
  insert data into the table: "generative_token"
  """
  insert_generative_token(
    """the rows to be inserted"""
    objects: [generative_token_insert_input!]!

    """upsert condition"""
    on_conflict: generative_token_on_conflict
  ): generative_token_mutation_response

  """
  insert a single row into the table: "generative_token"
  """
  insert_generative_token_one(
    """the row to be inserted"""
    object: generative_token_insert_input!

    """upsert condition"""
    on_conflict: generative_token_on_conflict
  ): generative_token

  """
  insert data into the table: "gentk_assign"
  """
  insert_gentk_assign(
    """the rows to be inserted"""
    objects: [gentk_assign_insert_input!]!

    """upsert condition"""
    on_conflict: gentk_assign_on_conflict
  ): gentk_assign_mutation_response

  """
  insert a single row into the table: "gentk_assign"
  """
  insert_gentk_assign_one(
    """the row to be inserted"""
    object: gentk_assign_insert_input!

    """upsert condition"""
    on_conflict: gentk_assign_on_conflict
  ): gentk_assign

  """
  insert data into the table: "ipfs_cid"
  """
  insert_ipfs_cid(
    """the rows to be inserted"""
    objects: [ipfs_cid_insert_input!]!

    """upsert condition"""
    on_conflict: ipfs_cid_on_conflict
  ): ipfs_cid_mutation_response

  """
  insert a single row into the table: "ipfs_cid"
  """
  insert_ipfs_cid_one(
    """the row to be inserted"""
    object: ipfs_cid_insert_input!

    """upsert condition"""
    on_conflict: ipfs_cid_on_conflict
  ): ipfs_cid

  """
  insert data into the table: "listing"
  """
  insert_listing(
    """the rows to be inserted"""
    objects: [listing_insert_input!]!

    """upsert condition"""
    on_conflict: listing_on_conflict
  ): listing_mutation_response

  """
  insert a single row into the table: "listing"
  """
  insert_listing_one(
    """the row to be inserted"""
    object: listing_insert_input!

    """upsert condition"""
    on_conflict: listing_on_conflict
  ): listing

  """
  insert data into the table: "market_stats"
  """
  insert_market_stats(
    """the rows to be inserted"""
    objects: [market_stats_insert_input!]!

    """upsert condition"""
    on_conflict: market_stats_on_conflict
  ): market_stats_mutation_response

  """
  insert data into the table: "market_stats_history"
  """
  insert_market_stats_history(
    """the rows to be inserted"""
    objects: [market_stats_history_insert_input!]!

    """upsert condition"""
    on_conflict: market_stats_history_on_conflict
  ): market_stats_history_mutation_response

  """
  insert a single row into the table: "market_stats_history"
  """
  insert_market_stats_history_one(
    """the row to be inserted"""
    object: market_stats_history_insert_input!

    """upsert condition"""
    on_conflict: market_stats_history_on_conflict
  ): market_stats_history

  """
  insert a single row into the table: "market_stats"
  """
  insert_market_stats_one(
    """the row to be inserted"""
    object: market_stats_insert_input!

    """upsert condition"""
    on_conflict: market_stats_on_conflict
  ): market_stats

  """
  insert data into the table: "media_image"
  """
  insert_media_image(
    """the rows to be inserted"""
    objects: [media_image_insert_input!]!

    """upsert condition"""
    on_conflict: media_image_on_conflict
  ): media_image_mutation_response

  """
  insert a single row into the table: "media_image"
  """
  insert_media_image_one(
    """the row to be inserted"""
    object: media_image_insert_input!

    """upsert condition"""
    on_conflict: media_image_on_conflict
  ): media_image

  """
  insert data into the table: "metric"
  """
  insert_metric(
    """the rows to be inserted"""
    objects: [metric_insert_input!]!

    """upsert condition"""
    on_conflict: metric_on_conflict
  ): metric_mutation_response

  """
  insert a single row into the table: "metric"
  """
  insert_metric_one(
    """the row to be inserted"""
    object: metric_insert_input!

    """upsert condition"""
    on_conflict: metric_on_conflict
  ): metric

  """
  insert data into the table: "mint_ticket"
  """
  insert_mint_ticket(
    """the rows to be inserted"""
    objects: [mint_ticket_insert_input!]!

    """upsert condition"""
    on_conflict: mint_ticket_on_conflict
  ): mint_ticket_mutation_response

  """
  insert a single row into the table: "mint_ticket"
  """
  insert_mint_ticket_one(
    """the row to be inserted"""
    object: mint_ticket_insert_input!

    """upsert condition"""
    on_conflict: mint_ticket_on_conflict
  ): mint_ticket

  """
  insert data into the table: "mint_ticket_settings"
  """
  insert_mint_ticket_settings(
    """the rows to be inserted"""
    objects: [mint_ticket_settings_insert_input!]!

    """upsert condition"""
    on_conflict: mint_ticket_settings_on_conflict
  ): mint_ticket_settings_mutation_response

  """
  insert a single row into the table: "mint_ticket_settings"
  """
  insert_mint_ticket_settings_one(
    """the row to be inserted"""
    object: mint_ticket_settings_insert_input!

    """upsert condition"""
    on_conflict: mint_ticket_settings_on_conflict
  ): mint_ticket_settings

  """
  insert data into the table: "moderation_reason"
  """
  insert_moderation_reason(
    """the rows to be inserted"""
    objects: [moderation_reason_insert_input!]!

    """upsert condition"""
    on_conflict: moderation_reason_on_conflict
  ): moderation_reason_mutation_response

  """
  insert a single row into the table: "moderation_reason"
  """
  insert_moderation_reason_one(
    """the row to be inserted"""
    object: moderation_reason_insert_input!

    """upsert condition"""
    on_conflict: moderation_reason_on_conflict
  ): moderation_reason

  """
  insert data into the table: "objkt"
  """
  insert_objkt(
    """the rows to be inserted"""
    objects: [objkt_insert_input!]!

    """upsert condition"""
    on_conflict: objkt_on_conflict
  ): objkt_mutation_response

  """
  insert a single row into the table: "objkt"
  """
  insert_objkt_one(
    """the row to be inserted"""
    object: objkt_insert_input!

    """upsert condition"""
    on_conflict: objkt_on_conflict
  ): objkt

  """
  insert data into the table: "offer"
  """
  insert_offer(
    """the rows to be inserted"""
    objects: [offer_insert_input!]!

    """upsert condition"""
    on_conflict: offer_on_conflict
  ): offer_mutation_response

  """
  insert a single row into the table: "offer"
  """
  insert_offer_one(
    """the row to be inserted"""
    object: offer_insert_input!

    """upsert condition"""
    on_conflict: offer_on_conflict
  ): offer

  """
  insert data into the table: "pricing_dutch_auction"
  """
  insert_pricing_dutch_auction(
    """the rows to be inserted"""
    objects: [pricing_dutch_auction_insert_input!]!

    """upsert condition"""
    on_conflict: pricing_dutch_auction_on_conflict
  ): pricing_dutch_auction_mutation_response

  """
  insert a single row into the table: "pricing_dutch_auction"
  """
  insert_pricing_dutch_auction_one(
    """the row to be inserted"""
    object: pricing_dutch_auction_insert_input!

    """upsert condition"""
    on_conflict: pricing_dutch_auction_on_conflict
  ): pricing_dutch_auction

  """
  insert data into the table: "pricing_fixed"
  """
  insert_pricing_fixed(
    """the rows to be inserted"""
    objects: [pricing_fixed_insert_input!]!

    """upsert condition"""
    on_conflict: pricing_fixed_on_conflict
  ): pricing_fixed_mutation_response

  """
  insert a single row into the table: "pricing_fixed"
  """
  insert_pricing_fixed_one(
    """the row to be inserted"""
    object: pricing_fixed_insert_input!

    """upsert condition"""
    on_conflict: pricing_fixed_on_conflict
  ): pricing_fixed

  """
  insert data into the table: "redeemable"
  """
  insert_redeemable(
    """the rows to be inserted"""
    objects: [redeemable_insert_input!]!

    """upsert condition"""
    on_conflict: redeemable_on_conflict
  ): redeemable_mutation_response

  """
  insert a single row into the table: "redeemable"
  """
  insert_redeemable_one(
    """the row to be inserted"""
    object: redeemable_insert_input!

    """upsert condition"""
    on_conflict: redeemable_on_conflict
  ): redeemable

  """
  insert data into the table: "redemption"
  """
  insert_redemption(
    """the rows to be inserted"""
    objects: [redemption_insert_input!]!

    """upsert condition"""
    on_conflict: redemption_on_conflict
  ): redemption_mutation_response

  """
  insert a single row into the table: "redemption"
  """
  insert_redemption_one(
    """the row to be inserted"""
    object: redemption_insert_input!

    """upsert condition"""
    on_conflict: redemption_on_conflict
  ): redemption

  """
  insert data into the table: "report"
  """
  insert_report(
    """the rows to be inserted"""
    objects: [report_insert_input!]!

    """upsert condition"""
    on_conflict: report_on_conflict
  ): report_mutation_response

  """
  insert a single row into the table: "report"
  """
  insert_report_one(
    """the row to be inserted"""
    object: report_insert_input!

    """upsert condition"""
    on_conflict: report_on_conflict
  ): report

  """
  insert data into the table: "reserve"
  """
  insert_reserve(
    """the rows to be inserted"""
    objects: [reserve_insert_input!]!

    """upsert condition"""
    on_conflict: reserve_on_conflict
  ): reserve_mutation_response

  """
  insert a single row into the table: "reserve"
  """
  insert_reserve_one(
    """the row to be inserted"""
    object: reserve_insert_input!

    """upsert condition"""
    on_conflict: reserve_on_conflict
  ): reserve

  """
  insert data into the table: "split"
  """
  insert_split(
    """the rows to be inserted"""
    objects: [split_insert_input!]!

    """upsert condition"""
    on_conflict: split_on_conflict
  ): split_mutation_response

  """
  insert a single row into the table: "split"
  """
  insert_split_one(
    """the row to be inserted"""
    object: split_insert_input!

    """upsert condition"""
    on_conflict: split_on_conflict
  ): split

  """
  insert data into the table: "transaction"
  """
  insert_transaction(
    """the rows to be inserted"""
    objects: [transaction_insert_input!]!

    """upsert condition"""
    on_conflict: transaction_on_conflict
  ): transaction_mutation_response

  """
  insert a single row into the table: "transaction"
  """
  insert_transaction_one(
    """the row to be inserted"""
    object: transaction_insert_input!

    """upsert condition"""
    on_conflict: transaction_on_conflict
  ): transaction

  """
  insert data into the table: "user"
  """
  insert_user(
    """the rows to be inserted"""
    objects: [user_insert_input!]!

    """upsert condition"""
    on_conflict: user_on_conflict
  ): user_mutation_response

  """
  insert a single row into the table: "user"
  """
  insert_user_one(
    """the row to be inserted"""
    object: user_insert_input!

    """upsert condition"""
    on_conflict: user_on_conflict
  ): user

  """
  insert data into the table: "user_stats"
  """
  insert_user_stats(
    """the rows to be inserted"""
    objects: [user_stats_insert_input!]!

    """upsert condition"""
    on_conflict: user_stats_on_conflict
  ): user_stats_mutation_response

  """
  insert a single row into the table: "user_stats"
  """
  insert_user_stats_one(
    """the row to be inserted"""
    object: user_stats_insert_input!

    """upsert condition"""
    on_conflict: user_stats_on_conflict
  ): user_stats

  """
  update data of the table: "action"
  """
  update_action(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: action_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: action_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: action_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: action_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: action_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: action_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: action_set_input

    """filter the rows which have to be updated"""
    where: action_bool_exp!
  ): action_mutation_response

  """
  update single row of the table: "action"
  """
  update_action_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: action_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: action_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: action_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: action_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: action_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: action_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: action_set_input
    pk_columns: action_pk_columns_input!
  ): action

  """
  update multiples rows of table: "action"
  """
  update_action_many(
    """updates to execute, in order"""
    updates: [action_updates!]!
  ): [action_mutation_response]

  """
  update data of the table: "article"
  """
  update_article(
    """increments the numeric columns with given value of the filtered values"""
    _inc: article_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: article_set_input

    """filter the rows which have to be updated"""
    where: article_bool_exp!
  ): article_mutation_response

  """
  update single row of the table: "article"
  """
  update_article_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: article_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: article_set_input
    pk_columns: article_pk_columns_input!
  ): article

  """
  update data of the table: "article_generative_token"
  """
  update_article_generative_token(
    """increments the numeric columns with given value of the filtered values"""
    _inc: article_generative_token_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: article_generative_token_set_input

    """filter the rows which have to be updated"""
    where: article_generative_token_bool_exp!
  ): article_generative_token_mutation_response

  """
  update single row of the table: "article_generative_token"
  """
  update_article_generative_token_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: article_generative_token_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: article_generative_token_set_input
    pk_columns: article_generative_token_pk_columns_input!
  ): article_generative_token

  """
  update multiples rows of table: "article_generative_token"
  """
  update_article_generative_token_many(
    """updates to execute, in order"""
    updates: [article_generative_token_updates!]!
  ): [article_generative_token_mutation_response]

  """
  update data of the table: "article_ledger"
  """
  update_article_ledger(
    """increments the numeric columns with given value of the filtered values"""
    _inc: article_ledger_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: article_ledger_set_input

    """filter the rows which have to be updated"""
    where: article_ledger_bool_exp!
  ): article_ledger_mutation_response

  """
  update single row of the table: "article_ledger"
  """
  update_article_ledger_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: article_ledger_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: article_ledger_set_input
    pk_columns: article_ledger_pk_columns_input!
  ): article_ledger

  """
  update multiples rows of table: "article_ledger"
  """
  update_article_ledger_many(
    """updates to execute, in order"""
    updates: [article_ledger_updates!]!
  ): [article_ledger_mutation_response]

  """
  update multiples rows of table: "article"
  """
  update_article_many(
    """updates to execute, in order"""
    updates: [article_updates!]!
  ): [article_mutation_response]

  """
  update data of the table: "article_revision"
  """
  update_article_revision(
    """increments the numeric columns with given value of the filtered values"""
    _inc: article_revision_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: article_revision_set_input

    """filter the rows which have to be updated"""
    where: article_revision_bool_exp!
  ): article_revision_mutation_response

  """
  update single row of the table: "article_revision"
  """
  update_article_revision_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: article_revision_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: article_revision_set_input
    pk_columns: article_revision_pk_columns_input!
  ): article_revision

  """
  update multiples rows of table: "article_revision"
  """
  update_article_revision_many(
    """updates to execute, in order"""
    updates: [article_revision_updates!]!
  ): [article_revision_mutation_response]

  """
  update data of the table: "auction"
  """
  update_auction(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auction_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auction_set_input

    """filter the rows which have to be updated"""
    where: auction_bool_exp!
  ): auction_mutation_response

  """
  update data of the table: "auction_bid"
  """
  update_auction_bid(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auction_bid_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auction_bid_set_input

    """filter the rows which have to be updated"""
    where: auction_bid_bool_exp!
  ): auction_bid_mutation_response

  """
  update single row of the table: "auction_bid"
  """
  update_auction_bid_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auction_bid_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auction_bid_set_input
    pk_columns: auction_bid_pk_columns_input!
  ): auction_bid

  """
  update multiples rows of table: "auction_bid"
  """
  update_auction_bid_many(
    """updates to execute, in order"""
    updates: [auction_bid_updates!]!
  ): [auction_bid_mutation_response]

  """
  update data of the table: "auction_bid_table"
  """
  update_auction_bid_table(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: auction_bid_table_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: auction_bid_table_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: auction_bid_table_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: auction_bid_table_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: auction_bid_table_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: auction_bid_table_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: auction_bid_table_set_input

    """filter the rows which have to be updated"""
    where: auction_bid_table_bool_exp!
  ): auction_bid_table_mutation_response

  """
  update single row of the table: "auction_bid_table"
  """
  update_auction_bid_table_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: auction_bid_table_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: auction_bid_table_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: auction_bid_table_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: auction_bid_table_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: auction_bid_table_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: auction_bid_table_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: auction_bid_table_set_input
    pk_columns: auction_bid_table_pk_columns_input!
  ): auction_bid_table

  """
  update multiples rows of table: "auction_bid_table"
  """
  update_auction_bid_table_many(
    """updates to execute, in order"""
    updates: [auction_bid_table_updates!]!
  ): [auction_bid_table_mutation_response]

  """
  update single row of the table: "auction"
  """
  update_auction_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auction_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auction_set_input
    pk_columns: auction_pk_columns_input!
  ): auction

  """
  update multiples rows of table: "auction"
  """
  update_auction_many(
    """updates to execute, in order"""
    updates: [auction_updates!]!
  ): [auction_mutation_response]

  """
  update data of the table: "codex"
  """
  update_codex(
    """sets the columns of the filtered rows to the given values"""
    _set: codex_set_input

    """filter the rows which have to be updated"""
    where: codex_bool_exp!
  ): codex_mutation_response

  """
  update single row of the table: "codex"
  """
  update_codex_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: codex_set_input
    pk_columns: codex_pk_columns_input!
  ): codex

  """
  update multiples rows of table: "codex"
  """
  update_codex_many(
    """updates to execute, in order"""
    updates: [codex_updates!]!
  ): [codex_mutation_response]

  """
  update data of the table: "codex_update_request"
  """
  update_codex_update_request(
    """sets the columns of the filtered rows to the given values"""
    _set: codex_update_request_set_input

    """filter the rows which have to be updated"""
    where: codex_update_request_bool_exp!
  ): codex_update_request_mutation_response

  """
  update single row of the table: "codex_update_request"
  """
  update_codex_update_request_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: codex_update_request_set_input
    pk_columns: codex_update_request_pk_columns_input!
  ): codex_update_request

  """
  update multiples rows of table: "codex_update_request"
  """
  update_codex_update_request_many(
    """updates to execute, in order"""
    updates: [codex_update_request_updates!]!
  ): [codex_update_request_mutation_response]

  """
  update data of the table: "collaboration"
  """
  update_collaboration(
    """sets the columns of the filtered rows to the given values"""
    _set: collaboration_set_input

    """filter the rows which have to be updated"""
    where: collaboration_bool_exp!
  ): collaboration_mutation_response

  """
  update single row of the table: "collaboration"
  """
  update_collaboration_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: collaboration_set_input
    pk_columns: collaboration_pk_columns_input!
  ): collaboration

  """
  update multiples rows of table: "collaboration"
  """
  update_collaboration_many(
    """updates to execute, in order"""
    updates: [collaboration_updates!]!
  ): [collaboration_mutation_response]

  """
  update data of the table: "collection_offer"
  """
  update_collection_offer(
    """increments the numeric columns with given value of the filtered values"""
    _inc: collection_offer_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: collection_offer_set_input

    """filter the rows which have to be updated"""
    where: collection_offer_bool_exp!
  ): collection_offer_mutation_response

  """
  update single row of the table: "collection_offer"
  """
  update_collection_offer_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: collection_offer_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: collection_offer_set_input
    pk_columns: collection_offer_pk_columns_input!
  ): collection_offer

  """
  update multiples rows of table: "collection_offer"
  """
  update_collection_offer_many(
    """updates to execute, in order"""
    updates: [collection_offer_updates!]!
  ): [collection_offer_mutation_response]

  """
  update data of the table: "generative_token"
  """
  update_generative_token(
    """increments the numeric columns with given value of the filtered values"""
    _inc: generative_token_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: generative_token_set_input

    """filter the rows which have to be updated"""
    where: generative_token_bool_exp!
  ): generative_token_mutation_response

  """
  update single row of the table: "generative_token"
  """
  update_generative_token_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: generative_token_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: generative_token_set_input
    pk_columns: generative_token_pk_columns_input!
  ): generative_token

  """
  update multiples rows of table: "generative_token"
  """
  update_generative_token_many(
    """updates to execute, in order"""
    updates: [generative_token_updates!]!
  ): [generative_token_mutation_response]

  """
  update data of the table: "gentk_assign"
  """
  update_gentk_assign(
    """increments the numeric columns with given value of the filtered values"""
    _inc: gentk_assign_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: gentk_assign_set_input

    """filter the rows which have to be updated"""
    where: gentk_assign_bool_exp!
  ): gentk_assign_mutation_response

  """
  update single row of the table: "gentk_assign"
  """
  update_gentk_assign_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: gentk_assign_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: gentk_assign_set_input
    pk_columns: gentk_assign_pk_columns_input!
  ): gentk_assign

  """
  update multiples rows of table: "gentk_assign"
  """
  update_gentk_assign_many(
    """updates to execute, in order"""
    updates: [gentk_assign_updates!]!
  ): [gentk_assign_mutation_response]

  """
  update data of the table: "ipfs_cid"
  """
  update_ipfs_cid(
    """sets the columns of the filtered rows to the given values"""
    _set: ipfs_cid_set_input

    """filter the rows which have to be updated"""
    where: ipfs_cid_bool_exp!
  ): ipfs_cid_mutation_response

  """
  update single row of the table: "ipfs_cid"
  """
  update_ipfs_cid_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: ipfs_cid_set_input
    pk_columns: ipfs_cid_pk_columns_input!
  ): ipfs_cid

  """
  update multiples rows of table: "ipfs_cid"
  """
  update_ipfs_cid_many(
    """updates to execute, in order"""
    updates: [ipfs_cid_updates!]!
  ): [ipfs_cid_mutation_response]

  """
  update data of the table: "listing"
  """
  update_listing(
    """increments the numeric columns with given value of the filtered values"""
    _inc: listing_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: listing_set_input

    """filter the rows which have to be updated"""
    where: listing_bool_exp!
  ): listing_mutation_response

  """
  update single row of the table: "listing"
  """
  update_listing_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: listing_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: listing_set_input
    pk_columns: listing_pk_columns_input!
  ): listing

  """
  update multiples rows of table: "listing"
  """
  update_listing_many(
    """updates to execute, in order"""
    updates: [listing_updates!]!
  ): [listing_mutation_response]

  """
  update data of the table: "market_stats"
  """
  update_market_stats(
    """increments the numeric columns with given value of the filtered values"""
    _inc: market_stats_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: market_stats_set_input

    """filter the rows which have to be updated"""
    where: market_stats_bool_exp!
  ): market_stats_mutation_response

  """
  update single row of the table: "market_stats"
  """
  update_market_stats_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: market_stats_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: market_stats_set_input
    pk_columns: market_stats_pk_columns_input!
  ): market_stats

  """
  update data of the table: "market_stats_history"
  """
  update_market_stats_history(
    """increments the numeric columns with given value of the filtered values"""
    _inc: market_stats_history_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: market_stats_history_set_input

    """filter the rows which have to be updated"""
    where: market_stats_history_bool_exp!
  ): market_stats_history_mutation_response

  """
  update single row of the table: "market_stats_history"
  """
  update_market_stats_history_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: market_stats_history_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: market_stats_history_set_input
    pk_columns: market_stats_history_pk_columns_input!
  ): market_stats_history

  """
  update multiples rows of table: "market_stats_history"
  """
  update_market_stats_history_many(
    """updates to execute, in order"""
    updates: [market_stats_history_updates!]!
  ): [market_stats_history_mutation_response]

  """
  update multiples rows of table: "market_stats"
  """
  update_market_stats_many(
    """updates to execute, in order"""
    updates: [market_stats_updates!]!
  ): [market_stats_mutation_response]

  """
  update data of the table: "media_image"
  """
  update_media_image(
    """increments the numeric columns with given value of the filtered values"""
    _inc: media_image_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: media_image_set_input

    """filter the rows which have to be updated"""
    where: media_image_bool_exp!
  ): media_image_mutation_response

  """
  update single row of the table: "media_image"
  """
  update_media_image_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: media_image_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: media_image_set_input
    pk_columns: media_image_pk_columns_input!
  ): media_image

  """
  update multiples rows of table: "media_image"
  """
  update_media_image_many(
    """updates to execute, in order"""
    updates: [media_image_updates!]!
  ): [media_image_mutation_response]

  """
  update data of the table: "metric"
  """
  update_metric(
    """increments the numeric columns with given value of the filtered values"""
    _inc: metric_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_set_input

    """filter the rows which have to be updated"""
    where: metric_bool_exp!
  ): metric_mutation_response

  """
  update single row of the table: "metric"
  """
  update_metric_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: metric_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: metric_set_input
    pk_columns: metric_pk_columns_input!
  ): metric

  """
  update multiples rows of table: "metric"
  """
  update_metric_many(
    """updates to execute, in order"""
    updates: [metric_updates!]!
  ): [metric_mutation_response]

  """
  update data of the table: "mint_ticket"
  """
  update_mint_ticket(
    """increments the numeric columns with given value of the filtered values"""
    _inc: mint_ticket_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: mint_ticket_set_input

    """filter the rows which have to be updated"""
    where: mint_ticket_bool_exp!
  ): mint_ticket_mutation_response

  """
  update single row of the table: "mint_ticket"
  """
  update_mint_ticket_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: mint_ticket_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: mint_ticket_set_input
    pk_columns: mint_ticket_pk_columns_input!
  ): mint_ticket

  """
  update multiples rows of table: "mint_ticket"
  """
  update_mint_ticket_many(
    """updates to execute, in order"""
    updates: [mint_ticket_updates!]!
  ): [mint_ticket_mutation_response]

  """
  update data of the table: "mint_ticket_settings"
  """
  update_mint_ticket_settings(
    """increments the numeric columns with given value of the filtered values"""
    _inc: mint_ticket_settings_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: mint_ticket_settings_set_input

    """filter the rows which have to be updated"""
    where: mint_ticket_settings_bool_exp!
  ): mint_ticket_settings_mutation_response

  """
  update single row of the table: "mint_ticket_settings"
  """
  update_mint_ticket_settings_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: mint_ticket_settings_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: mint_ticket_settings_set_input
    pk_columns: mint_ticket_settings_pk_columns_input!
  ): mint_ticket_settings

  """
  update multiples rows of table: "mint_ticket_settings"
  """
  update_mint_ticket_settings_many(
    """updates to execute, in order"""
    updates: [mint_ticket_settings_updates!]!
  ): [mint_ticket_settings_mutation_response]

  """
  update data of the table: "moderation_reason"
  """
  update_moderation_reason(
    """sets the columns of the filtered rows to the given values"""
    _set: moderation_reason_set_input

    """filter the rows which have to be updated"""
    where: moderation_reason_bool_exp!
  ): moderation_reason_mutation_response

  """
  update single row of the table: "moderation_reason"
  """
  update_moderation_reason_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: moderation_reason_set_input
    pk_columns: moderation_reason_pk_columns_input!
  ): moderation_reason

  """
  update multiples rows of table: "moderation_reason"
  """
  update_moderation_reason_many(
    """updates to execute, in order"""
    updates: [moderation_reason_updates!]!
  ): [moderation_reason_mutation_response]

  """
  update data of the table: "objkt"
  """
  update_objkt(
    """increments the numeric columns with given value of the filtered values"""
    _inc: objkt_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: objkt_set_input

    """filter the rows which have to be updated"""
    where: objkt_bool_exp!
  ): objkt_mutation_response

  """
  update single row of the table: "objkt"
  """
  update_objkt_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: objkt_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: objkt_set_input
    pk_columns: objkt_pk_columns_input!
  ): objkt

  """
  update multiples rows of table: "objkt"
  """
  update_objkt_many(
    """updates to execute, in order"""
    updates: [objkt_updates!]!
  ): [objkt_mutation_response]

  """
  update data of the table: "offer"
  """
  update_offer(
    """increments the numeric columns with given value of the filtered values"""
    _inc: offer_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: offer_set_input

    """filter the rows which have to be updated"""
    where: offer_bool_exp!
  ): offer_mutation_response

  """
  update single row of the table: "offer"
  """
  update_offer_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: offer_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: offer_set_input
    pk_columns: offer_pk_columns_input!
  ): offer

  """
  update multiples rows of table: "offer"
  """
  update_offer_many(
    """updates to execute, in order"""
    updates: [offer_updates!]!
  ): [offer_mutation_response]

  """
  update data of the table: "pricing_dutch_auction"
  """
  update_pricing_dutch_auction(
    """increments the numeric columns with given value of the filtered values"""
    _inc: pricing_dutch_auction_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: pricing_dutch_auction_set_input

    """filter the rows which have to be updated"""
    where: pricing_dutch_auction_bool_exp!
  ): pricing_dutch_auction_mutation_response

  """
  update single row of the table: "pricing_dutch_auction"
  """
  update_pricing_dutch_auction_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: pricing_dutch_auction_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: pricing_dutch_auction_set_input
    pk_columns: pricing_dutch_auction_pk_columns_input!
  ): pricing_dutch_auction

  """
  update multiples rows of table: "pricing_dutch_auction"
  """
  update_pricing_dutch_auction_many(
    """updates to execute, in order"""
    updates: [pricing_dutch_auction_updates!]!
  ): [pricing_dutch_auction_mutation_response]

  """
  update data of the table: "pricing_fixed"
  """
  update_pricing_fixed(
    """increments the numeric columns with given value of the filtered values"""
    _inc: pricing_fixed_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: pricing_fixed_set_input

    """filter the rows which have to be updated"""
    where: pricing_fixed_bool_exp!
  ): pricing_fixed_mutation_response

  """
  update single row of the table: "pricing_fixed"
  """
  update_pricing_fixed_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: pricing_fixed_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: pricing_fixed_set_input
    pk_columns: pricing_fixed_pk_columns_input!
  ): pricing_fixed

  """
  update multiples rows of table: "pricing_fixed"
  """
  update_pricing_fixed_many(
    """updates to execute, in order"""
    updates: [pricing_fixed_updates!]!
  ): [pricing_fixed_mutation_response]

  """
  update data of the table: "redeemable"
  """
  update_redeemable(
    """increments the numeric columns with given value of the filtered values"""
    _inc: redeemable_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: redeemable_set_input

    """filter the rows which have to be updated"""
    where: redeemable_bool_exp!
  ): redeemable_mutation_response

  """
  update single row of the table: "redeemable"
  """
  update_redeemable_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: redeemable_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: redeemable_set_input
    pk_columns: redeemable_pk_columns_input!
  ): redeemable

  """
  update multiples rows of table: "redeemable"
  """
  update_redeemable_many(
    """updates to execute, in order"""
    updates: [redeemable_updates!]!
  ): [redeemable_mutation_response]

  """
  update data of the table: "redemption"
  """
  update_redemption(
    """increments the numeric columns with given value of the filtered values"""
    _inc: redemption_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: redemption_set_input

    """filter the rows which have to be updated"""
    where: redemption_bool_exp!
  ): redemption_mutation_response

  """
  update single row of the table: "redemption"
  """
  update_redemption_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: redemption_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: redemption_set_input
    pk_columns: redemption_pk_columns_input!
  ): redemption

  """
  update multiples rows of table: "redemption"
  """
  update_redemption_many(
    """updates to execute, in order"""
    updates: [redemption_updates!]!
  ): [redemption_mutation_response]

  """
  update data of the table: "report"
  """
  update_report(
    """sets the columns of the filtered rows to the given values"""
    _set: report_set_input

    """filter the rows which have to be updated"""
    where: report_bool_exp!
  ): report_mutation_response

  """
  update single row of the table: "report"
  """
  update_report_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: report_set_input
    pk_columns: report_pk_columns_input!
  ): report

  """
  update multiples rows of table: "report"
  """
  update_report_many(
    """updates to execute, in order"""
    updates: [report_updates!]!
  ): [report_mutation_response]

  """
  update data of the table: "reserve"
  """
  update_reserve(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: reserve_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: reserve_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: reserve_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: reserve_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: reserve_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: reserve_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: reserve_set_input

    """filter the rows which have to be updated"""
    where: reserve_bool_exp!
  ): reserve_mutation_response

  """
  update single row of the table: "reserve"
  """
  update_reserve_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: reserve_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: reserve_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: reserve_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: reserve_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: reserve_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: reserve_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: reserve_set_input
    pk_columns: reserve_pk_columns_input!
  ): reserve

  """
  update multiples rows of table: "reserve"
  """
  update_reserve_many(
    """updates to execute, in order"""
    updates: [reserve_updates!]!
  ): [reserve_mutation_response]

  """
  update data of the table: "split"
  """
  update_split(
    """increments the numeric columns with given value of the filtered values"""
    _inc: split_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: split_set_input

    """filter the rows which have to be updated"""
    where: split_bool_exp!
  ): split_mutation_response

  """
  update single row of the table: "split"
  """
  update_split_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: split_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: split_set_input
    pk_columns: split_pk_columns_input!
  ): split

  """
  update multiples rows of table: "split"
  """
  update_split_many(
    """updates to execute, in order"""
    updates: [split_updates!]!
  ): [split_mutation_response]

  """
  update data of the table: "transaction"
  """
  update_transaction(
    """increments the numeric columns with given value of the filtered values"""
    _inc: transaction_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: transaction_set_input

    """filter the rows which have to be updated"""
    where: transaction_bool_exp!
  ): transaction_mutation_response

  """
  update single row of the table: "transaction"
  """
  update_transaction_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: transaction_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: transaction_set_input
    pk_columns: transaction_pk_columns_input!
  ): transaction

  """
  update multiples rows of table: "transaction"
  """
  update_transaction_many(
    """updates to execute, in order"""
    updates: [transaction_updates!]!
  ): [transaction_mutation_response]

  """
  update data of the table: "user"
  """
  update_user(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: user_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: user_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: user_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: user_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: user_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_set_input

    """filter the rows which have to be updated"""
    where: user_bool_exp!
  ): user_mutation_response

  """
  update single row of the table: "user"
  """
  update_user_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: user_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: user_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: user_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: user_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: user_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_set_input
    pk_columns: user_pk_columns_input!
  ): user

  """
  update multiples rows of table: "user"
  """
  update_user_many(
    """updates to execute, in order"""
    updates: [user_updates!]!
  ): [user_mutation_response]

  """
  update data of the table: "user_stats"
  """
  update_user_stats(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_stats_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_stats_set_input

    """filter the rows which have to be updated"""
    where: user_stats_bool_exp!
  ): user_stats_mutation_response

  """
  update single row of the table: "user_stats"
  """
  update_user_stats_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: user_stats_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: user_stats_set_input
    pk_columns: user_stats_pk_columns_input!
  ): user_stats

  """
  update multiples rows of table: "user_stats"
  """
  update_user_stats_many(
    """updates to execute, in order"""
    updates: [user_stats_updates!]!
  ): [user_stats_mutation_response]
}

scalar numeric

"""
Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
  _eq: numeric
  _gt: numeric
  _gte: numeric
  _in: [numeric!]
  _is_null: Boolean
  _lt: numeric
  _lte: numeric
  _neq: numeric
  _nin: [numeric!]
}

"""
columns and relationships of "objkt"
"""
type objkt {
  """An array relationship"""
  actions(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """An aggregate relationship"""
  actions_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!
  assigned: Boolean
  assignedAt: timestamptz

  """An array relationship"""
  auctions(
    """distinct select on columns"""
    distinct_on: [auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_order_by!]

    """filter the rows returned"""
    where: auction_bool_exp
  ): [auction!]!

  """An aggregate relationship"""
  auctions_aggregate(
    """distinct select on columns"""
    distinct_on: [auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_order_by!]

    """filter the rows returned"""
    where: auction_bool_exp
  ): auction_aggregate!
  captureMediaId: bpchar
  createdAt: timestamptz!
  displayUri: bpchar
  duplicate: Boolean
  features(
    """JSON select path"""
    path: String
  ): json
  generationHash: String

  """An object relationship"""
  generative_token: generative_token!

  """An object relationship"""
  gentk_assign: gentk_assign
  id: String!
  inputBytes: String
  issuerId: String!
  issuerVersion: generative_token_version!
  iteration: numeric

  """An array relationship"""
  listings(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): [listing!]!

  """An aggregate relationship"""
  listings_aggregate(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): listing_aggregate!

  """An object relationship"""
  media_image: media_image
  metadata(
    """JSON select path"""
    path: String
  ): json
  metadataUri: String
  minterId: String
  name: String

  """An array relationship"""
  offers(
    """distinct select on columns"""
    distinct_on: [offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [offer_order_by!]

    """filter the rows returned"""
    where: offer_bool_exp
  ): [offer!]!

  """An aggregate relationship"""
  offers_aggregate(
    """distinct select on columns"""
    distinct_on: [offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [offer_order_by!]

    """filter the rows returned"""
    where: offer_bool_exp
  ): offer_aggregate!
  ownerId: String
  rarity: float8

  """An array relationship"""
  redemptions(
    """distinct select on columns"""
    distinct_on: [redemption_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redemption_order_by!]

    """filter the rows returned"""
    where: redemption_bool_exp
  ): [redemption!]!

  """An aggregate relationship"""
  redemptions_aggregate(
    """distinct select on columns"""
    distinct_on: [redemption_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redemption_order_by!]

    """filter the rows returned"""
    where: redemption_bool_exp
  ): redemption_aggregate!
  royalties: Int!
  slug: String

  """An array relationship"""
  splits(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!

  """An aggregate relationship"""
  splits_aggregate(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): split_aggregate!
  tags: _text
  thumbnailUri: bpchar

  """An array relationship"""
  transactions(
    """distinct select on columns"""
    distinct_on: [transaction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [transaction_order_by!]

    """filter the rows returned"""
    where: transaction_bool_exp
  ): [transaction!]!

  """An aggregate relationship"""
  transactions_aggregate(
    """distinct select on columns"""
    distinct_on: [transaction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [transaction_order_by!]

    """filter the rows returned"""
    where: transaction_bool_exp
  ): transaction_aggregate!
  updatedAt: timestamptz

  """An object relationship"""
  user: user

  """An object relationship"""
  userByOwnerid: user
  version: Int!
}

"""
aggregated selection of "objkt"
"""
type objkt_aggregate {
  aggregate: objkt_aggregate_fields
  nodes: [objkt!]!
}

input objkt_aggregate_bool_exp {
  avg: objkt_aggregate_bool_exp_avg
  bool_and: objkt_aggregate_bool_exp_bool_and
  bool_or: objkt_aggregate_bool_exp_bool_or
  corr: objkt_aggregate_bool_exp_corr
  count: objkt_aggregate_bool_exp_count
  covar_samp: objkt_aggregate_bool_exp_covar_samp
  max: objkt_aggregate_bool_exp_max
  min: objkt_aggregate_bool_exp_min
  stddev_samp: objkt_aggregate_bool_exp_stddev_samp
  sum: objkt_aggregate_bool_exp_sum
  var_samp: objkt_aggregate_bool_exp_var_samp
}

input objkt_aggregate_bool_exp_avg {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_avg_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

input objkt_aggregate_bool_exp_bool_and {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: Boolean_comparison_exp!
}

input objkt_aggregate_bool_exp_bool_or {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: Boolean_comparison_exp!
}

input objkt_aggregate_bool_exp_corr {
  arguments: objkt_aggregate_bool_exp_corr_arguments!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

input objkt_aggregate_bool_exp_corr_arguments {
  X: objkt_select_column_objkt_aggregate_bool_exp_corr_arguments_columns!
  Y: objkt_select_column_objkt_aggregate_bool_exp_corr_arguments_columns!
}

input objkt_aggregate_bool_exp_count {
  arguments: [objkt_select_column!]
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: Int_comparison_exp!
}

input objkt_aggregate_bool_exp_covar_samp {
  arguments: objkt_aggregate_bool_exp_covar_samp_arguments!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

input objkt_aggregate_bool_exp_covar_samp_arguments {
  X: objkt_select_column_objkt_aggregate_bool_exp_covar_samp_arguments_columns!
  Y: objkt_select_column_objkt_aggregate_bool_exp_covar_samp_arguments_columns!
}

input objkt_aggregate_bool_exp_max {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_max_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

input objkt_aggregate_bool_exp_min {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_min_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

input objkt_aggregate_bool_exp_stddev_samp {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_stddev_samp_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

input objkt_aggregate_bool_exp_sum {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_sum_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

input objkt_aggregate_bool_exp_var_samp {
  arguments: objkt_select_column_objkt_aggregate_bool_exp_var_samp_arguments_columns!
  distinct: Boolean
  filter: objkt_bool_exp
  predicate: float8_comparison_exp!
}

"""
aggregate fields of "objkt"
"""
type objkt_aggregate_fields {
  avg: objkt_avg_fields
  count(columns: [objkt_select_column!], distinct: Boolean): Int!
  max: objkt_max_fields
  min: objkt_min_fields
  stddev: objkt_stddev_fields
  stddev_pop: objkt_stddev_pop_fields
  stddev_samp: objkt_stddev_samp_fields
  sum: objkt_sum_fields
  var_pop: objkt_var_pop_fields
  var_samp: objkt_var_samp_fields
  variance: objkt_variance_fields
}

"""
order by aggregate values of table "objkt"
"""
input objkt_aggregate_order_by {
  avg: objkt_avg_order_by
  count: order_by
  max: objkt_max_order_by
  min: objkt_min_order_by
  stddev: objkt_stddev_order_by
  stddev_pop: objkt_stddev_pop_order_by
  stddev_samp: objkt_stddev_samp_order_by
  sum: objkt_sum_order_by
  var_pop: objkt_var_pop_order_by
  var_samp: objkt_var_samp_order_by
  variance: objkt_variance_order_by
}

"""
input type for inserting array relation for remote table "objkt"
"""
input objkt_arr_rel_insert_input {
  data: [objkt_insert_input!]!

  """upsert condition"""
  on_conflict: objkt_on_conflict
}

"""aggregate avg on columns"""
type objkt_avg_fields {
  iteration: Float
  rarity: Float
  royalties: Float
  version: Float
}

"""
order by avg() on columns of table "objkt"
"""
input objkt_avg_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

"""
Boolean expression to filter rows from the table "objkt". All fields are combined with a logical 'AND'.
"""
input objkt_bool_exp {
  _and: [objkt_bool_exp!]
  _not: objkt_bool_exp
  _or: [objkt_bool_exp!]
  actions: action_bool_exp
  actions_aggregate: action_aggregate_bool_exp
  assigned: Boolean_comparison_exp
  assignedAt: timestamptz_comparison_exp
  auctions: auction_bool_exp
  auctions_aggregate: auction_aggregate_bool_exp
  captureMediaId: bpchar_comparison_exp
  createdAt: timestamptz_comparison_exp
  displayUri: bpchar_comparison_exp
  duplicate: Boolean_comparison_exp
  features: json_comparison_exp
  generationHash: String_comparison_exp
  generative_token: generative_token_bool_exp
  gentk_assign: gentk_assign_bool_exp
  id: String_comparison_exp
  inputBytes: String_comparison_exp
  issuerId: String_comparison_exp
  issuerVersion: generative_token_version_comparison_exp
  iteration: numeric_comparison_exp
  listings: listing_bool_exp
  listings_aggregate: listing_aggregate_bool_exp
  media_image: media_image_bool_exp
  metadata: json_comparison_exp
  metadataUri: String_comparison_exp
  minterId: String_comparison_exp
  name: String_comparison_exp
  offers: offer_bool_exp
  offers_aggregate: offer_aggregate_bool_exp
  ownerId: String_comparison_exp
  rarity: float8_comparison_exp
  redemptions: redemption_bool_exp
  redemptions_aggregate: redemption_aggregate_bool_exp
  royalties: Int_comparison_exp
  slug: String_comparison_exp
  splits: split_bool_exp
  splits_aggregate: split_aggregate_bool_exp
  tags: _text_comparison_exp
  thumbnailUri: bpchar_comparison_exp
  transactions: transaction_bool_exp
  transactions_aggregate: transaction_aggregate_bool_exp
  updatedAt: timestamptz_comparison_exp
  user: user_bool_exp
  userByOwnerid: user_bool_exp
  version: Int_comparison_exp
}

"""
unique or primary key constraints on table "objkt"
"""
enum objkt_constraint {
  """
  unique or primary key constraint on columns "slug"
  """
  IDX_75a2e34e67529e5d0c2758d4d2

  """
  unique or primary key constraint on columns "id", "issuerVersion"
  """
  PK_db1e755f6280f2ac57fd7e983d8
}

"""
input type for incrementing numeric columns in table "objkt"
"""
input objkt_inc_input {
  iteration: numeric
  rarity: float8
  royalties: Int
  version: Int
}

"""
input type for inserting data into table "objkt"
"""
input objkt_insert_input {
  actions: action_arr_rel_insert_input
  assigned: Boolean
  assignedAt: timestamptz
  auctions: auction_arr_rel_insert_input
  captureMediaId: bpchar
  createdAt: timestamptz
  displayUri: bpchar
  duplicate: Boolean
  features: json
  generationHash: String
  generative_token: generative_token_obj_rel_insert_input
  gentk_assign: gentk_assign_obj_rel_insert_input
  id: String
  inputBytes: String
  issuerId: String
  issuerVersion: generative_token_version
  iteration: numeric
  listings: listing_arr_rel_insert_input
  media_image: media_image_obj_rel_insert_input
  metadata: json
  metadataUri: String
  minterId: String
  name: String
  offers: offer_arr_rel_insert_input
  ownerId: String
  rarity: float8
  redemptions: redemption_arr_rel_insert_input
  royalties: Int
  slug: String
  splits: split_arr_rel_insert_input
  tags: _text
  thumbnailUri: bpchar
  transactions: transaction_arr_rel_insert_input
  updatedAt: timestamptz
  user: user_obj_rel_insert_input
  userByOwnerid: user_obj_rel_insert_input
  version: Int
}

"""aggregate max on columns"""
type objkt_max_fields {
  assignedAt: timestamptz
  captureMediaId: bpchar
  createdAt: timestamptz
  displayUri: bpchar
  generationHash: String
  id: String
  inputBytes: String
  issuerId: String
  issuerVersion: generative_token_version
  iteration: numeric
  metadataUri: String
  minterId: String
  name: String
  ownerId: String
  rarity: float8
  royalties: Int
  slug: String
  thumbnailUri: bpchar
  updatedAt: timestamptz
  version: Int
}

"""
order by max() on columns of table "objkt"
"""
input objkt_max_order_by {
  assignedAt: order_by
  captureMediaId: order_by
  createdAt: order_by
  displayUri: order_by
  generationHash: order_by
  id: order_by
  inputBytes: order_by
  issuerId: order_by
  issuerVersion: order_by
  iteration: order_by
  metadataUri: order_by
  minterId: order_by
  name: order_by
  ownerId: order_by
  rarity: order_by
  royalties: order_by
  slug: order_by
  thumbnailUri: order_by
  updatedAt: order_by
  version: order_by
}

"""aggregate min on columns"""
type objkt_min_fields {
  assignedAt: timestamptz
  captureMediaId: bpchar
  createdAt: timestamptz
  displayUri: bpchar
  generationHash: String
  id: String
  inputBytes: String
  issuerId: String
  issuerVersion: generative_token_version
  iteration: numeric
  metadataUri: String
  minterId: String
  name: String
  ownerId: String
  rarity: float8
  royalties: Int
  slug: String
  thumbnailUri: bpchar
  updatedAt: timestamptz
  version: Int
}

"""
order by min() on columns of table "objkt"
"""
input objkt_min_order_by {
  assignedAt: order_by
  captureMediaId: order_by
  createdAt: order_by
  displayUri: order_by
  generationHash: order_by
  id: order_by
  inputBytes: order_by
  issuerId: order_by
  issuerVersion: order_by
  iteration: order_by
  metadataUri: order_by
  minterId: order_by
  name: order_by
  ownerId: order_by
  rarity: order_by
  royalties: order_by
  slug: order_by
  thumbnailUri: order_by
  updatedAt: order_by
  version: order_by
}

"""
response of any mutation on the table "objkt"
"""
type objkt_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [objkt!]!
}

"""
input type for inserting object relation for remote table "objkt"
"""
input objkt_obj_rel_insert_input {
  data: objkt_insert_input!

  """upsert condition"""
  on_conflict: objkt_on_conflict
}

"""
on_conflict condition type for table "objkt"
"""
input objkt_on_conflict {
  constraint: objkt_constraint!
  update_columns: [objkt_update_column!]! = []
  where: objkt_bool_exp
}

"""Ordering options when selecting data from "objkt"."""
input objkt_order_by {
  actions_aggregate: action_aggregate_order_by
  assigned: order_by
  assignedAt: order_by
  auctions_aggregate: auction_aggregate_order_by
  captureMediaId: order_by
  createdAt: order_by
  displayUri: order_by
  duplicate: order_by
  features: order_by
  generationHash: order_by
  generative_token: generative_token_order_by
  gentk_assign: gentk_assign_order_by
  id: order_by
  inputBytes: order_by
  issuerId: order_by
  issuerVersion: order_by
  iteration: order_by
  listings_aggregate: listing_aggregate_order_by
  media_image: media_image_order_by
  metadata: order_by
  metadataUri: order_by
  minterId: order_by
  name: order_by
  offers_aggregate: offer_aggregate_order_by
  ownerId: order_by
  rarity: order_by
  redemptions_aggregate: redemption_aggregate_order_by
  royalties: order_by
  slug: order_by
  splits_aggregate: split_aggregate_order_by
  tags: order_by
  thumbnailUri: order_by
  transactions_aggregate: transaction_aggregate_order_by
  updatedAt: order_by
  user: user_order_by
  userByOwnerid: user_order_by
  version: order_by
}

"""primary key columns input for table: objkt"""
input objkt_pk_columns_input {
  id: String!
  issuerVersion: generative_token_version!
}

"""
select columns of table "objkt"
"""
enum objkt_select_column {
  """column name"""
  assigned

  """column name"""
  assignedAt

  """column name"""
  captureMediaId

  """column name"""
  createdAt

  """column name"""
  displayUri

  """column name"""
  duplicate

  """column name"""
  features

  """column name"""
  generationHash

  """column name"""
  id

  """column name"""
  inputBytes

  """column name"""
  issuerId

  """column name"""
  issuerVersion

  """column name"""
  iteration

  """column name"""
  metadata

  """column name"""
  metadataUri

  """column name"""
  minterId

  """column name"""
  name

  """column name"""
  ownerId

  """column name"""
  rarity

  """column name"""
  royalties

  """column name"""
  slug

  """column name"""
  tags

  """column name"""
  thumbnailUri

  """column name"""
  updatedAt

  """column name"""
  version
}

"""
select "objkt_aggregate_bool_exp_avg_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_avg_arguments_columns {
  """column name"""
  rarity
}

"""
select "objkt_aggregate_bool_exp_bool_and_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  assigned

  """column name"""
  duplicate
}

"""
select "objkt_aggregate_bool_exp_bool_or_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  assigned

  """column name"""
  duplicate
}

"""
select "objkt_aggregate_bool_exp_corr_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_corr_arguments_columns {
  """column name"""
  rarity
}

"""
select "objkt_aggregate_bool_exp_covar_samp_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_covar_samp_arguments_columns {
  """column name"""
  rarity
}

"""
select "objkt_aggregate_bool_exp_max_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_max_arguments_columns {
  """column name"""
  rarity
}

"""
select "objkt_aggregate_bool_exp_min_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_min_arguments_columns {
  """column name"""
  rarity
}

"""
select "objkt_aggregate_bool_exp_stddev_samp_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_stddev_samp_arguments_columns {
  """column name"""
  rarity
}

"""
select "objkt_aggregate_bool_exp_sum_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_sum_arguments_columns {
  """column name"""
  rarity
}

"""
select "objkt_aggregate_bool_exp_var_samp_arguments_columns" columns of table "objkt"
"""
enum objkt_select_column_objkt_aggregate_bool_exp_var_samp_arguments_columns {
  """column name"""
  rarity
}

"""
input type for updating data in table "objkt"
"""
input objkt_set_input {
  assigned: Boolean
  assignedAt: timestamptz
  captureMediaId: bpchar
  createdAt: timestamptz
  displayUri: bpchar
  duplicate: Boolean
  features: json
  generationHash: String
  id: String
  inputBytes: String
  issuerId: String
  issuerVersion: generative_token_version
  iteration: numeric
  metadata: json
  metadataUri: String
  minterId: String
  name: String
  ownerId: String
  rarity: float8
  royalties: Int
  slug: String
  tags: _text
  thumbnailUri: bpchar
  updatedAt: timestamptz
  version: Int
}

"""aggregate stddev on columns"""
type objkt_stddev_fields {
  iteration: Float
  rarity: Float
  royalties: Float
  version: Float
}

"""
order by stddev() on columns of table "objkt"
"""
input objkt_stddev_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

"""aggregate stddev_pop on columns"""
type objkt_stddev_pop_fields {
  iteration: Float
  rarity: Float
  royalties: Float
  version: Float
}

"""
order by stddev_pop() on columns of table "objkt"
"""
input objkt_stddev_pop_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

"""aggregate stddev_samp on columns"""
type objkt_stddev_samp_fields {
  iteration: Float
  rarity: Float
  royalties: Float
  version: Float
}

"""
order by stddev_samp() on columns of table "objkt"
"""
input objkt_stddev_samp_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

"""
Streaming cursor of the table "objkt"
"""
input objkt_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: objkt_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input objkt_stream_cursor_value_input {
  assigned: Boolean
  assignedAt: timestamptz
  captureMediaId: bpchar
  createdAt: timestamptz
  displayUri: bpchar
  duplicate: Boolean
  features: json
  generationHash: String
  id: String
  inputBytes: String
  issuerId: String
  issuerVersion: generative_token_version
  iteration: numeric
  metadata: json
  metadataUri: String
  minterId: String
  name: String
  ownerId: String
  rarity: float8
  royalties: Int
  slug: String
  tags: _text
  thumbnailUri: bpchar
  updatedAt: timestamptz
  version: Int
}

"""aggregate sum on columns"""
type objkt_sum_fields {
  iteration: numeric
  rarity: float8
  royalties: Int
  version: Int
}

"""
order by sum() on columns of table "objkt"
"""
input objkt_sum_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

"""
update columns of table "objkt"
"""
enum objkt_update_column {
  """column name"""
  assigned

  """column name"""
  assignedAt

  """column name"""
  captureMediaId

  """column name"""
  createdAt

  """column name"""
  displayUri

  """column name"""
  duplicate

  """column name"""
  features

  """column name"""
  generationHash

  """column name"""
  id

  """column name"""
  inputBytes

  """column name"""
  issuerId

  """column name"""
  issuerVersion

  """column name"""
  iteration

  """column name"""
  metadata

  """column name"""
  metadataUri

  """column name"""
  minterId

  """column name"""
  name

  """column name"""
  ownerId

  """column name"""
  rarity

  """column name"""
  royalties

  """column name"""
  slug

  """column name"""
  tags

  """column name"""
  thumbnailUri

  """column name"""
  updatedAt

  """column name"""
  version
}

input objkt_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: objkt_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: objkt_set_input

  """filter the rows which have to be updated"""
  where: objkt_bool_exp!
}

"""aggregate var_pop on columns"""
type objkt_var_pop_fields {
  iteration: Float
  rarity: Float
  royalties: Float
  version: Float
}

"""
order by var_pop() on columns of table "objkt"
"""
input objkt_var_pop_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

"""aggregate var_samp on columns"""
type objkt_var_samp_fields {
  iteration: Float
  rarity: Float
  royalties: Float
  version: Float
}

"""
order by var_samp() on columns of table "objkt"
"""
input objkt_var_samp_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

"""aggregate variance on columns"""
type objkt_variance_fields {
  iteration: Float
  rarity: Float
  royalties: Float
  version: Float
}

"""
order by variance() on columns of table "objkt"
"""
input objkt_variance_order_by {
  iteration: order_by
  rarity: order_by
  royalties: order_by
  version: order_by
}

"""
columns and relationships of "offer"
"""
type offer {
  acceptedAt: timestamptz
  buyerId: String
  cancelledAt: timestamptz
  createdAt: timestamptz!
  id: String!

  """An object relationship"""
  objkt: objkt
  objktId: String
  objktIssuerVersion: generative_token_version
  price: numeric!

  """An object relationship"""
  user: user
  version: Int!
}

"""
aggregated selection of "offer"
"""
type offer_aggregate {
  aggregate: offer_aggregate_fields
  nodes: [offer!]!
}

input offer_aggregate_bool_exp {
  count: offer_aggregate_bool_exp_count
}

input offer_aggregate_bool_exp_count {
  arguments: [offer_select_column!]
  distinct: Boolean
  filter: offer_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "offer"
"""
type offer_aggregate_fields {
  avg: offer_avg_fields
  count(columns: [offer_select_column!], distinct: Boolean): Int!
  max: offer_max_fields
  min: offer_min_fields
  stddev: offer_stddev_fields
  stddev_pop: offer_stddev_pop_fields
  stddev_samp: offer_stddev_samp_fields
  sum: offer_sum_fields
  var_pop: offer_var_pop_fields
  var_samp: offer_var_samp_fields
  variance: offer_variance_fields
}

"""
order by aggregate values of table "offer"
"""
input offer_aggregate_order_by {
  avg: offer_avg_order_by
  count: order_by
  max: offer_max_order_by
  min: offer_min_order_by
  stddev: offer_stddev_order_by
  stddev_pop: offer_stddev_pop_order_by
  stddev_samp: offer_stddev_samp_order_by
  sum: offer_sum_order_by
  var_pop: offer_var_pop_order_by
  var_samp: offer_var_samp_order_by
  variance: offer_variance_order_by
}

"""
input type for inserting array relation for remote table "offer"
"""
input offer_arr_rel_insert_input {
  data: [offer_insert_input!]!

  """upsert condition"""
  on_conflict: offer_on_conflict
}

"""aggregate avg on columns"""
type offer_avg_fields {
  price: Float
  version: Float
}

"""
order by avg() on columns of table "offer"
"""
input offer_avg_order_by {
  price: order_by
  version: order_by
}

"""
Boolean expression to filter rows from the table "offer". All fields are combined with a logical 'AND'.
"""
input offer_bool_exp {
  _and: [offer_bool_exp!]
  _not: offer_bool_exp
  _or: [offer_bool_exp!]
  acceptedAt: timestamptz_comparison_exp
  buyerId: String_comparison_exp
  cancelledAt: timestamptz_comparison_exp
  createdAt: timestamptz_comparison_exp
  id: String_comparison_exp
  objkt: objkt_bool_exp
  objktId: String_comparison_exp
  objktIssuerVersion: generative_token_version_comparison_exp
  price: numeric_comparison_exp
  user: user_bool_exp
  version: Int_comparison_exp
}

"""
unique or primary key constraints on table "offer"
"""
enum offer_constraint {
  """
  unique or primary key constraint on columns "id", "version"
  """
  PK_128207054b197333b6f58dd3581
}

"""
input type for incrementing numeric columns in table "offer"
"""
input offer_inc_input {
  price: numeric
  version: Int
}

"""
input type for inserting data into table "offer"
"""
input offer_insert_input {
  acceptedAt: timestamptz
  buyerId: String
  cancelledAt: timestamptz
  createdAt: timestamptz
  id: String
  objkt: objkt_obj_rel_insert_input
  objktId: String
  objktIssuerVersion: generative_token_version
  price: numeric
  user: user_obj_rel_insert_input
  version: Int
}

"""aggregate max on columns"""
type offer_max_fields {
  acceptedAt: timestamptz
  buyerId: String
  cancelledAt: timestamptz
  createdAt: timestamptz
  id: String
  objktId: String
  objktIssuerVersion: generative_token_version
  price: numeric
  version: Int
}

"""
order by max() on columns of table "offer"
"""
input offer_max_order_by {
  acceptedAt: order_by
  buyerId: order_by
  cancelledAt: order_by
  createdAt: order_by
  id: order_by
  objktId: order_by
  objktIssuerVersion: order_by
  price: order_by
  version: order_by
}

"""aggregate min on columns"""
type offer_min_fields {
  acceptedAt: timestamptz
  buyerId: String
  cancelledAt: timestamptz
  createdAt: timestamptz
  id: String
  objktId: String
  objktIssuerVersion: generative_token_version
  price: numeric
  version: Int
}

"""
order by min() on columns of table "offer"
"""
input offer_min_order_by {
  acceptedAt: order_by
  buyerId: order_by
  cancelledAt: order_by
  createdAt: order_by
  id: order_by
  objktId: order_by
  objktIssuerVersion: order_by
  price: order_by
  version: order_by
}

"""
response of any mutation on the table "offer"
"""
type offer_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [offer!]!
}

"""
on_conflict condition type for table "offer"
"""
input offer_on_conflict {
  constraint: offer_constraint!
  update_columns: [offer_update_column!]! = []
  where: offer_bool_exp
}

"""Ordering options when selecting data from "offer"."""
input offer_order_by {
  acceptedAt: order_by
  buyerId: order_by
  cancelledAt: order_by
  createdAt: order_by
  id: order_by
  objkt: objkt_order_by
  objktId: order_by
  objktIssuerVersion: order_by
  price: order_by
  user: user_order_by
  version: order_by
}

"""primary key columns input for table: offer"""
input offer_pk_columns_input {
  id: String!
  version: Int!
}

"""
select columns of table "offer"
"""
enum offer_select_column {
  """column name"""
  acceptedAt

  """column name"""
  buyerId

  """column name"""
  cancelledAt

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  objktId

  """column name"""
  objktIssuerVersion

  """column name"""
  price

  """column name"""
  version
}

"""
input type for updating data in table "offer"
"""
input offer_set_input {
  acceptedAt: timestamptz
  buyerId: String
  cancelledAt: timestamptz
  createdAt: timestamptz
  id: String
  objktId: String
  objktIssuerVersion: generative_token_version
  price: numeric
  version: Int
}

"""aggregate stddev on columns"""
type offer_stddev_fields {
  price: Float
  version: Float
}

"""
order by stddev() on columns of table "offer"
"""
input offer_stddev_order_by {
  price: order_by
  version: order_by
}

"""aggregate stddev_pop on columns"""
type offer_stddev_pop_fields {
  price: Float
  version: Float
}

"""
order by stddev_pop() on columns of table "offer"
"""
input offer_stddev_pop_order_by {
  price: order_by
  version: order_by
}

"""aggregate stddev_samp on columns"""
type offer_stddev_samp_fields {
  price: Float
  version: Float
}

"""
order by stddev_samp() on columns of table "offer"
"""
input offer_stddev_samp_order_by {
  price: order_by
  version: order_by
}

"""
Streaming cursor of the table "offer"
"""
input offer_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: offer_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input offer_stream_cursor_value_input {
  acceptedAt: timestamptz
  buyerId: String
  cancelledAt: timestamptz
  createdAt: timestamptz
  id: String
  objktId: String
  objktIssuerVersion: generative_token_version
  price: numeric
  version: Int
}

"""aggregate sum on columns"""
type offer_sum_fields {
  price: numeric
  version: Int
}

"""
order by sum() on columns of table "offer"
"""
input offer_sum_order_by {
  price: order_by
  version: order_by
}

"""
update columns of table "offer"
"""
enum offer_update_column {
  """column name"""
  acceptedAt

  """column name"""
  buyerId

  """column name"""
  cancelledAt

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  objktId

  """column name"""
  objktIssuerVersion

  """column name"""
  price

  """column name"""
  version
}

input offer_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: offer_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: offer_set_input

  """filter the rows which have to be updated"""
  where: offer_bool_exp!
}

"""aggregate var_pop on columns"""
type offer_var_pop_fields {
  price: Float
  version: Float
}

"""
order by var_pop() on columns of table "offer"
"""
input offer_var_pop_order_by {
  price: order_by
  version: order_by
}

"""aggregate var_samp on columns"""
type offer_var_samp_fields {
  price: Float
  version: Float
}

"""
order by var_samp() on columns of table "offer"
"""
input offer_var_samp_order_by {
  price: order_by
  version: order_by
}

"""aggregate variance on columns"""
type offer_variance_fields {
  price: Float
  version: Float
}

"""
order by variance() on columns of table "offer"
"""
input offer_variance_order_by {
  price: order_by
  version: order_by
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

"""
columns and relationships of "pricing_dutch_auction"
"""
type pricing_dutch_auction {
  decrementDuration: bigint!
  finalPrice: bigint

  """An object relationship"""
  generative_token: generative_token
  id: String!
  levels: _int8!
  opensAt: timestamptz
  restingPrice: String!
  tokenId: String
}

"""
aggregated selection of "pricing_dutch_auction"
"""
type pricing_dutch_auction_aggregate {
  aggregate: pricing_dutch_auction_aggregate_fields
  nodes: [pricing_dutch_auction!]!
}

"""
aggregate fields of "pricing_dutch_auction"
"""
type pricing_dutch_auction_aggregate_fields {
  avg: pricing_dutch_auction_avg_fields
  count(columns: [pricing_dutch_auction_select_column!], distinct: Boolean): Int!
  max: pricing_dutch_auction_max_fields
  min: pricing_dutch_auction_min_fields
  stddev: pricing_dutch_auction_stddev_fields
  stddev_pop: pricing_dutch_auction_stddev_pop_fields
  stddev_samp: pricing_dutch_auction_stddev_samp_fields
  sum: pricing_dutch_auction_sum_fields
  var_pop: pricing_dutch_auction_var_pop_fields
  var_samp: pricing_dutch_auction_var_samp_fields
  variance: pricing_dutch_auction_variance_fields
}

"""aggregate avg on columns"""
type pricing_dutch_auction_avg_fields {
  decrementDuration: Float
  finalPrice: Float
}

"""
Boolean expression to filter rows from the table "pricing_dutch_auction". All fields are combined with a logical 'AND'.
"""
input pricing_dutch_auction_bool_exp {
  _and: [pricing_dutch_auction_bool_exp!]
  _not: pricing_dutch_auction_bool_exp
  _or: [pricing_dutch_auction_bool_exp!]
  decrementDuration: bigint_comparison_exp
  finalPrice: bigint_comparison_exp
  generative_token: generative_token_bool_exp
  id: String_comparison_exp
  levels: _int8_comparison_exp
  opensAt: timestamptz_comparison_exp
  restingPrice: String_comparison_exp
  tokenId: String_comparison_exp
}

"""
unique or primary key constraints on table "pricing_dutch_auction"
"""
enum pricing_dutch_auction_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_6c70e76261e8fb00a02d0628d12
}

"""
input type for incrementing numeric columns in table "pricing_dutch_auction"
"""
input pricing_dutch_auction_inc_input {
  decrementDuration: bigint
  finalPrice: bigint
}

"""
input type for inserting data into table "pricing_dutch_auction"
"""
input pricing_dutch_auction_insert_input {
  decrementDuration: bigint
  finalPrice: bigint
  generative_token: generative_token_obj_rel_insert_input
  id: String
  levels: _int8
  opensAt: timestamptz
  restingPrice: String
  tokenId: String
}

"""aggregate max on columns"""
type pricing_dutch_auction_max_fields {
  decrementDuration: bigint
  finalPrice: bigint
  id: String
  opensAt: timestamptz
  restingPrice: String
  tokenId: String
}

"""aggregate min on columns"""
type pricing_dutch_auction_min_fields {
  decrementDuration: bigint
  finalPrice: bigint
  id: String
  opensAt: timestamptz
  restingPrice: String
  tokenId: String
}

"""
response of any mutation on the table "pricing_dutch_auction"
"""
type pricing_dutch_auction_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [pricing_dutch_auction!]!
}

"""
input type for inserting object relation for remote table "pricing_dutch_auction"
"""
input pricing_dutch_auction_obj_rel_insert_input {
  data: pricing_dutch_auction_insert_input!

  """upsert condition"""
  on_conflict: pricing_dutch_auction_on_conflict
}

"""
on_conflict condition type for table "pricing_dutch_auction"
"""
input pricing_dutch_auction_on_conflict {
  constraint: pricing_dutch_auction_constraint!
  update_columns: [pricing_dutch_auction_update_column!]! = []
  where: pricing_dutch_auction_bool_exp
}

"""Ordering options when selecting data from "pricing_dutch_auction"."""
input pricing_dutch_auction_order_by {
  decrementDuration: order_by
  finalPrice: order_by
  generative_token: generative_token_order_by
  id: order_by
  levels: order_by
  opensAt: order_by
  restingPrice: order_by
  tokenId: order_by
}

"""primary key columns input for table: pricing_dutch_auction"""
input pricing_dutch_auction_pk_columns_input {
  id: String!
}

"""
select columns of table "pricing_dutch_auction"
"""
enum pricing_dutch_auction_select_column {
  """column name"""
  decrementDuration

  """column name"""
  finalPrice

  """column name"""
  id

  """column name"""
  levels

  """column name"""
  opensAt

  """column name"""
  restingPrice

  """column name"""
  tokenId
}

"""
input type for updating data in table "pricing_dutch_auction"
"""
input pricing_dutch_auction_set_input {
  decrementDuration: bigint
  finalPrice: bigint
  id: String
  levels: _int8
  opensAt: timestamptz
  restingPrice: String
  tokenId: String
}

"""aggregate stddev on columns"""
type pricing_dutch_auction_stddev_fields {
  decrementDuration: Float
  finalPrice: Float
}

"""aggregate stddev_pop on columns"""
type pricing_dutch_auction_stddev_pop_fields {
  decrementDuration: Float
  finalPrice: Float
}

"""aggregate stddev_samp on columns"""
type pricing_dutch_auction_stddev_samp_fields {
  decrementDuration: Float
  finalPrice: Float
}

"""
Streaming cursor of the table "pricing_dutch_auction"
"""
input pricing_dutch_auction_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: pricing_dutch_auction_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input pricing_dutch_auction_stream_cursor_value_input {
  decrementDuration: bigint
  finalPrice: bigint
  id: String
  levels: _int8
  opensAt: timestamptz
  restingPrice: String
  tokenId: String
}

"""aggregate sum on columns"""
type pricing_dutch_auction_sum_fields {
  decrementDuration: bigint
  finalPrice: bigint
}

"""
update columns of table "pricing_dutch_auction"
"""
enum pricing_dutch_auction_update_column {
  """column name"""
  decrementDuration

  """column name"""
  finalPrice

  """column name"""
  id

  """column name"""
  levels

  """column name"""
  opensAt

  """column name"""
  restingPrice

  """column name"""
  tokenId
}

input pricing_dutch_auction_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: pricing_dutch_auction_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: pricing_dutch_auction_set_input

  """filter the rows which have to be updated"""
  where: pricing_dutch_auction_bool_exp!
}

"""aggregate var_pop on columns"""
type pricing_dutch_auction_var_pop_fields {
  decrementDuration: Float
  finalPrice: Float
}

"""aggregate var_samp on columns"""
type pricing_dutch_auction_var_samp_fields {
  decrementDuration: Float
  finalPrice: Float
}

"""aggregate variance on columns"""
type pricing_dutch_auction_variance_fields {
  decrementDuration: Float
  finalPrice: Float
}

"""
columns and relationships of "pricing_fixed"
"""
type pricing_fixed {
  """An object relationship"""
  generative_token: generative_token
  id: String!
  opensAt: timestamptz
  price: numeric!
  tokenId: String
}

"""
aggregated selection of "pricing_fixed"
"""
type pricing_fixed_aggregate {
  aggregate: pricing_fixed_aggregate_fields
  nodes: [pricing_fixed!]!
}

"""
aggregate fields of "pricing_fixed"
"""
type pricing_fixed_aggregate_fields {
  avg: pricing_fixed_avg_fields
  count(columns: [pricing_fixed_select_column!], distinct: Boolean): Int!
  max: pricing_fixed_max_fields
  min: pricing_fixed_min_fields
  stddev: pricing_fixed_stddev_fields
  stddev_pop: pricing_fixed_stddev_pop_fields
  stddev_samp: pricing_fixed_stddev_samp_fields
  sum: pricing_fixed_sum_fields
  var_pop: pricing_fixed_var_pop_fields
  var_samp: pricing_fixed_var_samp_fields
  variance: pricing_fixed_variance_fields
}

"""aggregate avg on columns"""
type pricing_fixed_avg_fields {
  price: Float
}

"""
Boolean expression to filter rows from the table "pricing_fixed". All fields are combined with a logical 'AND'.
"""
input pricing_fixed_bool_exp {
  _and: [pricing_fixed_bool_exp!]
  _not: pricing_fixed_bool_exp
  _or: [pricing_fixed_bool_exp!]
  generative_token: generative_token_bool_exp
  id: String_comparison_exp
  opensAt: timestamptz_comparison_exp
  price: numeric_comparison_exp
  tokenId: String_comparison_exp
}

"""
unique or primary key constraints on table "pricing_fixed"
"""
enum pricing_fixed_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_ae46385ad088e6c1de1850c3d80
}

"""
input type for incrementing numeric columns in table "pricing_fixed"
"""
input pricing_fixed_inc_input {
  price: numeric
}

"""
input type for inserting data into table "pricing_fixed"
"""
input pricing_fixed_insert_input {
  generative_token: generative_token_obj_rel_insert_input
  id: String
  opensAt: timestamptz
  price: numeric
  tokenId: String
}

"""aggregate max on columns"""
type pricing_fixed_max_fields {
  id: String
  opensAt: timestamptz
  price: numeric
  tokenId: String
}

"""aggregate min on columns"""
type pricing_fixed_min_fields {
  id: String
  opensAt: timestamptz
  price: numeric
  tokenId: String
}

"""
response of any mutation on the table "pricing_fixed"
"""
type pricing_fixed_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [pricing_fixed!]!
}

"""
input type for inserting object relation for remote table "pricing_fixed"
"""
input pricing_fixed_obj_rel_insert_input {
  data: pricing_fixed_insert_input!

  """upsert condition"""
  on_conflict: pricing_fixed_on_conflict
}

"""
on_conflict condition type for table "pricing_fixed"
"""
input pricing_fixed_on_conflict {
  constraint: pricing_fixed_constraint!
  update_columns: [pricing_fixed_update_column!]! = []
  where: pricing_fixed_bool_exp
}

"""Ordering options when selecting data from "pricing_fixed"."""
input pricing_fixed_order_by {
  generative_token: generative_token_order_by
  id: order_by
  opensAt: order_by
  price: order_by
  tokenId: order_by
}

"""primary key columns input for table: pricing_fixed"""
input pricing_fixed_pk_columns_input {
  id: String!
}

"""
select columns of table "pricing_fixed"
"""
enum pricing_fixed_select_column {
  """column name"""
  id

  """column name"""
  opensAt

  """column name"""
  price

  """column name"""
  tokenId
}

"""
input type for updating data in table "pricing_fixed"
"""
input pricing_fixed_set_input {
  id: String
  opensAt: timestamptz
  price: numeric
  tokenId: String
}

"""aggregate stddev on columns"""
type pricing_fixed_stddev_fields {
  price: Float
}

"""aggregate stddev_pop on columns"""
type pricing_fixed_stddev_pop_fields {
  price: Float
}

"""aggregate stddev_samp on columns"""
type pricing_fixed_stddev_samp_fields {
  price: Float
}

"""
Streaming cursor of the table "pricing_fixed"
"""
input pricing_fixed_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: pricing_fixed_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input pricing_fixed_stream_cursor_value_input {
  id: String
  opensAt: timestamptz
  price: numeric
  tokenId: String
}

"""aggregate sum on columns"""
type pricing_fixed_sum_fields {
  price: numeric
}

"""
update columns of table "pricing_fixed"
"""
enum pricing_fixed_update_column {
  """column name"""
  id

  """column name"""
  opensAt

  """column name"""
  price

  """column name"""
  tokenId
}

input pricing_fixed_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: pricing_fixed_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: pricing_fixed_set_input

  """filter the rows which have to be updated"""
  where: pricing_fixed_bool_exp!
}

"""aggregate var_pop on columns"""
type pricing_fixed_var_pop_fields {
  price: Float
}

"""aggregate var_samp on columns"""
type pricing_fixed_var_samp_fields {
  price: Float
}

"""aggregate variance on columns"""
type pricing_fixed_variance_fields {
  price: Float
}

type query_root {
  """
  fetch data from the table: "action"
  """
  action(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """
  fetch aggregated fields from the table: "action"
  """
  action_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!

  """fetch data from the table: "action" using primary key columns"""
  action_by_pk(id: uuid!): action

  """
  fetch data from the table: "article"
  """
  article(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): [article!]!

  """
  fetch aggregated fields from the table: "article"
  """
  article_aggregate(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): article_aggregate!

  """fetch data from the table: "article" using primary key columns"""
  article_by_pk(id: Int!): article

  """
  fetch data from the table: "article_generative_token"
  """
  article_generative_token(
    """distinct select on columns"""
    distinct_on: [article_generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_generative_token_order_by!]

    """filter the rows returned"""
    where: article_generative_token_bool_exp
  ): [article_generative_token!]!

  """
  fetch aggregated fields from the table: "article_generative_token"
  """
  article_generative_token_aggregate(
    """distinct select on columns"""
    distinct_on: [article_generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_generative_token_order_by!]

    """filter the rows returned"""
    where: article_generative_token_bool_exp
  ): article_generative_token_aggregate!

  """
  fetch data from the table: "article_generative_token" using primary key columns
  """
  article_generative_token_by_pk(articleId: Int!, generativeTokenId: String!): article_generative_token

  """
  fetch data from the table: "article_ledger"
  """
  article_ledger(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): [article_ledger!]!

  """
  fetch aggregated fields from the table: "article_ledger"
  """
  article_ledger_aggregate(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): article_ledger_aggregate!

  """fetch data from the table: "article_ledger" using primary key columns"""
  article_ledger_by_pk(articleId: Int!, ownerId: String!): article_ledger

  """
  fetch data from the table: "article_revision"
  """
  article_revision(
    """distinct select on columns"""
    distinct_on: [article_revision_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_revision_order_by!]

    """filter the rows returned"""
    where: article_revision_bool_exp
  ): [article_revision!]!

  """
  fetch aggregated fields from the table: "article_revision"
  """
  article_revision_aggregate(
    """distinct select on columns"""
    distinct_on: [article_revision_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_revision_order_by!]

    """filter the rows returned"""
    where: article_revision_bool_exp
  ): article_revision_aggregate!

  """
  fetch data from the table: "article_revision" using primary key columns
  """
  article_revision_by_pk(articleId: Int!, iteration: smallint!): article_revision

  """
  fetch data from the table: "auction"
  """
  auction(
    """distinct select on columns"""
    distinct_on: [auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_order_by!]

    """filter the rows returned"""
    where: auction_bool_exp
  ): [auction!]!

  """
  fetch aggregated fields from the table: "auction"
  """
  auction_aggregate(
    """distinct select on columns"""
    distinct_on: [auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_order_by!]

    """filter the rows returned"""
    where: auction_bool_exp
  ): auction_aggregate!

  """
  fetch data from the table: "auction_bid"
  """
  auction_bid(
    """distinct select on columns"""
    distinct_on: [auction_bid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_order_by!]

    """filter the rows returned"""
    where: auction_bid_bool_exp
  ): [auction_bid!]!

  """
  fetch aggregated fields from the table: "auction_bid"
  """
  auction_bid_aggregate(
    """distinct select on columns"""
    distinct_on: [auction_bid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_order_by!]

    """filter the rows returned"""
    where: auction_bid_bool_exp
  ): auction_bid_aggregate!

  """fetch data from the table: "auction_bid" using primary key columns"""
  auction_bid_by_pk(id: uuid!): auction_bid

  """
  fetch data from the table: "auction_bid_table"
  """
  auction_bid_table(
    """distinct select on columns"""
    distinct_on: [auction_bid_table_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_table_order_by!]

    """filter the rows returned"""
    where: auction_bid_table_bool_exp
  ): [auction_bid_table!]!

  """
  fetch aggregated fields from the table: "auction_bid_table"
  """
  auction_bid_table_aggregate(
    """distinct select on columns"""
    distinct_on: [auction_bid_table_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_table_order_by!]

    """filter the rows returned"""
    where: auction_bid_table_bool_exp
  ): auction_bid_table_aggregate!

  """
  fetch data from the table: "auction_bid_table" using primary key columns
  """
  auction_bid_table_by_pk(id: Int!): auction_bid_table

  """fetch data from the table: "auction" using primary key columns"""
  auction_by_pk(id: Int!, version: Int!): auction

  """
  fetch data from the table: "codex"
  """
  codex(
    """distinct select on columns"""
    distinct_on: [codex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_order_by!]

    """filter the rows returned"""
    where: codex_bool_exp
  ): [codex!]!

  """
  fetch aggregated fields from the table: "codex"
  """
  codex_aggregate(
    """distinct select on columns"""
    distinct_on: [codex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_order_by!]

    """filter the rows returned"""
    where: codex_bool_exp
  ): codex_aggregate!

  """fetch data from the table: "codex" using primary key columns"""
  codex_by_pk(id: String!, tokenVersion: generative_token_version!): codex

  """
  fetch data from the table: "codex_update_request"
  """
  codex_update_request(
    """distinct select on columns"""
    distinct_on: [codex_update_request_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_update_request_order_by!]

    """filter the rows returned"""
    where: codex_update_request_bool_exp
  ): [codex_update_request!]!

  """
  fetch aggregated fields from the table: "codex_update_request"
  """
  codex_update_request_aggregate(
    """distinct select on columns"""
    distinct_on: [codex_update_request_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_update_request_order_by!]

    """filter the rows returned"""
    where: codex_update_request_bool_exp
  ): codex_update_request_aggregate!

  """
  fetch data from the table: "codex_update_request" using primary key columns
  """
  codex_update_request_by_pk(codexId: String!, tokenId: String!, tokenVersion: generative_token_version!): codex_update_request

  """
  fetch data from the table: "collaboration"
  """
  collaboration(
    """distinct select on columns"""
    distinct_on: [collaboration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collaboration_order_by!]

    """filter the rows returned"""
    where: collaboration_bool_exp
  ): [collaboration!]!

  """
  fetch aggregated fields from the table: "collaboration"
  """
  collaboration_aggregate(
    """distinct select on columns"""
    distinct_on: [collaboration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collaboration_order_by!]

    """filter the rows returned"""
    where: collaboration_bool_exp
  ): collaboration_aggregate!

  """fetch data from the table: "collaboration" using primary key columns"""
  collaboration_by_pk(collaborationContractId: String!, collaboratorId: String!): collaboration

  """
  fetch data from the table: "collection_offer"
  """
  collection_offer(
    """distinct select on columns"""
    distinct_on: [collection_offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collection_offer_order_by!]

    """filter the rows returned"""
    where: collection_offer_bool_exp
  ): [collection_offer!]!

  """
  fetch aggregated fields from the table: "collection_offer"
  """
  collection_offer_aggregate(
    """distinct select on columns"""
    distinct_on: [collection_offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collection_offer_order_by!]

    """filter the rows returned"""
    where: collection_offer_bool_exp
  ): collection_offer_aggregate!

  """
  fetch data from the table: "collection_offer" using primary key columns
  """
  collection_offer_by_pk(id: String!, version: Int!): collection_offer

  """
  fetch data from the table: "generative_token"
  """
  generative_token(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): [generative_token!]!

  """
  fetch aggregated fields from the table: "generative_token"
  """
  generative_token_aggregate(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): generative_token_aggregate!

  """
  fetch data from the table: "generative_token" using primary key columns
  """
  generative_token_by_pk(id: String!): generative_token

  """
  fetch data from the table: "gentk_assign"
  """
  gentk_assign(
    """distinct select on columns"""
    distinct_on: [gentk_assign_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [gentk_assign_order_by!]

    """filter the rows returned"""
    where: gentk_assign_bool_exp
  ): [gentk_assign!]!

  """
  fetch aggregated fields from the table: "gentk_assign"
  """
  gentk_assign_aggregate(
    """distinct select on columns"""
    distinct_on: [gentk_assign_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [gentk_assign_order_by!]

    """filter the rows returned"""
    where: gentk_assign_bool_exp
  ): gentk_assign_aggregate!

  """fetch data from the table: "gentk_assign" using primary key columns"""
  gentk_assign_by_pk(gentkId: String!, gentkIssuerVersion: generative_token_version!): gentk_assign

  """
  fetch data from the table: "ipfs_cid"
  """
  ipfs_cid(
    """distinct select on columns"""
    distinct_on: [ipfs_cid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ipfs_cid_order_by!]

    """filter the rows returned"""
    where: ipfs_cid_bool_exp
  ): [ipfs_cid!]!

  """
  fetch aggregated fields from the table: "ipfs_cid"
  """
  ipfs_cid_aggregate(
    """distinct select on columns"""
    distinct_on: [ipfs_cid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ipfs_cid_order_by!]

    """filter the rows returned"""
    where: ipfs_cid_bool_exp
  ): ipfs_cid_aggregate!

  """fetch data from the table: "ipfs_cid" using primary key columns"""
  ipfs_cid_by_pk(cid: String!): ipfs_cid

  """
  fetch data from the table: "listing"
  """
  listing(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): [listing!]!

  """
  fetch aggregated fields from the table: "listing"
  """
  listing_aggregate(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): listing_aggregate!

  """fetch data from the table: "listing" using primary key columns"""
  listing_by_pk(id: String!, version: Int!): listing

  """
  fetch data from the table: "market_stats"
  """
  market_stats(
    """distinct select on columns"""
    distinct_on: [market_stats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_order_by!]

    """filter the rows returned"""
    where: market_stats_bool_exp
  ): [market_stats!]!

  """
  fetch aggregated fields from the table: "market_stats"
  """
  market_stats_aggregate(
    """distinct select on columns"""
    distinct_on: [market_stats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_order_by!]

    """filter the rows returned"""
    where: market_stats_bool_exp
  ): market_stats_aggregate!

  """fetch data from the table: "market_stats" using primary key columns"""
  market_stats_by_pk(tokenId: String!): market_stats

  """
  fetch data from the table: "market_stats_history"
  """
  market_stats_history(
    """distinct select on columns"""
    distinct_on: [market_stats_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_history_order_by!]

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): [market_stats_history!]!

  """
  fetch aggregated fields from the table: "market_stats_history"
  """
  market_stats_history_aggregate(
    """distinct select on columns"""
    distinct_on: [market_stats_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_history_order_by!]

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): market_stats_history_aggregate!

  """
  fetch data from the table: "market_stats_history" using primary key columns
  """
  market_stats_history_by_pk(id: Int!): market_stats_history

  """
  fetch data from the table: "media_image"
  """
  media_image(
    """distinct select on columns"""
    distinct_on: [media_image_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [media_image_order_by!]

    """filter the rows returned"""
    where: media_image_bool_exp
  ): [media_image!]!

  """
  fetch aggregated fields from the table: "media_image"
  """
  media_image_aggregate(
    """distinct select on columns"""
    distinct_on: [media_image_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [media_image_order_by!]

    """filter the rows returned"""
    where: media_image_bool_exp
  ): media_image_aggregate!

  """fetch data from the table: "media_image" using primary key columns"""
  media_image_by_pk(cid: bpchar!): media_image

  """
  fetch data from the table: "metric"
  """
  metric(
    """distinct select on columns"""
    distinct_on: [metric_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_order_by!]

    """filter the rows returned"""
    where: metric_bool_exp
  ): [metric!]!

  """
  fetch aggregated fields from the table: "metric"
  """
  metric_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_order_by!]

    """filter the rows returned"""
    where: metric_bool_exp
  ): metric_aggregate!

  """fetch data from the table: "metric" using primary key columns"""
  metric_by_pk(id: String!): metric

  """
  fetch data from the table: "mint_ticket"
  """
  mint_ticket(
    """distinct select on columns"""
    distinct_on: [mint_ticket_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_order_by!]

    """filter the rows returned"""
    where: mint_ticket_bool_exp
  ): [mint_ticket!]!

  """
  fetch aggregated fields from the table: "mint_ticket"
  """
  mint_ticket_aggregate(
    """distinct select on columns"""
    distinct_on: [mint_ticket_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_order_by!]

    """filter the rows returned"""
    where: mint_ticket_bool_exp
  ): mint_ticket_aggregate!

  """fetch data from the table: "mint_ticket" using primary key columns"""
  mint_ticket_by_pk(id: String!): mint_ticket

  """An array relationship"""
  mint_ticket_settings(
    """distinct select on columns"""
    distinct_on: [mint_ticket_settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_settings_order_by!]

    """filter the rows returned"""
    where: mint_ticket_settings_bool_exp
  ): [mint_ticket_settings!]!

  """An aggregate relationship"""
  mint_ticket_settings_aggregate(
    """distinct select on columns"""
    distinct_on: [mint_ticket_settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_settings_order_by!]

    """filter the rows returned"""
    where: mint_ticket_settings_bool_exp
  ): mint_ticket_settings_aggregate!

  """
  fetch data from the table: "mint_ticket_settings" using primary key columns
  """
  mint_ticket_settings_by_pk(id: String!): mint_ticket_settings

  """
  fetch data from the table: "moderation_reason"
  """
  moderation_reason(
    """distinct select on columns"""
    distinct_on: [moderation_reason_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moderation_reason_order_by!]

    """filter the rows returned"""
    where: moderation_reason_bool_exp
  ): [moderation_reason!]!

  """
  fetch aggregated fields from the table: "moderation_reason"
  """
  moderation_reason_aggregate(
    """distinct select on columns"""
    distinct_on: [moderation_reason_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moderation_reason_order_by!]

    """filter the rows returned"""
    where: moderation_reason_bool_exp
  ): moderation_reason_aggregate!

  """
  fetch data from the table: "moderation_reason" using primary key columns
  """
  moderation_reason_by_pk(id: String!): moderation_reason

  """
  fetch data from the table: "objkt"
  """
  objkt(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): [objkt!]!

  """
  fetch aggregated fields from the table: "objkt"
  """
  objkt_aggregate(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): objkt_aggregate!

  """fetch data from the table: "objkt" using primary key columns"""
  objkt_by_pk(id: String!, issuerVersion: generative_token_version!): objkt

  """
  fetch data from the table: "offer"
  """
  offer(
    """distinct select on columns"""
    distinct_on: [offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [offer_order_by!]

    """filter the rows returned"""
    where: offer_bool_exp
  ): [offer!]!

  """
  fetch aggregated fields from the table: "offer"
  """
  offer_aggregate(
    """distinct select on columns"""
    distinct_on: [offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [offer_order_by!]

    """filter the rows returned"""
    where: offer_bool_exp
  ): offer_aggregate!

  """fetch data from the table: "offer" using primary key columns"""
  offer_by_pk(id: String!, version: Int!): offer

  """
  fetch data from the table: "pricing_dutch_auction"
  """
  pricing_dutch_auction(
    """distinct select on columns"""
    distinct_on: [pricing_dutch_auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pricing_dutch_auction_order_by!]

    """filter the rows returned"""
    where: pricing_dutch_auction_bool_exp
  ): [pricing_dutch_auction!]!

  """
  fetch aggregated fields from the table: "pricing_dutch_auction"
  """
  pricing_dutch_auction_aggregate(
    """distinct select on columns"""
    distinct_on: [pricing_dutch_auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pricing_dutch_auction_order_by!]

    """filter the rows returned"""
    where: pricing_dutch_auction_bool_exp
  ): pricing_dutch_auction_aggregate!

  """
  fetch data from the table: "pricing_dutch_auction" using primary key columns
  """
  pricing_dutch_auction_by_pk(id: String!): pricing_dutch_auction

  """
  fetch data from the table: "pricing_fixed"
  """
  pricing_fixed(
    """distinct select on columns"""
    distinct_on: [pricing_fixed_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pricing_fixed_order_by!]

    """filter the rows returned"""
    where: pricing_fixed_bool_exp
  ): [pricing_fixed!]!

  """
  fetch aggregated fields from the table: "pricing_fixed"
  """
  pricing_fixed_aggregate(
    """distinct select on columns"""
    distinct_on: [pricing_fixed_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pricing_fixed_order_by!]

    """filter the rows returned"""
    where: pricing_fixed_bool_exp
  ): pricing_fixed_aggregate!

  """fetch data from the table: "pricing_fixed" using primary key columns"""
  pricing_fixed_by_pk(id: String!): pricing_fixed

  """
  fetch data from the table: "redeemable"
  """
  redeemable(
    """distinct select on columns"""
    distinct_on: [redeemable_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redeemable_order_by!]

    """filter the rows returned"""
    where: redeemable_bool_exp
  ): [redeemable!]!

  """
  fetch aggregated fields from the table: "redeemable"
  """
  redeemable_aggregate(
    """distinct select on columns"""
    distinct_on: [redeemable_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redeemable_order_by!]

    """filter the rows returned"""
    where: redeemable_bool_exp
  ): redeemable_aggregate!

  """fetch data from the table: "redeemable" using primary key columns"""
  redeemable_by_pk(address: String!): redeemable

  """
  fetch data from the table: "redemption"
  """
  redemption(
    """distinct select on columns"""
    distinct_on: [redemption_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redemption_order_by!]

    """filter the rows returned"""
    where: redemption_bool_exp
  ): [redemption!]!

  """
  fetch aggregated fields from the table: "redemption"
  """
  redemption_aggregate(
    """distinct select on columns"""
    distinct_on: [redemption_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redemption_order_by!]

    """filter the rows returned"""
    where: redemption_bool_exp
  ): redemption_aggregate!

  """fetch data from the table: "redemption" using primary key columns"""
  redemption_by_pk(id: Int!): redemption

  """
  fetch data from the table: "report"
  """
  report(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!

  """
  fetch aggregated fields from the table: "report"
  """
  report_aggregate(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): report_aggregate!

  """fetch data from the table: "report" using primary key columns"""
  report_by_pk(id: uuid!): report

  """
  fetch data from the table: "reserve"
  """
  reserve(
    """distinct select on columns"""
    distinct_on: [reserve_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reserve_order_by!]

    """filter the rows returned"""
    where: reserve_bool_exp
  ): [reserve!]!

  """
  fetch aggregated fields from the table: "reserve"
  """
  reserve_aggregate(
    """distinct select on columns"""
    distinct_on: [reserve_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reserve_order_by!]

    """filter the rows returned"""
    where: reserve_bool_exp
  ): reserve_aggregate!

  """fetch data from the table: "reserve" using primary key columns"""
  reserve_by_pk(id: Int!): reserve

  """
  fetch data from the table: "split"
  """
  split(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!

  """
  fetch aggregated fields from the table: "split"
  """
  split_aggregate(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): split_aggregate!

  """fetch data from the table: "split" using primary key columns"""
  split_by_pk(id: Int!): split

  """
  fetch data from the table: "transaction"
  """
  transaction(
    """distinct select on columns"""
    distinct_on: [transaction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [transaction_order_by!]

    """filter the rows returned"""
    where: transaction_bool_exp
  ): [transaction!]!

  """
  fetch aggregated fields from the table: "transaction"
  """
  transaction_aggregate(
    """distinct select on columns"""
    distinct_on: [transaction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [transaction_order_by!]

    """filter the rows returned"""
    where: transaction_bool_exp
  ): transaction_aggregate!

  """fetch data from the table: "transaction" using primary key columns"""
  transaction_by_pk(id: Int!): transaction

  """
  fetch data from the table: "user"
  """
  user(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): [user!]!

  """
  fetch aggregated fields from the table: "user"
  """
  user_aggregate(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): user_aggregate!

  """fetch data from the table: "user" using primary key columns"""
  user_by_pk(id: String!): user

  """
  fetch data from the table: "user_stats"
  """
  user_stats(
    """distinct select on columns"""
    distinct_on: [user_stats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_stats_order_by!]

    """filter the rows returned"""
    where: user_stats_bool_exp
  ): [user_stats!]!

  """
  fetch aggregated fields from the table: "user_stats"
  """
  user_stats_aggregate(
    """distinct select on columns"""
    distinct_on: [user_stats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_stats_order_by!]

    """filter the rows returned"""
    where: user_stats_bool_exp
  ): user_stats_aggregate!

  """fetch data from the table: "user_stats" using primary key columns"""
  user_stats_by_pk(userId: String!): user_stats
}

"""
columns and relationships of "redeemable"
"""
type redeemable {
  """An array relationship"""
  actions(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """An aggregate relationship"""
  actions_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!
  address: String!
  baseAmount: numeric!
  createdAt: timestamptz!
  fa2: String!

  """An object relationship"""
  generative_token: generative_token!
  maxConsumptionsPerToken: Int!

  """An array relationship"""
  redemptions(
    """distinct select on columns"""
    distinct_on: [redemption_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redemption_order_by!]

    """filter the rows returned"""
    where: redemption_bool_exp
  ): [redemption!]!

  """An aggregate relationship"""
  redemptions_aggregate(
    """distinct select on columns"""
    distinct_on: [redemption_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redemption_order_by!]

    """filter the rows returned"""
    where: redemption_bool_exp
  ): redemption_aggregate!

  """An array relationship"""
  splits(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!

  """An aggregate relationship"""
  splits_aggregate(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): split_aggregate!
  tokenId: String!
}

"""
aggregated selection of "redeemable"
"""
type redeemable_aggregate {
  aggregate: redeemable_aggregate_fields
  nodes: [redeemable!]!
}

input redeemable_aggregate_bool_exp {
  count: redeemable_aggregate_bool_exp_count
}

input redeemable_aggregate_bool_exp_count {
  arguments: [redeemable_select_column!]
  distinct: Boolean
  filter: redeemable_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "redeemable"
"""
type redeemable_aggregate_fields {
  avg: redeemable_avg_fields
  count(columns: [redeemable_select_column!], distinct: Boolean): Int!
  max: redeemable_max_fields
  min: redeemable_min_fields
  stddev: redeemable_stddev_fields
  stddev_pop: redeemable_stddev_pop_fields
  stddev_samp: redeemable_stddev_samp_fields
  sum: redeemable_sum_fields
  var_pop: redeemable_var_pop_fields
  var_samp: redeemable_var_samp_fields
  variance: redeemable_variance_fields
}

"""
order by aggregate values of table "redeemable"
"""
input redeemable_aggregate_order_by {
  avg: redeemable_avg_order_by
  count: order_by
  max: redeemable_max_order_by
  min: redeemable_min_order_by
  stddev: redeemable_stddev_order_by
  stddev_pop: redeemable_stddev_pop_order_by
  stddev_samp: redeemable_stddev_samp_order_by
  sum: redeemable_sum_order_by
  var_pop: redeemable_var_pop_order_by
  var_samp: redeemable_var_samp_order_by
  variance: redeemable_variance_order_by
}

"""
input type for inserting array relation for remote table "redeemable"
"""
input redeemable_arr_rel_insert_input {
  data: [redeemable_insert_input!]!

  """upsert condition"""
  on_conflict: redeemable_on_conflict
}

"""aggregate avg on columns"""
type redeemable_avg_fields {
  baseAmount: Float
  maxConsumptionsPerToken: Float
}

"""
order by avg() on columns of table "redeemable"
"""
input redeemable_avg_order_by {
  baseAmount: order_by
  maxConsumptionsPerToken: order_by
}

"""
Boolean expression to filter rows from the table "redeemable". All fields are combined with a logical 'AND'.
"""
input redeemable_bool_exp {
  _and: [redeemable_bool_exp!]
  _not: redeemable_bool_exp
  _or: [redeemable_bool_exp!]
  actions: action_bool_exp
  actions_aggregate: action_aggregate_bool_exp
  address: String_comparison_exp
  baseAmount: numeric_comparison_exp
  createdAt: timestamptz_comparison_exp
  fa2: String_comparison_exp
  generative_token: generative_token_bool_exp
  maxConsumptionsPerToken: Int_comparison_exp
  redemptions: redemption_bool_exp
  redemptions_aggregate: redemption_aggregate_bool_exp
  splits: split_bool_exp
  splits_aggregate: split_aggregate_bool_exp
  tokenId: String_comparison_exp
}

"""
unique or primary key constraints on table "redeemable"
"""
enum redeemable_constraint {
  """
  unique or primary key constraint on columns "address"
  """
  PK_9cdc4a659b978ba30e26444f6ff
}

"""
input type for incrementing numeric columns in table "redeemable"
"""
input redeemable_inc_input {
  baseAmount: numeric
  maxConsumptionsPerToken: Int
}

"""
input type for inserting data into table "redeemable"
"""
input redeemable_insert_input {
  actions: action_arr_rel_insert_input
  address: String
  baseAmount: numeric
  createdAt: timestamptz
  fa2: String
  generative_token: generative_token_obj_rel_insert_input
  maxConsumptionsPerToken: Int
  redemptions: redemption_arr_rel_insert_input
  splits: split_arr_rel_insert_input
  tokenId: String
}

"""aggregate max on columns"""
type redeemable_max_fields {
  address: String
  baseAmount: numeric
  createdAt: timestamptz
  fa2: String
  maxConsumptionsPerToken: Int
  tokenId: String
}

"""
order by max() on columns of table "redeemable"
"""
input redeemable_max_order_by {
  address: order_by
  baseAmount: order_by
  createdAt: order_by
  fa2: order_by
  maxConsumptionsPerToken: order_by
  tokenId: order_by
}

"""aggregate min on columns"""
type redeemable_min_fields {
  address: String
  baseAmount: numeric
  createdAt: timestamptz
  fa2: String
  maxConsumptionsPerToken: Int
  tokenId: String
}

"""
order by min() on columns of table "redeemable"
"""
input redeemable_min_order_by {
  address: order_by
  baseAmount: order_by
  createdAt: order_by
  fa2: order_by
  maxConsumptionsPerToken: order_by
  tokenId: order_by
}

"""
response of any mutation on the table "redeemable"
"""
type redeemable_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [redeemable!]!
}

"""
input type for inserting object relation for remote table "redeemable"
"""
input redeemable_obj_rel_insert_input {
  data: redeemable_insert_input!

  """upsert condition"""
  on_conflict: redeemable_on_conflict
}

"""
on_conflict condition type for table "redeemable"
"""
input redeemable_on_conflict {
  constraint: redeemable_constraint!
  update_columns: [redeemable_update_column!]! = []
  where: redeemable_bool_exp
}

"""Ordering options when selecting data from "redeemable"."""
input redeemable_order_by {
  actions_aggregate: action_aggregate_order_by
  address: order_by
  baseAmount: order_by
  createdAt: order_by
  fa2: order_by
  generative_token: generative_token_order_by
  maxConsumptionsPerToken: order_by
  redemptions_aggregate: redemption_aggregate_order_by
  splits_aggregate: split_aggregate_order_by
  tokenId: order_by
}

"""primary key columns input for table: redeemable"""
input redeemable_pk_columns_input {
  address: String!
}

"""
select columns of table "redeemable"
"""
enum redeemable_select_column {
  """column name"""
  address

  """column name"""
  baseAmount

  """column name"""
  createdAt

  """column name"""
  fa2

  """column name"""
  maxConsumptionsPerToken

  """column name"""
  tokenId
}

"""
input type for updating data in table "redeemable"
"""
input redeemable_set_input {
  address: String
  baseAmount: numeric
  createdAt: timestamptz
  fa2: String
  maxConsumptionsPerToken: Int
  tokenId: String
}

"""aggregate stddev on columns"""
type redeemable_stddev_fields {
  baseAmount: Float
  maxConsumptionsPerToken: Float
}

"""
order by stddev() on columns of table "redeemable"
"""
input redeemable_stddev_order_by {
  baseAmount: order_by
  maxConsumptionsPerToken: order_by
}

"""aggregate stddev_pop on columns"""
type redeemable_stddev_pop_fields {
  baseAmount: Float
  maxConsumptionsPerToken: Float
}

"""
order by stddev_pop() on columns of table "redeemable"
"""
input redeemable_stddev_pop_order_by {
  baseAmount: order_by
  maxConsumptionsPerToken: order_by
}

"""aggregate stddev_samp on columns"""
type redeemable_stddev_samp_fields {
  baseAmount: Float
  maxConsumptionsPerToken: Float
}

"""
order by stddev_samp() on columns of table "redeemable"
"""
input redeemable_stddev_samp_order_by {
  baseAmount: order_by
  maxConsumptionsPerToken: order_by
}

"""
Streaming cursor of the table "redeemable"
"""
input redeemable_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: redeemable_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input redeemable_stream_cursor_value_input {
  address: String
  baseAmount: numeric
  createdAt: timestamptz
  fa2: String
  maxConsumptionsPerToken: Int
  tokenId: String
}

"""aggregate sum on columns"""
type redeemable_sum_fields {
  baseAmount: numeric
  maxConsumptionsPerToken: Int
}

"""
order by sum() on columns of table "redeemable"
"""
input redeemable_sum_order_by {
  baseAmount: order_by
  maxConsumptionsPerToken: order_by
}

"""
update columns of table "redeemable"
"""
enum redeemable_update_column {
  """column name"""
  address

  """column name"""
  baseAmount

  """column name"""
  createdAt

  """column name"""
  fa2

  """column name"""
  maxConsumptionsPerToken

  """column name"""
  tokenId
}

input redeemable_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: redeemable_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: redeemable_set_input

  """filter the rows which have to be updated"""
  where: redeemable_bool_exp!
}

"""aggregate var_pop on columns"""
type redeemable_var_pop_fields {
  baseAmount: Float
  maxConsumptionsPerToken: Float
}

"""
order by var_pop() on columns of table "redeemable"
"""
input redeemable_var_pop_order_by {
  baseAmount: order_by
  maxConsumptionsPerToken: order_by
}

"""aggregate var_samp on columns"""
type redeemable_var_samp_fields {
  baseAmount: Float
  maxConsumptionsPerToken: Float
}

"""
order by var_samp() on columns of table "redeemable"
"""
input redeemable_var_samp_order_by {
  baseAmount: order_by
  maxConsumptionsPerToken: order_by
}

"""aggregate variance on columns"""
type redeemable_variance_fields {
  baseAmount: Float
  maxConsumptionsPerToken: Float
}

"""
order by variance() on columns of table "redeemable"
"""
input redeemable_variance_order_by {
  baseAmount: order_by
  maxConsumptionsPerToken: order_by
}

"""
columns and relationships of "redemption"
"""
type redemption {
  amount: numeric!
  createdAt: timestamptz!
  id: Int!

  """An object relationship"""
  objkt: objkt
  objktId: String
  objktIssuerVersion: generative_token_version

  """An object relationship"""
  redeemable: redeemable
  redeemableAddress: String
  redeemerId: String

  """An object relationship"""
  user: user
}

"""
aggregated selection of "redemption"
"""
type redemption_aggregate {
  aggregate: redemption_aggregate_fields
  nodes: [redemption!]!
}

input redemption_aggregate_bool_exp {
  count: redemption_aggregate_bool_exp_count
}

input redemption_aggregate_bool_exp_count {
  arguments: [redemption_select_column!]
  distinct: Boolean
  filter: redemption_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "redemption"
"""
type redemption_aggregate_fields {
  avg: redemption_avg_fields
  count(columns: [redemption_select_column!], distinct: Boolean): Int!
  max: redemption_max_fields
  min: redemption_min_fields
  stddev: redemption_stddev_fields
  stddev_pop: redemption_stddev_pop_fields
  stddev_samp: redemption_stddev_samp_fields
  sum: redemption_sum_fields
  var_pop: redemption_var_pop_fields
  var_samp: redemption_var_samp_fields
  variance: redemption_variance_fields
}

"""
order by aggregate values of table "redemption"
"""
input redemption_aggregate_order_by {
  avg: redemption_avg_order_by
  count: order_by
  max: redemption_max_order_by
  min: redemption_min_order_by
  stddev: redemption_stddev_order_by
  stddev_pop: redemption_stddev_pop_order_by
  stddev_samp: redemption_stddev_samp_order_by
  sum: redemption_sum_order_by
  var_pop: redemption_var_pop_order_by
  var_samp: redemption_var_samp_order_by
  variance: redemption_variance_order_by
}

"""
input type for inserting array relation for remote table "redemption"
"""
input redemption_arr_rel_insert_input {
  data: [redemption_insert_input!]!

  """upsert condition"""
  on_conflict: redemption_on_conflict
}

"""aggregate avg on columns"""
type redemption_avg_fields {
  amount: Float
  id: Float
}

"""
order by avg() on columns of table "redemption"
"""
input redemption_avg_order_by {
  amount: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "redemption". All fields are combined with a logical 'AND'.
"""
input redemption_bool_exp {
  _and: [redemption_bool_exp!]
  _not: redemption_bool_exp
  _or: [redemption_bool_exp!]
  amount: numeric_comparison_exp
  createdAt: timestamptz_comparison_exp
  id: Int_comparison_exp
  objkt: objkt_bool_exp
  objktId: String_comparison_exp
  objktIssuerVersion: generative_token_version_comparison_exp
  redeemable: redeemable_bool_exp
  redeemableAddress: String_comparison_exp
  redeemerId: String_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "redemption"
"""
enum redemption_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_e96b16cd3061a61305951bc95a3
}

"""
input type for incrementing numeric columns in table "redemption"
"""
input redemption_inc_input {
  amount: numeric
  id: Int
}

"""
input type for inserting data into table "redemption"
"""
input redemption_insert_input {
  amount: numeric
  createdAt: timestamptz
  id: Int
  objkt: objkt_obj_rel_insert_input
  objktId: String
  objktIssuerVersion: generative_token_version
  redeemable: redeemable_obj_rel_insert_input
  redeemableAddress: String
  redeemerId: String
  user: user_obj_rel_insert_input
}

"""aggregate max on columns"""
type redemption_max_fields {
  amount: numeric
  createdAt: timestamptz
  id: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  redeemableAddress: String
  redeemerId: String
}

"""
order by max() on columns of table "redemption"
"""
input redemption_max_order_by {
  amount: order_by
  createdAt: order_by
  id: order_by
  objktId: order_by
  objktIssuerVersion: order_by
  redeemableAddress: order_by
  redeemerId: order_by
}

"""aggregate min on columns"""
type redemption_min_fields {
  amount: numeric
  createdAt: timestamptz
  id: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  redeemableAddress: String
  redeemerId: String
}

"""
order by min() on columns of table "redemption"
"""
input redemption_min_order_by {
  amount: order_by
  createdAt: order_by
  id: order_by
  objktId: order_by
  objktIssuerVersion: order_by
  redeemableAddress: order_by
  redeemerId: order_by
}

"""
response of any mutation on the table "redemption"
"""
type redemption_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [redemption!]!
}

"""
on_conflict condition type for table "redemption"
"""
input redemption_on_conflict {
  constraint: redemption_constraint!
  update_columns: [redemption_update_column!]! = []
  where: redemption_bool_exp
}

"""Ordering options when selecting data from "redemption"."""
input redemption_order_by {
  amount: order_by
  createdAt: order_by
  id: order_by
  objkt: objkt_order_by
  objktId: order_by
  objktIssuerVersion: order_by
  redeemable: redeemable_order_by
  redeemableAddress: order_by
  redeemerId: order_by
  user: user_order_by
}

"""primary key columns input for table: redemption"""
input redemption_pk_columns_input {
  id: Int!
}

"""
select columns of table "redemption"
"""
enum redemption_select_column {
  """column name"""
  amount

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  objktId

  """column name"""
  objktIssuerVersion

  """column name"""
  redeemableAddress

  """column name"""
  redeemerId
}

"""
input type for updating data in table "redemption"
"""
input redemption_set_input {
  amount: numeric
  createdAt: timestamptz
  id: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  redeemableAddress: String
  redeemerId: String
}

"""aggregate stddev on columns"""
type redemption_stddev_fields {
  amount: Float
  id: Float
}

"""
order by stddev() on columns of table "redemption"
"""
input redemption_stddev_order_by {
  amount: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type redemption_stddev_pop_fields {
  amount: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "redemption"
"""
input redemption_stddev_pop_order_by {
  amount: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type redemption_stddev_samp_fields {
  amount: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "redemption"
"""
input redemption_stddev_samp_order_by {
  amount: order_by
  id: order_by
}

"""
Streaming cursor of the table "redemption"
"""
input redemption_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: redemption_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input redemption_stream_cursor_value_input {
  amount: numeric
  createdAt: timestamptz
  id: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  redeemableAddress: String
  redeemerId: String
}

"""aggregate sum on columns"""
type redemption_sum_fields {
  amount: numeric
  id: Int
}

"""
order by sum() on columns of table "redemption"
"""
input redemption_sum_order_by {
  amount: order_by
  id: order_by
}

"""
update columns of table "redemption"
"""
enum redemption_update_column {
  """column name"""
  amount

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  objktId

  """column name"""
  objktIssuerVersion

  """column name"""
  redeemableAddress

  """column name"""
  redeemerId
}

input redemption_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: redemption_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: redemption_set_input

  """filter the rows which have to be updated"""
  where: redemption_bool_exp!
}

"""aggregate var_pop on columns"""
type redemption_var_pop_fields {
  amount: Float
  id: Float
}

"""
order by var_pop() on columns of table "redemption"
"""
input redemption_var_pop_order_by {
  amount: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type redemption_var_samp_fields {
  amount: Float
  id: Float
}

"""
order by var_samp() on columns of table "redemption"
"""
input redemption_var_samp_order_by {
  amount: order_by
  id: order_by
}

"""aggregate variance on columns"""
type redemption_variance_fields {
  amount: Float
  id: Float
}

"""
order by variance() on columns of table "redemption"
"""
input redemption_variance_order_by {
  amount: order_by
  id: order_by
}

"""
columns and relationships of "report"
"""
type report {
  createdAt: timestamptz!

  """An object relationship"""
  generative_token: generative_token
  id: uuid!

  """An object relationship"""
  moderation_reason: moderation_reason
  reasonId: String
  tokenId: String

  """An object relationship"""
  user: user
  userId: String
}

"""
aggregated selection of "report"
"""
type report_aggregate {
  aggregate: report_aggregate_fields
  nodes: [report!]!
}

input report_aggregate_bool_exp {
  count: report_aggregate_bool_exp_count
}

input report_aggregate_bool_exp_count {
  arguments: [report_select_column!]
  distinct: Boolean
  filter: report_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "report"
"""
type report_aggregate_fields {
  count(columns: [report_select_column!], distinct: Boolean): Int!
  max: report_max_fields
  min: report_min_fields
}

"""
order by aggregate values of table "report"
"""
input report_aggregate_order_by {
  count: order_by
  max: report_max_order_by
  min: report_min_order_by
}

"""
input type for inserting array relation for remote table "report"
"""
input report_arr_rel_insert_input {
  data: [report_insert_input!]!

  """upsert condition"""
  on_conflict: report_on_conflict
}

"""
Boolean expression to filter rows from the table "report". All fields are combined with a logical 'AND'.
"""
input report_bool_exp {
  _and: [report_bool_exp!]
  _not: report_bool_exp
  _or: [report_bool_exp!]
  createdAt: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  id: uuid_comparison_exp
  moderation_reason: moderation_reason_bool_exp
  reasonId: String_comparison_exp
  tokenId: String_comparison_exp
  user: user_bool_exp
  userId: String_comparison_exp
}

"""
unique or primary key constraints on table "report"
"""
enum report_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_99e4d0bea58cba73c57f935a546
}

"""
input type for inserting data into table "report"
"""
input report_insert_input {
  createdAt: timestamptz
  generative_token: generative_token_obj_rel_insert_input
  id: uuid
  moderation_reason: moderation_reason_obj_rel_insert_input
  reasonId: String
  tokenId: String
  user: user_obj_rel_insert_input
  userId: String
}

"""aggregate max on columns"""
type report_max_fields {
  createdAt: timestamptz
  id: uuid
  reasonId: String
  tokenId: String
  userId: String
}

"""
order by max() on columns of table "report"
"""
input report_max_order_by {
  createdAt: order_by
  id: order_by
  reasonId: order_by
  tokenId: order_by
  userId: order_by
}

"""aggregate min on columns"""
type report_min_fields {
  createdAt: timestamptz
  id: uuid
  reasonId: String
  tokenId: String
  userId: String
}

"""
order by min() on columns of table "report"
"""
input report_min_order_by {
  createdAt: order_by
  id: order_by
  reasonId: order_by
  tokenId: order_by
  userId: order_by
}

"""
response of any mutation on the table "report"
"""
type report_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [report!]!
}

"""
on_conflict condition type for table "report"
"""
input report_on_conflict {
  constraint: report_constraint!
  update_columns: [report_update_column!]! = []
  where: report_bool_exp
}

"""Ordering options when selecting data from "report"."""
input report_order_by {
  createdAt: order_by
  generative_token: generative_token_order_by
  id: order_by
  moderation_reason: moderation_reason_order_by
  reasonId: order_by
  tokenId: order_by
  user: user_order_by
  userId: order_by
}

"""primary key columns input for table: report"""
input report_pk_columns_input {
  id: uuid!
}

"""
select columns of table "report"
"""
enum report_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  reasonId

  """column name"""
  tokenId

  """column name"""
  userId
}

"""
input type for updating data in table "report"
"""
input report_set_input {
  createdAt: timestamptz
  id: uuid
  reasonId: String
  tokenId: String
  userId: String
}

"""
Streaming cursor of the table "report"
"""
input report_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: report_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input report_stream_cursor_value_input {
  createdAt: timestamptz
  id: uuid
  reasonId: String
  tokenId: String
  userId: String
}

"""
update columns of table "report"
"""
enum report_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  reasonId

  """column name"""
  tokenId

  """column name"""
  userId
}

input report_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: report_set_input

  """filter the rows which have to be updated"""
  where: report_bool_exp!
}

"""
columns and relationships of "reserve"
"""
type reserve {
  amount: numeric!
  data(
    """JSON select path"""
    path: String
  ): jsonb

  """An object relationship"""
  generative_token: generative_token!
  id: Int!
  method: Int!
  tokenId: String!
}

"""
aggregated selection of "reserve"
"""
type reserve_aggregate {
  aggregate: reserve_aggregate_fields
  nodes: [reserve!]!
}

input reserve_aggregate_bool_exp {
  count: reserve_aggregate_bool_exp_count
}

input reserve_aggregate_bool_exp_count {
  arguments: [reserve_select_column!]
  distinct: Boolean
  filter: reserve_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "reserve"
"""
type reserve_aggregate_fields {
  avg: reserve_avg_fields
  count(columns: [reserve_select_column!], distinct: Boolean): Int!
  max: reserve_max_fields
  min: reserve_min_fields
  stddev: reserve_stddev_fields
  stddev_pop: reserve_stddev_pop_fields
  stddev_samp: reserve_stddev_samp_fields
  sum: reserve_sum_fields
  var_pop: reserve_var_pop_fields
  var_samp: reserve_var_samp_fields
  variance: reserve_variance_fields
}

"""
order by aggregate values of table "reserve"
"""
input reserve_aggregate_order_by {
  avg: reserve_avg_order_by
  count: order_by
  max: reserve_max_order_by
  min: reserve_min_order_by
  stddev: reserve_stddev_order_by
  stddev_pop: reserve_stddev_pop_order_by
  stddev_samp: reserve_stddev_samp_order_by
  sum: reserve_sum_order_by
  var_pop: reserve_var_pop_order_by
  var_samp: reserve_var_samp_order_by
  variance: reserve_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input reserve_append_input {
  data: jsonb
}

"""
input type for inserting array relation for remote table "reserve"
"""
input reserve_arr_rel_insert_input {
  data: [reserve_insert_input!]!

  """upsert condition"""
  on_conflict: reserve_on_conflict
}

"""aggregate avg on columns"""
type reserve_avg_fields {
  amount: Float
  id: Float
  method: Float
}

"""
order by avg() on columns of table "reserve"
"""
input reserve_avg_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

"""
Boolean expression to filter rows from the table "reserve". All fields are combined with a logical 'AND'.
"""
input reserve_bool_exp {
  _and: [reserve_bool_exp!]
  _not: reserve_bool_exp
  _or: [reserve_bool_exp!]
  amount: numeric_comparison_exp
  data: jsonb_comparison_exp
  generative_token: generative_token_bool_exp
  id: Int_comparison_exp
  method: Int_comparison_exp
  tokenId: String_comparison_exp
}

"""
unique or primary key constraints on table "reserve"
"""
enum reserve_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_619d1e12dbedbe126620cac8240
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input reserve_delete_at_path_input {
  data: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input reserve_delete_elem_input {
  data: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input reserve_delete_key_input {
  data: String
}

"""
input type for incrementing numeric columns in table "reserve"
"""
input reserve_inc_input {
  amount: numeric
  id: Int
  method: Int
}

"""
input type for inserting data into table "reserve"
"""
input reserve_insert_input {
  amount: numeric
  data: jsonb
  generative_token: generative_token_obj_rel_insert_input
  id: Int
  method: Int
  tokenId: String
}

"""aggregate max on columns"""
type reserve_max_fields {
  amount: numeric
  id: Int
  method: Int
  tokenId: String
}

"""
order by max() on columns of table "reserve"
"""
input reserve_max_order_by {
  amount: order_by
  id: order_by
  method: order_by
  tokenId: order_by
}

"""aggregate min on columns"""
type reserve_min_fields {
  amount: numeric
  id: Int
  method: Int
  tokenId: String
}

"""
order by min() on columns of table "reserve"
"""
input reserve_min_order_by {
  amount: order_by
  id: order_by
  method: order_by
  tokenId: order_by
}

"""
response of any mutation on the table "reserve"
"""
type reserve_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [reserve!]!
}

"""
on_conflict condition type for table "reserve"
"""
input reserve_on_conflict {
  constraint: reserve_constraint!
  update_columns: [reserve_update_column!]! = []
  where: reserve_bool_exp
}

"""Ordering options when selecting data from "reserve"."""
input reserve_order_by {
  amount: order_by
  data: order_by
  generative_token: generative_token_order_by
  id: order_by
  method: order_by
  tokenId: order_by
}

"""primary key columns input for table: reserve"""
input reserve_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input reserve_prepend_input {
  data: jsonb
}

"""
select columns of table "reserve"
"""
enum reserve_select_column {
  """column name"""
  amount

  """column name"""
  data

  """column name"""
  id

  """column name"""
  method

  """column name"""
  tokenId
}

"""
input type for updating data in table "reserve"
"""
input reserve_set_input {
  amount: numeric
  data: jsonb
  id: Int
  method: Int
  tokenId: String
}

"""aggregate stddev on columns"""
type reserve_stddev_fields {
  amount: Float
  id: Float
  method: Float
}

"""
order by stddev() on columns of table "reserve"
"""
input reserve_stddev_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

"""aggregate stddev_pop on columns"""
type reserve_stddev_pop_fields {
  amount: Float
  id: Float
  method: Float
}

"""
order by stddev_pop() on columns of table "reserve"
"""
input reserve_stddev_pop_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

"""aggregate stddev_samp on columns"""
type reserve_stddev_samp_fields {
  amount: Float
  id: Float
  method: Float
}

"""
order by stddev_samp() on columns of table "reserve"
"""
input reserve_stddev_samp_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

"""
Streaming cursor of the table "reserve"
"""
input reserve_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: reserve_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input reserve_stream_cursor_value_input {
  amount: numeric
  data: jsonb
  id: Int
  method: Int
  tokenId: String
}

"""aggregate sum on columns"""
type reserve_sum_fields {
  amount: numeric
  id: Int
  method: Int
}

"""
order by sum() on columns of table "reserve"
"""
input reserve_sum_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

"""
update columns of table "reserve"
"""
enum reserve_update_column {
  """column name"""
  amount

  """column name"""
  data

  """column name"""
  id

  """column name"""
  method

  """column name"""
  tokenId
}

input reserve_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: reserve_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: reserve_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: reserve_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: reserve_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: reserve_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: reserve_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: reserve_set_input

  """filter the rows which have to be updated"""
  where: reserve_bool_exp!
}

"""aggregate var_pop on columns"""
type reserve_var_pop_fields {
  amount: Float
  id: Float
  method: Float
}

"""
order by var_pop() on columns of table "reserve"
"""
input reserve_var_pop_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

"""aggregate var_samp on columns"""
type reserve_var_samp_fields {
  amount: Float
  id: Float
  method: Float
}

"""
order by var_samp() on columns of table "reserve"
"""
input reserve_var_samp_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

"""aggregate variance on columns"""
type reserve_variance_fields {
  amount: Float
  id: Float
  method: Float
}

"""
order by variance() on columns of table "reserve"
"""
input reserve_variance_order_by {
  amount: order_by
  id: order_by
  method: order_by
}

scalar smallint

"""
Boolean expression to compare columns of type "smallint". All fields are combined with logical 'AND'.
"""
input smallint_comparison_exp {
  _eq: smallint
  _gt: smallint
  _gte: smallint
  _in: [smallint!]
  _is_null: Boolean
  _lt: smallint
  _lte: smallint
  _neq: smallint
  _nin: [smallint!]
}

"""
columns and relationships of "split"
"""
type split {
  """An object relationship"""
  article: article
  articleId: Int

  """An object relationship"""
  generativeTokenByGenerativetokensecondaryid: generative_token
  generativeTokenPrimaryId: String
  generativeTokenSecondaryId: String

  """An object relationship"""
  generative_token: generative_token
  id: Int!

  """An object relationship"""
  objkt: objkt
  objktId: String
  objktIssuerVersion: generative_token_version
  pct: Int!

  """An object relationship"""
  redeemable: redeemable
  redeemableAddress: String

  """An object relationship"""
  user: user
  userId: String
}

"""
aggregated selection of "split"
"""
type split_aggregate {
  aggregate: split_aggregate_fields
  nodes: [split!]!
}

input split_aggregate_bool_exp {
  count: split_aggregate_bool_exp_count
}

input split_aggregate_bool_exp_count {
  arguments: [split_select_column!]
  distinct: Boolean
  filter: split_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "split"
"""
type split_aggregate_fields {
  avg: split_avg_fields
  count(columns: [split_select_column!], distinct: Boolean): Int!
  max: split_max_fields
  min: split_min_fields
  stddev: split_stddev_fields
  stddev_pop: split_stddev_pop_fields
  stddev_samp: split_stddev_samp_fields
  sum: split_sum_fields
  var_pop: split_var_pop_fields
  var_samp: split_var_samp_fields
  variance: split_variance_fields
}

"""
order by aggregate values of table "split"
"""
input split_aggregate_order_by {
  avg: split_avg_order_by
  count: order_by
  max: split_max_order_by
  min: split_min_order_by
  stddev: split_stddev_order_by
  stddev_pop: split_stddev_pop_order_by
  stddev_samp: split_stddev_samp_order_by
  sum: split_sum_order_by
  var_pop: split_var_pop_order_by
  var_samp: split_var_samp_order_by
  variance: split_variance_order_by
}

"""
input type for inserting array relation for remote table "split"
"""
input split_arr_rel_insert_input {
  data: [split_insert_input!]!

  """upsert condition"""
  on_conflict: split_on_conflict
}

"""aggregate avg on columns"""
type split_avg_fields {
  articleId: Float
  id: Float
  pct: Float
}

"""
order by avg() on columns of table "split"
"""
input split_avg_order_by {
  articleId: order_by
  id: order_by
  pct: order_by
}

"""
Boolean expression to filter rows from the table "split". All fields are combined with a logical 'AND'.
"""
input split_bool_exp {
  _and: [split_bool_exp!]
  _not: split_bool_exp
  _or: [split_bool_exp!]
  article: article_bool_exp
  articleId: Int_comparison_exp
  generativeTokenByGenerativetokensecondaryid: generative_token_bool_exp
  generativeTokenPrimaryId: String_comparison_exp
  generativeTokenSecondaryId: String_comparison_exp
  generative_token: generative_token_bool_exp
  id: Int_comparison_exp
  objkt: objkt_bool_exp
  objktId: String_comparison_exp
  objktIssuerVersion: generative_token_version_comparison_exp
  pct: Int_comparison_exp
  redeemable: redeemable_bool_exp
  redeemableAddress: String_comparison_exp
  user: user_bool_exp
  userId: String_comparison_exp
}

"""
unique or primary key constraints on table "split"
"""
enum split_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_a656ea46749d1567ca7e7d5923a
}

"""
input type for incrementing numeric columns in table "split"
"""
input split_inc_input {
  articleId: Int
  id: Int
  pct: Int
}

"""
input type for inserting data into table "split"
"""
input split_insert_input {
  article: article_obj_rel_insert_input
  articleId: Int
  generativeTokenByGenerativetokensecondaryid: generative_token_obj_rel_insert_input
  generativeTokenPrimaryId: String
  generativeTokenSecondaryId: String
  generative_token: generative_token_obj_rel_insert_input
  id: Int
  objkt: objkt_obj_rel_insert_input
  objktId: String
  objktIssuerVersion: generative_token_version
  pct: Int
  redeemable: redeemable_obj_rel_insert_input
  redeemableAddress: String
  user: user_obj_rel_insert_input
  userId: String
}

"""aggregate max on columns"""
type split_max_fields {
  articleId: Int
  generativeTokenPrimaryId: String
  generativeTokenSecondaryId: String
  id: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  pct: Int
  redeemableAddress: String
  userId: String
}

"""
order by max() on columns of table "split"
"""
input split_max_order_by {
  articleId: order_by
  generativeTokenPrimaryId: order_by
  generativeTokenSecondaryId: order_by
  id: order_by
  objktId: order_by
  objktIssuerVersion: order_by
  pct: order_by
  redeemableAddress: order_by
  userId: order_by
}

"""aggregate min on columns"""
type split_min_fields {
  articleId: Int
  generativeTokenPrimaryId: String
  generativeTokenSecondaryId: String
  id: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  pct: Int
  redeemableAddress: String
  userId: String
}

"""
order by min() on columns of table "split"
"""
input split_min_order_by {
  articleId: order_by
  generativeTokenPrimaryId: order_by
  generativeTokenSecondaryId: order_by
  id: order_by
  objktId: order_by
  objktIssuerVersion: order_by
  pct: order_by
  redeemableAddress: order_by
  userId: order_by
}

"""
response of any mutation on the table "split"
"""
type split_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [split!]!
}

"""
on_conflict condition type for table "split"
"""
input split_on_conflict {
  constraint: split_constraint!
  update_columns: [split_update_column!]! = []
  where: split_bool_exp
}

"""Ordering options when selecting data from "split"."""
input split_order_by {
  article: article_order_by
  articleId: order_by
  generativeTokenByGenerativetokensecondaryid: generative_token_order_by
  generativeTokenPrimaryId: order_by
  generativeTokenSecondaryId: order_by
  generative_token: generative_token_order_by
  id: order_by
  objkt: objkt_order_by
  objktId: order_by
  objktIssuerVersion: order_by
  pct: order_by
  redeemable: redeemable_order_by
  redeemableAddress: order_by
  user: user_order_by
  userId: order_by
}

"""primary key columns input for table: split"""
input split_pk_columns_input {
  id: Int!
}

"""
select columns of table "split"
"""
enum split_select_column {
  """column name"""
  articleId

  """column name"""
  generativeTokenPrimaryId

  """column name"""
  generativeTokenSecondaryId

  """column name"""
  id

  """column name"""
  objktId

  """column name"""
  objktIssuerVersion

  """column name"""
  pct

  """column name"""
  redeemableAddress

  """column name"""
  userId
}

"""
input type for updating data in table "split"
"""
input split_set_input {
  articleId: Int
  generativeTokenPrimaryId: String
  generativeTokenSecondaryId: String
  id: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  pct: Int
  redeemableAddress: String
  userId: String
}

"""aggregate stddev on columns"""
type split_stddev_fields {
  articleId: Float
  id: Float
  pct: Float
}

"""
order by stddev() on columns of table "split"
"""
input split_stddev_order_by {
  articleId: order_by
  id: order_by
  pct: order_by
}

"""aggregate stddev_pop on columns"""
type split_stddev_pop_fields {
  articleId: Float
  id: Float
  pct: Float
}

"""
order by stddev_pop() on columns of table "split"
"""
input split_stddev_pop_order_by {
  articleId: order_by
  id: order_by
  pct: order_by
}

"""aggregate stddev_samp on columns"""
type split_stddev_samp_fields {
  articleId: Float
  id: Float
  pct: Float
}

"""
order by stddev_samp() on columns of table "split"
"""
input split_stddev_samp_order_by {
  articleId: order_by
  id: order_by
  pct: order_by
}

"""
Streaming cursor of the table "split"
"""
input split_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: split_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input split_stream_cursor_value_input {
  articleId: Int
  generativeTokenPrimaryId: String
  generativeTokenSecondaryId: String
  id: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  pct: Int
  redeemableAddress: String
  userId: String
}

"""aggregate sum on columns"""
type split_sum_fields {
  articleId: Int
  id: Int
  pct: Int
}

"""
order by sum() on columns of table "split"
"""
input split_sum_order_by {
  articleId: order_by
  id: order_by
  pct: order_by
}

"""
update columns of table "split"
"""
enum split_update_column {
  """column name"""
  articleId

  """column name"""
  generativeTokenPrimaryId

  """column name"""
  generativeTokenSecondaryId

  """column name"""
  id

  """column name"""
  objktId

  """column name"""
  objktIssuerVersion

  """column name"""
  pct

  """column name"""
  redeemableAddress

  """column name"""
  userId
}

input split_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: split_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: split_set_input

  """filter the rows which have to be updated"""
  where: split_bool_exp!
}

"""aggregate var_pop on columns"""
type split_var_pop_fields {
  articleId: Float
  id: Float
  pct: Float
}

"""
order by var_pop() on columns of table "split"
"""
input split_var_pop_order_by {
  articleId: order_by
  id: order_by
  pct: order_by
}

"""aggregate var_samp on columns"""
type split_var_samp_fields {
  articleId: Float
  id: Float
  pct: Float
}

"""
order by var_samp() on columns of table "split"
"""
input split_var_samp_order_by {
  articleId: order_by
  id: order_by
  pct: order_by
}

"""aggregate variance on columns"""
type split_variance_fields {
  articleId: Float
  id: Float
  pct: Float
}

"""
order by variance() on columns of table "split"
"""
input split_variance_order_by {
  articleId: order_by
  id: order_by
  pct: order_by
}

type subscription_root {
  """
  fetch data from the table: "action"
  """
  action(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """
  fetch aggregated fields from the table: "action"
  """
  action_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!

  """fetch data from the table: "action" using primary key columns"""
  action_by_pk(id: uuid!): action

  """
  fetch data from the table in a streaming manner: "action"
  """
  action_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [action_stream_cursor_input]!

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """
  fetch data from the table: "article"
  """
  article(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): [article!]!

  """
  fetch aggregated fields from the table: "article"
  """
  article_aggregate(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): article_aggregate!

  """fetch data from the table: "article" using primary key columns"""
  article_by_pk(id: Int!): article

  """
  fetch data from the table: "article_generative_token"
  """
  article_generative_token(
    """distinct select on columns"""
    distinct_on: [article_generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_generative_token_order_by!]

    """filter the rows returned"""
    where: article_generative_token_bool_exp
  ): [article_generative_token!]!

  """
  fetch aggregated fields from the table: "article_generative_token"
  """
  article_generative_token_aggregate(
    """distinct select on columns"""
    distinct_on: [article_generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_generative_token_order_by!]

    """filter the rows returned"""
    where: article_generative_token_bool_exp
  ): article_generative_token_aggregate!

  """
  fetch data from the table: "article_generative_token" using primary key columns
  """
  article_generative_token_by_pk(articleId: Int!, generativeTokenId: String!): article_generative_token

  """
  fetch data from the table in a streaming manner: "article_generative_token"
  """
  article_generative_token_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [article_generative_token_stream_cursor_input]!

    """filter the rows returned"""
    where: article_generative_token_bool_exp
  ): [article_generative_token!]!

  """
  fetch data from the table: "article_ledger"
  """
  article_ledger(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): [article_ledger!]!

  """
  fetch aggregated fields from the table: "article_ledger"
  """
  article_ledger_aggregate(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): article_ledger_aggregate!

  """fetch data from the table: "article_ledger" using primary key columns"""
  article_ledger_by_pk(articleId: Int!, ownerId: String!): article_ledger

  """
  fetch data from the table in a streaming manner: "article_ledger"
  """
  article_ledger_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [article_ledger_stream_cursor_input]!

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): [article_ledger!]!

  """
  fetch data from the table: "article_revision"
  """
  article_revision(
    """distinct select on columns"""
    distinct_on: [article_revision_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_revision_order_by!]

    """filter the rows returned"""
    where: article_revision_bool_exp
  ): [article_revision!]!

  """
  fetch aggregated fields from the table: "article_revision"
  """
  article_revision_aggregate(
    """distinct select on columns"""
    distinct_on: [article_revision_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_revision_order_by!]

    """filter the rows returned"""
    where: article_revision_bool_exp
  ): article_revision_aggregate!

  """
  fetch data from the table: "article_revision" using primary key columns
  """
  article_revision_by_pk(articleId: Int!, iteration: smallint!): article_revision

  """
  fetch data from the table in a streaming manner: "article_revision"
  """
  article_revision_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [article_revision_stream_cursor_input]!

    """filter the rows returned"""
    where: article_revision_bool_exp
  ): [article_revision!]!

  """
  fetch data from the table in a streaming manner: "article"
  """
  article_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [article_stream_cursor_input]!

    """filter the rows returned"""
    where: article_bool_exp
  ): [article!]!

  """
  fetch data from the table: "auction"
  """
  auction(
    """distinct select on columns"""
    distinct_on: [auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_order_by!]

    """filter the rows returned"""
    where: auction_bool_exp
  ): [auction!]!

  """
  fetch aggregated fields from the table: "auction"
  """
  auction_aggregate(
    """distinct select on columns"""
    distinct_on: [auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_order_by!]

    """filter the rows returned"""
    where: auction_bool_exp
  ): auction_aggregate!

  """
  fetch data from the table: "auction_bid"
  """
  auction_bid(
    """distinct select on columns"""
    distinct_on: [auction_bid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_order_by!]

    """filter the rows returned"""
    where: auction_bid_bool_exp
  ): [auction_bid!]!

  """
  fetch aggregated fields from the table: "auction_bid"
  """
  auction_bid_aggregate(
    """distinct select on columns"""
    distinct_on: [auction_bid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_order_by!]

    """filter the rows returned"""
    where: auction_bid_bool_exp
  ): auction_bid_aggregate!

  """fetch data from the table: "auction_bid" using primary key columns"""
  auction_bid_by_pk(id: uuid!): auction_bid

  """
  fetch data from the table in a streaming manner: "auction_bid"
  """
  auction_bid_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [auction_bid_stream_cursor_input]!

    """filter the rows returned"""
    where: auction_bid_bool_exp
  ): [auction_bid!]!

  """
  fetch data from the table: "auction_bid_table"
  """
  auction_bid_table(
    """distinct select on columns"""
    distinct_on: [auction_bid_table_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_table_order_by!]

    """filter the rows returned"""
    where: auction_bid_table_bool_exp
  ): [auction_bid_table!]!

  """
  fetch aggregated fields from the table: "auction_bid_table"
  """
  auction_bid_table_aggregate(
    """distinct select on columns"""
    distinct_on: [auction_bid_table_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_table_order_by!]

    """filter the rows returned"""
    where: auction_bid_table_bool_exp
  ): auction_bid_table_aggregate!

  """
  fetch data from the table: "auction_bid_table" using primary key columns
  """
  auction_bid_table_by_pk(id: Int!): auction_bid_table

  """
  fetch data from the table in a streaming manner: "auction_bid_table"
  """
  auction_bid_table_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [auction_bid_table_stream_cursor_input]!

    """filter the rows returned"""
    where: auction_bid_table_bool_exp
  ): [auction_bid_table!]!

  """fetch data from the table: "auction" using primary key columns"""
  auction_by_pk(id: Int!, version: Int!): auction

  """
  fetch data from the table in a streaming manner: "auction"
  """
  auction_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [auction_stream_cursor_input]!

    """filter the rows returned"""
    where: auction_bool_exp
  ): [auction!]!

  """
  fetch data from the table: "codex"
  """
  codex(
    """distinct select on columns"""
    distinct_on: [codex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_order_by!]

    """filter the rows returned"""
    where: codex_bool_exp
  ): [codex!]!

  """
  fetch aggregated fields from the table: "codex"
  """
  codex_aggregate(
    """distinct select on columns"""
    distinct_on: [codex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_order_by!]

    """filter the rows returned"""
    where: codex_bool_exp
  ): codex_aggregate!

  """fetch data from the table: "codex" using primary key columns"""
  codex_by_pk(id: String!, tokenVersion: generative_token_version!): codex

  """
  fetch data from the table in a streaming manner: "codex"
  """
  codex_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [codex_stream_cursor_input]!

    """filter the rows returned"""
    where: codex_bool_exp
  ): [codex!]!

  """
  fetch data from the table: "codex_update_request"
  """
  codex_update_request(
    """distinct select on columns"""
    distinct_on: [codex_update_request_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_update_request_order_by!]

    """filter the rows returned"""
    where: codex_update_request_bool_exp
  ): [codex_update_request!]!

  """
  fetch aggregated fields from the table: "codex_update_request"
  """
  codex_update_request_aggregate(
    """distinct select on columns"""
    distinct_on: [codex_update_request_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_update_request_order_by!]

    """filter the rows returned"""
    where: codex_update_request_bool_exp
  ): codex_update_request_aggregate!

  """
  fetch data from the table: "codex_update_request" using primary key columns
  """
  codex_update_request_by_pk(codexId: String!, tokenId: String!, tokenVersion: generative_token_version!): codex_update_request

  """
  fetch data from the table in a streaming manner: "codex_update_request"
  """
  codex_update_request_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [codex_update_request_stream_cursor_input]!

    """filter the rows returned"""
    where: codex_update_request_bool_exp
  ): [codex_update_request!]!

  """
  fetch data from the table: "collaboration"
  """
  collaboration(
    """distinct select on columns"""
    distinct_on: [collaboration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collaboration_order_by!]

    """filter the rows returned"""
    where: collaboration_bool_exp
  ): [collaboration!]!

  """
  fetch aggregated fields from the table: "collaboration"
  """
  collaboration_aggregate(
    """distinct select on columns"""
    distinct_on: [collaboration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collaboration_order_by!]

    """filter the rows returned"""
    where: collaboration_bool_exp
  ): collaboration_aggregate!

  """fetch data from the table: "collaboration" using primary key columns"""
  collaboration_by_pk(collaborationContractId: String!, collaboratorId: String!): collaboration

  """
  fetch data from the table in a streaming manner: "collaboration"
  """
  collaboration_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [collaboration_stream_cursor_input]!

    """filter the rows returned"""
    where: collaboration_bool_exp
  ): [collaboration!]!

  """
  fetch data from the table: "collection_offer"
  """
  collection_offer(
    """distinct select on columns"""
    distinct_on: [collection_offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collection_offer_order_by!]

    """filter the rows returned"""
    where: collection_offer_bool_exp
  ): [collection_offer!]!

  """
  fetch aggregated fields from the table: "collection_offer"
  """
  collection_offer_aggregate(
    """distinct select on columns"""
    distinct_on: [collection_offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collection_offer_order_by!]

    """filter the rows returned"""
    where: collection_offer_bool_exp
  ): collection_offer_aggregate!

  """
  fetch data from the table: "collection_offer" using primary key columns
  """
  collection_offer_by_pk(id: String!, version: Int!): collection_offer

  """
  fetch data from the table in a streaming manner: "collection_offer"
  """
  collection_offer_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [collection_offer_stream_cursor_input]!

    """filter the rows returned"""
    where: collection_offer_bool_exp
  ): [collection_offer!]!

  """
  fetch data from the table: "generative_token"
  """
  generative_token(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): [generative_token!]!

  """
  fetch aggregated fields from the table: "generative_token"
  """
  generative_token_aggregate(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): generative_token_aggregate!

  """
  fetch data from the table: "generative_token" using primary key columns
  """
  generative_token_by_pk(id: String!): generative_token

  """
  fetch data from the table in a streaming manner: "generative_token"
  """
  generative_token_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [generative_token_stream_cursor_input]!

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): [generative_token!]!

  """
  fetch data from the table: "gentk_assign"
  """
  gentk_assign(
    """distinct select on columns"""
    distinct_on: [gentk_assign_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [gentk_assign_order_by!]

    """filter the rows returned"""
    where: gentk_assign_bool_exp
  ): [gentk_assign!]!

  """
  fetch aggregated fields from the table: "gentk_assign"
  """
  gentk_assign_aggregate(
    """distinct select on columns"""
    distinct_on: [gentk_assign_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [gentk_assign_order_by!]

    """filter the rows returned"""
    where: gentk_assign_bool_exp
  ): gentk_assign_aggregate!

  """fetch data from the table: "gentk_assign" using primary key columns"""
  gentk_assign_by_pk(gentkId: String!, gentkIssuerVersion: generative_token_version!): gentk_assign

  """
  fetch data from the table in a streaming manner: "gentk_assign"
  """
  gentk_assign_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [gentk_assign_stream_cursor_input]!

    """filter the rows returned"""
    where: gentk_assign_bool_exp
  ): [gentk_assign!]!

  """
  fetch data from the table: "ipfs_cid"
  """
  ipfs_cid(
    """distinct select on columns"""
    distinct_on: [ipfs_cid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ipfs_cid_order_by!]

    """filter the rows returned"""
    where: ipfs_cid_bool_exp
  ): [ipfs_cid!]!

  """
  fetch aggregated fields from the table: "ipfs_cid"
  """
  ipfs_cid_aggregate(
    """distinct select on columns"""
    distinct_on: [ipfs_cid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ipfs_cid_order_by!]

    """filter the rows returned"""
    where: ipfs_cid_bool_exp
  ): ipfs_cid_aggregate!

  """fetch data from the table: "ipfs_cid" using primary key columns"""
  ipfs_cid_by_pk(cid: String!): ipfs_cid

  """
  fetch data from the table in a streaming manner: "ipfs_cid"
  """
  ipfs_cid_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [ipfs_cid_stream_cursor_input]!

    """filter the rows returned"""
    where: ipfs_cid_bool_exp
  ): [ipfs_cid!]!

  """
  fetch data from the table: "listing"
  """
  listing(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): [listing!]!

  """
  fetch aggregated fields from the table: "listing"
  """
  listing_aggregate(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): listing_aggregate!

  """fetch data from the table: "listing" using primary key columns"""
  listing_by_pk(id: String!, version: Int!): listing

  """
  fetch data from the table in a streaming manner: "listing"
  """
  listing_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [listing_stream_cursor_input]!

    """filter the rows returned"""
    where: listing_bool_exp
  ): [listing!]!

  """
  fetch data from the table: "market_stats"
  """
  market_stats(
    """distinct select on columns"""
    distinct_on: [market_stats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_order_by!]

    """filter the rows returned"""
    where: market_stats_bool_exp
  ): [market_stats!]!

  """
  fetch aggregated fields from the table: "market_stats"
  """
  market_stats_aggregate(
    """distinct select on columns"""
    distinct_on: [market_stats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_order_by!]

    """filter the rows returned"""
    where: market_stats_bool_exp
  ): market_stats_aggregate!

  """fetch data from the table: "market_stats" using primary key columns"""
  market_stats_by_pk(tokenId: String!): market_stats

  """
  fetch data from the table: "market_stats_history"
  """
  market_stats_history(
    """distinct select on columns"""
    distinct_on: [market_stats_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_history_order_by!]

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): [market_stats_history!]!

  """
  fetch aggregated fields from the table: "market_stats_history"
  """
  market_stats_history_aggregate(
    """distinct select on columns"""
    distinct_on: [market_stats_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [market_stats_history_order_by!]

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): market_stats_history_aggregate!

  """
  fetch data from the table: "market_stats_history" using primary key columns
  """
  market_stats_history_by_pk(id: Int!): market_stats_history

  """
  fetch data from the table in a streaming manner: "market_stats_history"
  """
  market_stats_history_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [market_stats_history_stream_cursor_input]!

    """filter the rows returned"""
    where: market_stats_history_bool_exp
  ): [market_stats_history!]!

  """
  fetch data from the table in a streaming manner: "market_stats"
  """
  market_stats_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [market_stats_stream_cursor_input]!

    """filter the rows returned"""
    where: market_stats_bool_exp
  ): [market_stats!]!

  """
  fetch data from the table: "media_image"
  """
  media_image(
    """distinct select on columns"""
    distinct_on: [media_image_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [media_image_order_by!]

    """filter the rows returned"""
    where: media_image_bool_exp
  ): [media_image!]!

  """
  fetch aggregated fields from the table: "media_image"
  """
  media_image_aggregate(
    """distinct select on columns"""
    distinct_on: [media_image_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [media_image_order_by!]

    """filter the rows returned"""
    where: media_image_bool_exp
  ): media_image_aggregate!

  """fetch data from the table: "media_image" using primary key columns"""
  media_image_by_pk(cid: bpchar!): media_image

  """
  fetch data from the table in a streaming manner: "media_image"
  """
  media_image_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [media_image_stream_cursor_input]!

    """filter the rows returned"""
    where: media_image_bool_exp
  ): [media_image!]!

  """
  fetch data from the table: "metric"
  """
  metric(
    """distinct select on columns"""
    distinct_on: [metric_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_order_by!]

    """filter the rows returned"""
    where: metric_bool_exp
  ): [metric!]!

  """
  fetch aggregated fields from the table: "metric"
  """
  metric_aggregate(
    """distinct select on columns"""
    distinct_on: [metric_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metric_order_by!]

    """filter the rows returned"""
    where: metric_bool_exp
  ): metric_aggregate!

  """fetch data from the table: "metric" using primary key columns"""
  metric_by_pk(id: String!): metric

  """
  fetch data from the table in a streaming manner: "metric"
  """
  metric_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [metric_stream_cursor_input]!

    """filter the rows returned"""
    where: metric_bool_exp
  ): [metric!]!

  """
  fetch data from the table: "mint_ticket"
  """
  mint_ticket(
    """distinct select on columns"""
    distinct_on: [mint_ticket_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_order_by!]

    """filter the rows returned"""
    where: mint_ticket_bool_exp
  ): [mint_ticket!]!

  """
  fetch aggregated fields from the table: "mint_ticket"
  """
  mint_ticket_aggregate(
    """distinct select on columns"""
    distinct_on: [mint_ticket_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_order_by!]

    """filter the rows returned"""
    where: mint_ticket_bool_exp
  ): mint_ticket_aggregate!

  """fetch data from the table: "mint_ticket" using primary key columns"""
  mint_ticket_by_pk(id: String!): mint_ticket

  """An array relationship"""
  mint_ticket_settings(
    """distinct select on columns"""
    distinct_on: [mint_ticket_settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_settings_order_by!]

    """filter the rows returned"""
    where: mint_ticket_settings_bool_exp
  ): [mint_ticket_settings!]!

  """An aggregate relationship"""
  mint_ticket_settings_aggregate(
    """distinct select on columns"""
    distinct_on: [mint_ticket_settings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_settings_order_by!]

    """filter the rows returned"""
    where: mint_ticket_settings_bool_exp
  ): mint_ticket_settings_aggregate!

  """
  fetch data from the table: "mint_ticket_settings" using primary key columns
  """
  mint_ticket_settings_by_pk(id: String!): mint_ticket_settings

  """
  fetch data from the table in a streaming manner: "mint_ticket_settings"
  """
  mint_ticket_settings_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [mint_ticket_settings_stream_cursor_input]!

    """filter the rows returned"""
    where: mint_ticket_settings_bool_exp
  ): [mint_ticket_settings!]!

  """
  fetch data from the table in a streaming manner: "mint_ticket"
  """
  mint_ticket_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [mint_ticket_stream_cursor_input]!

    """filter the rows returned"""
    where: mint_ticket_bool_exp
  ): [mint_ticket!]!

  """
  fetch data from the table: "moderation_reason"
  """
  moderation_reason(
    """distinct select on columns"""
    distinct_on: [moderation_reason_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moderation_reason_order_by!]

    """filter the rows returned"""
    where: moderation_reason_bool_exp
  ): [moderation_reason!]!

  """
  fetch aggregated fields from the table: "moderation_reason"
  """
  moderation_reason_aggregate(
    """distinct select on columns"""
    distinct_on: [moderation_reason_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moderation_reason_order_by!]

    """filter the rows returned"""
    where: moderation_reason_bool_exp
  ): moderation_reason_aggregate!

  """
  fetch data from the table: "moderation_reason" using primary key columns
  """
  moderation_reason_by_pk(id: String!): moderation_reason

  """
  fetch data from the table in a streaming manner: "moderation_reason"
  """
  moderation_reason_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [moderation_reason_stream_cursor_input]!

    """filter the rows returned"""
    where: moderation_reason_bool_exp
  ): [moderation_reason!]!

  """
  fetch data from the table: "objkt"
  """
  objkt(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): [objkt!]!

  """
  fetch aggregated fields from the table: "objkt"
  """
  objkt_aggregate(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): objkt_aggregate!

  """fetch data from the table: "objkt" using primary key columns"""
  objkt_by_pk(id: String!, issuerVersion: generative_token_version!): objkt

  """
  fetch data from the table in a streaming manner: "objkt"
  """
  objkt_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [objkt_stream_cursor_input]!

    """filter the rows returned"""
    where: objkt_bool_exp
  ): [objkt!]!

  """
  fetch data from the table: "offer"
  """
  offer(
    """distinct select on columns"""
    distinct_on: [offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [offer_order_by!]

    """filter the rows returned"""
    where: offer_bool_exp
  ): [offer!]!

  """
  fetch aggregated fields from the table: "offer"
  """
  offer_aggregate(
    """distinct select on columns"""
    distinct_on: [offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [offer_order_by!]

    """filter the rows returned"""
    where: offer_bool_exp
  ): offer_aggregate!

  """fetch data from the table: "offer" using primary key columns"""
  offer_by_pk(id: String!, version: Int!): offer

  """
  fetch data from the table in a streaming manner: "offer"
  """
  offer_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [offer_stream_cursor_input]!

    """filter the rows returned"""
    where: offer_bool_exp
  ): [offer!]!

  """
  fetch data from the table: "pricing_dutch_auction"
  """
  pricing_dutch_auction(
    """distinct select on columns"""
    distinct_on: [pricing_dutch_auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pricing_dutch_auction_order_by!]

    """filter the rows returned"""
    where: pricing_dutch_auction_bool_exp
  ): [pricing_dutch_auction!]!

  """
  fetch aggregated fields from the table: "pricing_dutch_auction"
  """
  pricing_dutch_auction_aggregate(
    """distinct select on columns"""
    distinct_on: [pricing_dutch_auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pricing_dutch_auction_order_by!]

    """filter the rows returned"""
    where: pricing_dutch_auction_bool_exp
  ): pricing_dutch_auction_aggregate!

  """
  fetch data from the table: "pricing_dutch_auction" using primary key columns
  """
  pricing_dutch_auction_by_pk(id: String!): pricing_dutch_auction

  """
  fetch data from the table in a streaming manner: "pricing_dutch_auction"
  """
  pricing_dutch_auction_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [pricing_dutch_auction_stream_cursor_input]!

    """filter the rows returned"""
    where: pricing_dutch_auction_bool_exp
  ): [pricing_dutch_auction!]!

  """
  fetch data from the table: "pricing_fixed"
  """
  pricing_fixed(
    """distinct select on columns"""
    distinct_on: [pricing_fixed_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pricing_fixed_order_by!]

    """filter the rows returned"""
    where: pricing_fixed_bool_exp
  ): [pricing_fixed!]!

  """
  fetch aggregated fields from the table: "pricing_fixed"
  """
  pricing_fixed_aggregate(
    """distinct select on columns"""
    distinct_on: [pricing_fixed_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pricing_fixed_order_by!]

    """filter the rows returned"""
    where: pricing_fixed_bool_exp
  ): pricing_fixed_aggregate!

  """fetch data from the table: "pricing_fixed" using primary key columns"""
  pricing_fixed_by_pk(id: String!): pricing_fixed

  """
  fetch data from the table in a streaming manner: "pricing_fixed"
  """
  pricing_fixed_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [pricing_fixed_stream_cursor_input]!

    """filter the rows returned"""
    where: pricing_fixed_bool_exp
  ): [pricing_fixed!]!

  """
  fetch data from the table: "redeemable"
  """
  redeemable(
    """distinct select on columns"""
    distinct_on: [redeemable_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redeemable_order_by!]

    """filter the rows returned"""
    where: redeemable_bool_exp
  ): [redeemable!]!

  """
  fetch aggregated fields from the table: "redeemable"
  """
  redeemable_aggregate(
    """distinct select on columns"""
    distinct_on: [redeemable_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redeemable_order_by!]

    """filter the rows returned"""
    where: redeemable_bool_exp
  ): redeemable_aggregate!

  """fetch data from the table: "redeemable" using primary key columns"""
  redeemable_by_pk(address: String!): redeemable

  """
  fetch data from the table in a streaming manner: "redeemable"
  """
  redeemable_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [redeemable_stream_cursor_input]!

    """filter the rows returned"""
    where: redeemable_bool_exp
  ): [redeemable!]!

  """
  fetch data from the table: "redemption"
  """
  redemption(
    """distinct select on columns"""
    distinct_on: [redemption_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redemption_order_by!]

    """filter the rows returned"""
    where: redemption_bool_exp
  ): [redemption!]!

  """
  fetch aggregated fields from the table: "redemption"
  """
  redemption_aggregate(
    """distinct select on columns"""
    distinct_on: [redemption_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redemption_order_by!]

    """filter the rows returned"""
    where: redemption_bool_exp
  ): redemption_aggregate!

  """fetch data from the table: "redemption" using primary key columns"""
  redemption_by_pk(id: Int!): redemption

  """
  fetch data from the table in a streaming manner: "redemption"
  """
  redemption_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [redemption_stream_cursor_input]!

    """filter the rows returned"""
    where: redemption_bool_exp
  ): [redemption!]!

  """
  fetch data from the table: "report"
  """
  report(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!

  """
  fetch aggregated fields from the table: "report"
  """
  report_aggregate(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): report_aggregate!

  """fetch data from the table: "report" using primary key columns"""
  report_by_pk(id: uuid!): report

  """
  fetch data from the table in a streaming manner: "report"
  """
  report_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [report_stream_cursor_input]!

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!

  """
  fetch data from the table: "reserve"
  """
  reserve(
    """distinct select on columns"""
    distinct_on: [reserve_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reserve_order_by!]

    """filter the rows returned"""
    where: reserve_bool_exp
  ): [reserve!]!

  """
  fetch aggregated fields from the table: "reserve"
  """
  reserve_aggregate(
    """distinct select on columns"""
    distinct_on: [reserve_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reserve_order_by!]

    """filter the rows returned"""
    where: reserve_bool_exp
  ): reserve_aggregate!

  """fetch data from the table: "reserve" using primary key columns"""
  reserve_by_pk(id: Int!): reserve

  """
  fetch data from the table in a streaming manner: "reserve"
  """
  reserve_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [reserve_stream_cursor_input]!

    """filter the rows returned"""
    where: reserve_bool_exp
  ): [reserve!]!

  """
  fetch data from the table: "split"
  """
  split(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!

  """
  fetch aggregated fields from the table: "split"
  """
  split_aggregate(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): split_aggregate!

  """fetch data from the table: "split" using primary key columns"""
  split_by_pk(id: Int!): split

  """
  fetch data from the table in a streaming manner: "split"
  """
  split_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [split_stream_cursor_input]!

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!

  """
  fetch data from the table: "transaction"
  """
  transaction(
    """distinct select on columns"""
    distinct_on: [transaction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [transaction_order_by!]

    """filter the rows returned"""
    where: transaction_bool_exp
  ): [transaction!]!

  """
  fetch aggregated fields from the table: "transaction"
  """
  transaction_aggregate(
    """distinct select on columns"""
    distinct_on: [transaction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [transaction_order_by!]

    """filter the rows returned"""
    where: transaction_bool_exp
  ): transaction_aggregate!

  """fetch data from the table: "transaction" using primary key columns"""
  transaction_by_pk(id: Int!): transaction

  """
  fetch data from the table in a streaming manner: "transaction"
  """
  transaction_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [transaction_stream_cursor_input]!

    """filter the rows returned"""
    where: transaction_bool_exp
  ): [transaction!]!

  """
  fetch data from the table: "user"
  """
  user(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): [user!]!

  """
  fetch aggregated fields from the table: "user"
  """
  user_aggregate(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): user_aggregate!

  """fetch data from the table: "user" using primary key columns"""
  user_by_pk(id: String!): user

  """
  fetch data from the table: "user_stats"
  """
  user_stats(
    """distinct select on columns"""
    distinct_on: [user_stats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_stats_order_by!]

    """filter the rows returned"""
    where: user_stats_bool_exp
  ): [user_stats!]!

  """
  fetch aggregated fields from the table: "user_stats"
  """
  user_stats_aggregate(
    """distinct select on columns"""
    distinct_on: [user_stats_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_stats_order_by!]

    """filter the rows returned"""
    where: user_stats_bool_exp
  ): user_stats_aggregate!

  """fetch data from the table: "user_stats" using primary key columns"""
  user_stats_by_pk(userId: String!): user_stats

  """
  fetch data from the table in a streaming manner: "user_stats"
  """
  user_stats_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [user_stats_stream_cursor_input]!

    """filter the rows returned"""
    where: user_stats_bool_exp
  ): [user_stats!]!

  """
  fetch data from the table in a streaming manner: "user"
  """
  user_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [user_stream_cursor_input]!

    """filter the rows returned"""
    where: user_bool_exp
  ): [user!]!
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

"""
columns and relationships of "transaction"
"""
type transaction {
  """An object relationship"""
  article: article
  articleId: Int
  createdAt: timestamptz!

  """An object relationship"""
  generative_token: generative_token
  id: Int!

  """An object relationship"""
  objkt: objkt
  objktId: String
  objktIssuerVersion: generative_token_version
  opHash: String!
  price: numeric!
  ticketId: String
  tokenId: String
  type: transaction_type_enum!
}

"""
aggregated selection of "transaction"
"""
type transaction_aggregate {
  aggregate: transaction_aggregate_fields
  nodes: [transaction!]!
}

input transaction_aggregate_bool_exp {
  count: transaction_aggregate_bool_exp_count
}

input transaction_aggregate_bool_exp_count {
  arguments: [transaction_select_column!]
  distinct: Boolean
  filter: transaction_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "transaction"
"""
type transaction_aggregate_fields {
  avg: transaction_avg_fields
  count(columns: [transaction_select_column!], distinct: Boolean): Int!
  max: transaction_max_fields
  min: transaction_min_fields
  stddev: transaction_stddev_fields
  stddev_pop: transaction_stddev_pop_fields
  stddev_samp: transaction_stddev_samp_fields
  sum: transaction_sum_fields
  var_pop: transaction_var_pop_fields
  var_samp: transaction_var_samp_fields
  variance: transaction_variance_fields
}

"""
order by aggregate values of table "transaction"
"""
input transaction_aggregate_order_by {
  avg: transaction_avg_order_by
  count: order_by
  max: transaction_max_order_by
  min: transaction_min_order_by
  stddev: transaction_stddev_order_by
  stddev_pop: transaction_stddev_pop_order_by
  stddev_samp: transaction_stddev_samp_order_by
  sum: transaction_sum_order_by
  var_pop: transaction_var_pop_order_by
  var_samp: transaction_var_samp_order_by
  variance: transaction_variance_order_by
}

"""
input type for inserting array relation for remote table "transaction"
"""
input transaction_arr_rel_insert_input {
  data: [transaction_insert_input!]!

  """upsert condition"""
  on_conflict: transaction_on_conflict
}

"""aggregate avg on columns"""
type transaction_avg_fields {
  articleId: Float
  id: Float
  price: Float
}

"""
order by avg() on columns of table "transaction"
"""
input transaction_avg_order_by {
  articleId: order_by
  id: order_by
  price: order_by
}

"""
Boolean expression to filter rows from the table "transaction". All fields are combined with a logical 'AND'.
"""
input transaction_bool_exp {
  _and: [transaction_bool_exp!]
  _not: transaction_bool_exp
  _or: [transaction_bool_exp!]
  article: article_bool_exp
  articleId: Int_comparison_exp
  createdAt: timestamptz_comparison_exp
  generative_token: generative_token_bool_exp
  id: Int_comparison_exp
  objkt: objkt_bool_exp
  objktId: String_comparison_exp
  objktIssuerVersion: generative_token_version_comparison_exp
  opHash: String_comparison_exp
  price: numeric_comparison_exp
  ticketId: String_comparison_exp
  tokenId: String_comparison_exp
  type: transaction_type_enum_comparison_exp
}

"""
unique or primary key constraints on table "transaction"
"""
enum transaction_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_89eadb93a89810556e1cbcd6ab9
}

"""
input type for incrementing numeric columns in table "transaction"
"""
input transaction_inc_input {
  articleId: Int
  id: Int
  price: numeric
}

"""
input type for inserting data into table "transaction"
"""
input transaction_insert_input {
  article: article_obj_rel_insert_input
  articleId: Int
  createdAt: timestamptz
  generative_token: generative_token_obj_rel_insert_input
  id: Int
  objkt: objkt_obj_rel_insert_input
  objktId: String
  objktIssuerVersion: generative_token_version
  opHash: String
  price: numeric
  ticketId: String
  tokenId: String
  type: transaction_type_enum
}

"""aggregate max on columns"""
type transaction_max_fields {
  articleId: Int
  createdAt: timestamptz
  id: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  opHash: String
  price: numeric
  ticketId: String
  tokenId: String
  type: transaction_type_enum
}

"""
order by max() on columns of table "transaction"
"""
input transaction_max_order_by {
  articleId: order_by
  createdAt: order_by
  id: order_by
  objktId: order_by
  objktIssuerVersion: order_by
  opHash: order_by
  price: order_by
  ticketId: order_by
  tokenId: order_by
  type: order_by
}

"""aggregate min on columns"""
type transaction_min_fields {
  articleId: Int
  createdAt: timestamptz
  id: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  opHash: String
  price: numeric
  ticketId: String
  tokenId: String
  type: transaction_type_enum
}

"""
order by min() on columns of table "transaction"
"""
input transaction_min_order_by {
  articleId: order_by
  createdAt: order_by
  id: order_by
  objktId: order_by
  objktIssuerVersion: order_by
  opHash: order_by
  price: order_by
  ticketId: order_by
  tokenId: order_by
  type: order_by
}

"""
response of any mutation on the table "transaction"
"""
type transaction_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [transaction!]!
}

"""
on_conflict condition type for table "transaction"
"""
input transaction_on_conflict {
  constraint: transaction_constraint!
  update_columns: [transaction_update_column!]! = []
  where: transaction_bool_exp
}

"""Ordering options when selecting data from "transaction"."""
input transaction_order_by {
  article: article_order_by
  articleId: order_by
  createdAt: order_by
  generative_token: generative_token_order_by
  id: order_by
  objkt: objkt_order_by
  objktId: order_by
  objktIssuerVersion: order_by
  opHash: order_by
  price: order_by
  ticketId: order_by
  tokenId: order_by
  type: order_by
}

"""primary key columns input for table: transaction"""
input transaction_pk_columns_input {
  id: Int!
}

"""
select columns of table "transaction"
"""
enum transaction_select_column {
  """column name"""
  articleId

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  objktId

  """column name"""
  objktIssuerVersion

  """column name"""
  opHash

  """column name"""
  price

  """column name"""
  ticketId

  """column name"""
  tokenId

  """column name"""
  type
}

"""
input type for updating data in table "transaction"
"""
input transaction_set_input {
  articleId: Int
  createdAt: timestamptz
  id: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  opHash: String
  price: numeric
  ticketId: String
  tokenId: String
  type: transaction_type_enum
}

"""aggregate stddev on columns"""
type transaction_stddev_fields {
  articleId: Float
  id: Float
  price: Float
}

"""
order by stddev() on columns of table "transaction"
"""
input transaction_stddev_order_by {
  articleId: order_by
  id: order_by
  price: order_by
}

"""aggregate stddev_pop on columns"""
type transaction_stddev_pop_fields {
  articleId: Float
  id: Float
  price: Float
}

"""
order by stddev_pop() on columns of table "transaction"
"""
input transaction_stddev_pop_order_by {
  articleId: order_by
  id: order_by
  price: order_by
}

"""aggregate stddev_samp on columns"""
type transaction_stddev_samp_fields {
  articleId: Float
  id: Float
  price: Float
}

"""
order by stddev_samp() on columns of table "transaction"
"""
input transaction_stddev_samp_order_by {
  articleId: order_by
  id: order_by
  price: order_by
}

"""
Streaming cursor of the table "transaction"
"""
input transaction_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: transaction_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input transaction_stream_cursor_value_input {
  articleId: Int
  createdAt: timestamptz
  id: Int
  objktId: String
  objktIssuerVersion: generative_token_version
  opHash: String
  price: numeric
  ticketId: String
  tokenId: String
  type: transaction_type_enum
}

"""aggregate sum on columns"""
type transaction_sum_fields {
  articleId: Int
  id: Int
  price: numeric
}

"""
order by sum() on columns of table "transaction"
"""
input transaction_sum_order_by {
  articleId: order_by
  id: order_by
  price: order_by
}

scalar transaction_type_enum

"""
Boolean expression to compare columns of type "transaction_type_enum". All fields are combined with logical 'AND'.
"""
input transaction_type_enum_comparison_exp {
  _eq: transaction_type_enum
  _gt: transaction_type_enum
  _gte: transaction_type_enum
  _in: [transaction_type_enum!]
  _is_null: Boolean
  _lt: transaction_type_enum
  _lte: transaction_type_enum
  _neq: transaction_type_enum
  _nin: [transaction_type_enum!]
}

"""
update columns of table "transaction"
"""
enum transaction_update_column {
  """column name"""
  articleId

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  objktId

  """column name"""
  objktIssuerVersion

  """column name"""
  opHash

  """column name"""
  price

  """column name"""
  ticketId

  """column name"""
  tokenId

  """column name"""
  type
}

input transaction_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: transaction_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: transaction_set_input

  """filter the rows which have to be updated"""
  where: transaction_bool_exp!
}

"""aggregate var_pop on columns"""
type transaction_var_pop_fields {
  articleId: Float
  id: Float
  price: Float
}

"""
order by var_pop() on columns of table "transaction"
"""
input transaction_var_pop_order_by {
  articleId: order_by
  id: order_by
  price: order_by
}

"""aggregate var_samp on columns"""
type transaction_var_samp_fields {
  articleId: Float
  id: Float
  price: Float
}

"""
order by var_samp() on columns of table "transaction"
"""
input transaction_var_samp_order_by {
  articleId: order_by
  id: order_by
  price: order_by
}

"""aggregate variance on columns"""
type transaction_variance_fields {
  articleId: Float
  id: Float
  price: Float
}

"""
order by variance() on columns of table "transaction"
"""
input transaction_variance_order_by {
  articleId: order_by
  id: order_by
  price: order_by
}

"""
columns and relationships of "user"
"""
type user {
  """An array relationship"""
  actions(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """An array relationship"""
  actionsByTargetid(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): [action!]!

  """An aggregate relationship"""
  actionsByTargetid_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!

  """An aggregate relationship"""
  actions_aggregate(
    """distinct select on columns"""
    distinct_on: [action_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [action_order_by!]

    """filter the rows returned"""
    where: action_bool_exp
  ): action_aggregate!

  """An array relationship"""
  article_ledgers(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): [article_ledger!]!

  """An aggregate relationship"""
  article_ledgers_aggregate(
    """distinct select on columns"""
    distinct_on: [article_ledger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_ledger_order_by!]

    """filter the rows returned"""
    where: article_ledger_bool_exp
  ): article_ledger_aggregate!

  """An array relationship"""
  articles(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): [article!]!

  """An aggregate relationship"""
  articles_aggregate(
    """distinct select on columns"""
    distinct_on: [article_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [article_order_by!]

    """filter the rows returned"""
    where: article_bool_exp
  ): article_aggregate!

  """An array relationship"""
  auction_bids(
    """distinct select on columns"""
    distinct_on: [auction_bid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_order_by!]

    """filter the rows returned"""
    where: auction_bid_bool_exp
  ): [auction_bid!]!

  """An aggregate relationship"""
  auction_bids_aggregate(
    """distinct select on columns"""
    distinct_on: [auction_bid_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_bid_order_by!]

    """filter the rows returned"""
    where: auction_bid_bool_exp
  ): auction_bid_aggregate!

  """An array relationship"""
  auctions(
    """distinct select on columns"""
    distinct_on: [auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_order_by!]

    """filter the rows returned"""
    where: auction_bool_exp
  ): [auction!]!

  """An aggregate relationship"""
  auctions_aggregate(
    """distinct select on columns"""
    distinct_on: [auction_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auction_order_by!]

    """filter the rows returned"""
    where: auction_bool_exp
  ): auction_aggregate!
  authorizations: _int2!
  avatarMediaId: bpchar
  avatarUri: String

  """An array relationship"""
  codexes(
    """distinct select on columns"""
    distinct_on: [codex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_order_by!]

    """filter the rows returned"""
    where: codex_bool_exp
  ): [codex!]!

  """An aggregate relationship"""
  codexes_aggregate(
    """distinct select on columns"""
    distinct_on: [codex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [codex_order_by!]

    """filter the rows returned"""
    where: codex_bool_exp
  ): codex_aggregate!

  """An array relationship"""
  collaborations(
    """distinct select on columns"""
    distinct_on: [collaboration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collaboration_order_by!]

    """filter the rows returned"""
    where: collaboration_bool_exp
  ): [collaboration!]!

  """An array relationship"""
  collaborationsByCollaborationcontractid(
    """distinct select on columns"""
    distinct_on: [collaboration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collaboration_order_by!]

    """filter the rows returned"""
    where: collaboration_bool_exp
  ): [collaboration!]!

  """An aggregate relationship"""
  collaborationsByCollaborationcontractid_aggregate(
    """distinct select on columns"""
    distinct_on: [collaboration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collaboration_order_by!]

    """filter the rows returned"""
    where: collaboration_bool_exp
  ): collaboration_aggregate!

  """An aggregate relationship"""
  collaborations_aggregate(
    """distinct select on columns"""
    distinct_on: [collaboration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collaboration_order_by!]

    """filter the rows returned"""
    where: collaboration_bool_exp
  ): collaboration_aggregate!

  """An array relationship"""
  collection_offers(
    """distinct select on columns"""
    distinct_on: [collection_offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collection_offer_order_by!]

    """filter the rows returned"""
    where: collection_offer_bool_exp
  ): [collection_offer!]!

  """An aggregate relationship"""
  collection_offers_aggregate(
    """distinct select on columns"""
    distinct_on: [collection_offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [collection_offer_order_by!]

    """filter the rows returned"""
    where: collection_offer_bool_exp
  ): collection_offer_aggregate!
  createdAt: timestamptz!
  description: String
  flag: user_flag_enum!

  """An array relationship"""
  generative_tokens(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): [generative_token!]!

  """An aggregate relationship"""
  generative_tokens_aggregate(
    """distinct select on columns"""
    distinct_on: [generative_token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generative_token_order_by!]

    """filter the rows returned"""
    where: generative_token_bool_exp
  ): generative_token_aggregate!
  id: String!

  """An array relationship"""
  listings(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): [listing!]!

  """An array relationship"""
  listingsByAcceptedbyid(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): [listing!]!

  """An aggregate relationship"""
  listingsByAcceptedbyid_aggregate(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): listing_aggregate!

  """An aggregate relationship"""
  listings_aggregate(
    """distinct select on columns"""
    distinct_on: [listing_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [listing_order_by!]

    """filter the rows returned"""
    where: listing_bool_exp
  ): listing_aggregate!

  """An object relationship"""
  media_image: media_image
  metadata(
    """JSON select path"""
    path: String
  ): jsonb
  metadataUri: String

  """An array relationship"""
  mint_tickets(
    """distinct select on columns"""
    distinct_on: [mint_ticket_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_order_by!]

    """filter the rows returned"""
    where: mint_ticket_bool_exp
  ): [mint_ticket!]!

  """An aggregate relationship"""
  mint_tickets_aggregate(
    """distinct select on columns"""
    distinct_on: [mint_ticket_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mint_ticket_order_by!]

    """filter the rows returned"""
    where: mint_ticket_bool_exp
  ): mint_ticket_aggregate!
  moderationReasonId: String

  """An object relationship"""
  moderation_reason: moderation_reason
  name: String

  """An array relationship"""
  objkts(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): [objkt!]!

  """An array relationship"""
  objktsByOwnerid(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): [objkt!]!

  """An aggregate relationship"""
  objktsByOwnerid_aggregate(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): objkt_aggregate!

  """An aggregate relationship"""
  objkts_aggregate(
    """distinct select on columns"""
    distinct_on: [objkt_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objkt_order_by!]

    """filter the rows returned"""
    where: objkt_bool_exp
  ): objkt_aggregate!

  """An array relationship"""
  offers(
    """distinct select on columns"""
    distinct_on: [offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [offer_order_by!]

    """filter the rows returned"""
    where: offer_bool_exp
  ): [offer!]!

  """An aggregate relationship"""
  offers_aggregate(
    """distinct select on columns"""
    distinct_on: [offer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [offer_order_by!]

    """filter the rows returned"""
    where: offer_bool_exp
  ): offer_aggregate!

  """An array relationship"""
  redemptions(
    """distinct select on columns"""
    distinct_on: [redemption_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redemption_order_by!]

    """filter the rows returned"""
    where: redemption_bool_exp
  ): [redemption!]!

  """An aggregate relationship"""
  redemptions_aggregate(
    """distinct select on columns"""
    distinct_on: [redemption_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [redemption_order_by!]

    """filter the rows returned"""
    where: redemption_bool_exp
  ): redemption_aggregate!

  """An array relationship"""
  reports(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!

  """An aggregate relationship"""
  reports_aggregate(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): report_aggregate!

  """An array relationship"""
  splits(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): [split!]!

  """An aggregate relationship"""
  splits_aggregate(
    """distinct select on columns"""
    distinct_on: [split_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_order_by!]

    """filter the rows returned"""
    where: split_bool_exp
  ): split_aggregate!
  type: user_type_enum!
  updatedAt: timestamptz!

  """An object relationship"""
  user_stat: user_stats
}

"""
aggregated selection of "user"
"""
type user_aggregate {
  aggregate: user_aggregate_fields
  nodes: [user!]!
}

input user_aggregate_bool_exp {
  count: user_aggregate_bool_exp_count
}

input user_aggregate_bool_exp_count {
  arguments: [user_select_column!]
  distinct: Boolean
  filter: user_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "user"
"""
type user_aggregate_fields {
  count(columns: [user_select_column!], distinct: Boolean): Int!
  max: user_max_fields
  min: user_min_fields
}

"""
order by aggregate values of table "user"
"""
input user_aggregate_order_by {
  count: order_by
  max: user_max_order_by
  min: user_min_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input user_append_input {
  metadata: jsonb
}

"""
input type for inserting array relation for remote table "user"
"""
input user_arr_rel_insert_input {
  data: [user_insert_input!]!

  """upsert condition"""
  on_conflict: user_on_conflict
}

"""
Boolean expression to filter rows from the table "user". All fields are combined with a logical 'AND'.
"""
input user_bool_exp {
  _and: [user_bool_exp!]
  _not: user_bool_exp
  _or: [user_bool_exp!]
  actions: action_bool_exp
  actionsByTargetid: action_bool_exp
  actionsByTargetid_aggregate: action_aggregate_bool_exp
  actions_aggregate: action_aggregate_bool_exp
  article_ledgers: article_ledger_bool_exp
  article_ledgers_aggregate: article_ledger_aggregate_bool_exp
  articles: article_bool_exp
  articles_aggregate: article_aggregate_bool_exp
  auction_bids: auction_bid_bool_exp
  auction_bids_aggregate: auction_bid_aggregate_bool_exp
  auctions: auction_bool_exp
  auctions_aggregate: auction_aggregate_bool_exp
  authorizations: _int2_comparison_exp
  avatarMediaId: bpchar_comparison_exp
  avatarUri: String_comparison_exp
  codexes: codex_bool_exp
  codexes_aggregate: codex_aggregate_bool_exp
  collaborations: collaboration_bool_exp
  collaborationsByCollaborationcontractid: collaboration_bool_exp
  collaborationsByCollaborationcontractid_aggregate: collaboration_aggregate_bool_exp
  collaborations_aggregate: collaboration_aggregate_bool_exp
  collection_offers: collection_offer_bool_exp
  collection_offers_aggregate: collection_offer_aggregate_bool_exp
  createdAt: timestamptz_comparison_exp
  description: String_comparison_exp
  flag: user_flag_enum_comparison_exp
  generative_tokens: generative_token_bool_exp
  generative_tokens_aggregate: generative_token_aggregate_bool_exp
  id: String_comparison_exp
  listings: listing_bool_exp
  listingsByAcceptedbyid: listing_bool_exp
  listingsByAcceptedbyid_aggregate: listing_aggregate_bool_exp
  listings_aggregate: listing_aggregate_bool_exp
  media_image: media_image_bool_exp
  metadata: jsonb_comparison_exp
  metadataUri: String_comparison_exp
  mint_tickets: mint_ticket_bool_exp
  mint_tickets_aggregate: mint_ticket_aggregate_bool_exp
  moderationReasonId: String_comparison_exp
  moderation_reason: moderation_reason_bool_exp
  name: String_comparison_exp
  objkts: objkt_bool_exp
  objktsByOwnerid: objkt_bool_exp
  objktsByOwnerid_aggregate: objkt_aggregate_bool_exp
  objkts_aggregate: objkt_aggregate_bool_exp
  offers: offer_bool_exp
  offers_aggregate: offer_aggregate_bool_exp
  redemptions: redemption_bool_exp
  redemptions_aggregate: redemption_aggregate_bool_exp
  reports: report_bool_exp
  reports_aggregate: report_aggregate_bool_exp
  splits: split_bool_exp
  splits_aggregate: split_aggregate_bool_exp
  type: user_type_enum_comparison_exp
  updatedAt: timestamptz_comparison_exp
  user_stat: user_stats_bool_exp
}

"""
unique or primary key constraints on table "user"
"""
enum user_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  PK_cace4a159ff9f2512dd42373760
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input user_delete_at_path_input {
  metadata: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input user_delete_elem_input {
  metadata: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input user_delete_key_input {
  metadata: String
}

scalar user_flag_enum

"""
Boolean expression to compare columns of type "user_flag_enum". All fields are combined with logical 'AND'.
"""
input user_flag_enum_comparison_exp {
  _eq: user_flag_enum
  _gt: user_flag_enum
  _gte: user_flag_enum
  _in: [user_flag_enum!]
  _is_null: Boolean
  _lt: user_flag_enum
  _lte: user_flag_enum
  _neq: user_flag_enum
  _nin: [user_flag_enum!]
}

"""
input type for inserting data into table "user"
"""
input user_insert_input {
  actions: action_arr_rel_insert_input
  actionsByTargetid: action_arr_rel_insert_input
  article_ledgers: article_ledger_arr_rel_insert_input
  articles: article_arr_rel_insert_input
  auction_bids: auction_bid_arr_rel_insert_input
  auctions: auction_arr_rel_insert_input
  authorizations: _int2
  avatarMediaId: bpchar
  avatarUri: String
  codexes: codex_arr_rel_insert_input
  collaborations: collaboration_arr_rel_insert_input
  collaborationsByCollaborationcontractid: collaboration_arr_rel_insert_input
  collection_offers: collection_offer_arr_rel_insert_input
  createdAt: timestamptz
  description: String
  flag: user_flag_enum
  generative_tokens: generative_token_arr_rel_insert_input
  id: String
  listings: listing_arr_rel_insert_input
  listingsByAcceptedbyid: listing_arr_rel_insert_input
  media_image: media_image_obj_rel_insert_input
  metadata: jsonb
  metadataUri: String
  mint_tickets: mint_ticket_arr_rel_insert_input
  moderationReasonId: String
  moderation_reason: moderation_reason_obj_rel_insert_input
  name: String
  objkts: objkt_arr_rel_insert_input
  objktsByOwnerid: objkt_arr_rel_insert_input
  offers: offer_arr_rel_insert_input
  redemptions: redemption_arr_rel_insert_input
  reports: report_arr_rel_insert_input
  splits: split_arr_rel_insert_input
  type: user_type_enum
  updatedAt: timestamptz
  user_stat: user_stats_obj_rel_insert_input
}

"""aggregate max on columns"""
type user_max_fields {
  avatarMediaId: bpchar
  avatarUri: String
  createdAt: timestamptz
  description: String
  flag: user_flag_enum
  id: String
  metadataUri: String
  moderationReasonId: String
  name: String
  type: user_type_enum
  updatedAt: timestamptz
}

"""
order by max() on columns of table "user"
"""
input user_max_order_by {
  avatarMediaId: order_by
  avatarUri: order_by
  createdAt: order_by
  description: order_by
  flag: order_by
  id: order_by
  metadataUri: order_by
  moderationReasonId: order_by
  name: order_by
  type: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type user_min_fields {
  avatarMediaId: bpchar
  avatarUri: String
  createdAt: timestamptz
  description: String
  flag: user_flag_enum
  id: String
  metadataUri: String
  moderationReasonId: String
  name: String
  type: user_type_enum
  updatedAt: timestamptz
}

"""
order by min() on columns of table "user"
"""
input user_min_order_by {
  avatarMediaId: order_by
  avatarUri: order_by
  createdAt: order_by
  description: order_by
  flag: order_by
  id: order_by
  metadataUri: order_by
  moderationReasonId: order_by
  name: order_by
  type: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "user"
"""
type user_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [user!]!
}

"""
input type for inserting object relation for remote table "user"
"""
input user_obj_rel_insert_input {
  data: user_insert_input!

  """upsert condition"""
  on_conflict: user_on_conflict
}

"""
on_conflict condition type for table "user"
"""
input user_on_conflict {
  constraint: user_constraint!
  update_columns: [user_update_column!]! = []
  where: user_bool_exp
}

"""Ordering options when selecting data from "user"."""
input user_order_by {
  actionsByTargetid_aggregate: action_aggregate_order_by
  actions_aggregate: action_aggregate_order_by
  article_ledgers_aggregate: article_ledger_aggregate_order_by
  articles_aggregate: article_aggregate_order_by
  auction_bids_aggregate: auction_bid_aggregate_order_by
  auctions_aggregate: auction_aggregate_order_by
  authorizations: order_by
  avatarMediaId: order_by
  avatarUri: order_by
  codexes_aggregate: codex_aggregate_order_by
  collaborationsByCollaborationcontractid_aggregate: collaboration_aggregate_order_by
  collaborations_aggregate: collaboration_aggregate_order_by
  collection_offers_aggregate: collection_offer_aggregate_order_by
  createdAt: order_by
  description: order_by
  flag: order_by
  generative_tokens_aggregate: generative_token_aggregate_order_by
  id: order_by
  listingsByAcceptedbyid_aggregate: listing_aggregate_order_by
  listings_aggregate: listing_aggregate_order_by
  media_image: media_image_order_by
  metadata: order_by
  metadataUri: order_by
  mint_tickets_aggregate: mint_ticket_aggregate_order_by
  moderationReasonId: order_by
  moderation_reason: moderation_reason_order_by
  name: order_by
  objktsByOwnerid_aggregate: objkt_aggregate_order_by
  objkts_aggregate: objkt_aggregate_order_by
  offers_aggregate: offer_aggregate_order_by
  redemptions_aggregate: redemption_aggregate_order_by
  reports_aggregate: report_aggregate_order_by
  splits_aggregate: split_aggregate_order_by
  type: order_by
  updatedAt: order_by
  user_stat: user_stats_order_by
}

"""primary key columns input for table: user"""
input user_pk_columns_input {
  id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input user_prepend_input {
  metadata: jsonb
}

"""
select columns of table "user"
"""
enum user_select_column {
  """column name"""
  authorizations

  """column name"""
  avatarMediaId

  """column name"""
  avatarUri

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  flag

  """column name"""
  id

  """column name"""
  metadata

  """column name"""
  metadataUri

  """column name"""
  moderationReasonId

  """column name"""
  name

  """column name"""
  type

  """column name"""
  updatedAt
}

"""
input type for updating data in table "user"
"""
input user_set_input {
  authorizations: _int2
  avatarMediaId: bpchar
  avatarUri: String
  createdAt: timestamptz
  description: String
  flag: user_flag_enum
  id: String
  metadata: jsonb
  metadataUri: String
  moderationReasonId: String
  name: String
  type: user_type_enum
  updatedAt: timestamptz
}

"""
columns and relationships of "user_stats"
"""
type user_stats {
  from: timestamptz
  primVolumeNb: bigint
  primVolumeNb24: bigint
  primVolumeNb30d: bigint
  primVolumeNb7d: bigint
  primVolumeTz: bigint
  primVolumeTz24: bigint
  primVolumeTz30d: bigint
  primVolumeTz7d: bigint
  secVolumeNb: bigint
  secVolumeNb24: bigint
  secVolumeNb30d: bigint
  secVolumeNb7d: bigint
  secVolumeTz: bigint
  secVolumeTz24: bigint
  secVolumeTz30d: bigint
  secVolumeTz7d: bigint
  to: timestamptz

  """An object relationship"""
  user: user!
  userId: String!
}

"""
aggregated selection of "user_stats"
"""
type user_stats_aggregate {
  aggregate: user_stats_aggregate_fields
  nodes: [user_stats!]!
}

"""
aggregate fields of "user_stats"
"""
type user_stats_aggregate_fields {
  avg: user_stats_avg_fields
  count(columns: [user_stats_select_column!], distinct: Boolean): Int!
  max: user_stats_max_fields
  min: user_stats_min_fields
  stddev: user_stats_stddev_fields
  stddev_pop: user_stats_stddev_pop_fields
  stddev_samp: user_stats_stddev_samp_fields
  sum: user_stats_sum_fields
  var_pop: user_stats_var_pop_fields
  var_samp: user_stats_var_samp_fields
  variance: user_stats_variance_fields
}

"""aggregate avg on columns"""
type user_stats_avg_fields {
  primVolumeNb: Float
  primVolumeNb24: Float
  primVolumeNb30d: Float
  primVolumeNb7d: Float
  primVolumeTz: Float
  primVolumeTz24: Float
  primVolumeTz30d: Float
  primVolumeTz7d: Float
  secVolumeNb: Float
  secVolumeNb24: Float
  secVolumeNb30d: Float
  secVolumeNb7d: Float
  secVolumeTz: Float
  secVolumeTz24: Float
  secVolumeTz30d: Float
  secVolumeTz7d: Float
}

"""
Boolean expression to filter rows from the table "user_stats". All fields are combined with a logical 'AND'.
"""
input user_stats_bool_exp {
  _and: [user_stats_bool_exp!]
  _not: user_stats_bool_exp
  _or: [user_stats_bool_exp!]
  from: timestamptz_comparison_exp
  primVolumeNb: bigint_comparison_exp
  primVolumeNb24: bigint_comparison_exp
  primVolumeNb30d: bigint_comparison_exp
  primVolumeNb7d: bigint_comparison_exp
  primVolumeTz: bigint_comparison_exp
  primVolumeTz24: bigint_comparison_exp
  primVolumeTz30d: bigint_comparison_exp
  primVolumeTz7d: bigint_comparison_exp
  secVolumeNb: bigint_comparison_exp
  secVolumeNb24: bigint_comparison_exp
  secVolumeNb30d: bigint_comparison_exp
  secVolumeNb7d: bigint_comparison_exp
  secVolumeTz: bigint_comparison_exp
  secVolumeTz24: bigint_comparison_exp
  secVolumeTz30d: bigint_comparison_exp
  secVolumeTz7d: bigint_comparison_exp
  to: timestamptz_comparison_exp
  user: user_bool_exp
  userId: String_comparison_exp
}

"""
unique or primary key constraints on table "user_stats"
"""
enum user_stats_constraint {
  """
  unique or primary key constraint on columns "userId"
  """
  PK_1ef59671d5359ff63ae55ae4efa
}

"""
input type for incrementing numeric columns in table "user_stats"
"""
input user_stats_inc_input {
  primVolumeNb: bigint
  primVolumeNb24: bigint
  primVolumeNb30d: bigint
  primVolumeNb7d: bigint
  primVolumeTz: bigint
  primVolumeTz24: bigint
  primVolumeTz30d: bigint
  primVolumeTz7d: bigint
  secVolumeNb: bigint
  secVolumeNb24: bigint
  secVolumeNb30d: bigint
  secVolumeNb7d: bigint
  secVolumeTz: bigint
  secVolumeTz24: bigint
  secVolumeTz30d: bigint
  secVolumeTz7d: bigint
}

"""
input type for inserting data into table "user_stats"
"""
input user_stats_insert_input {
  from: timestamptz
  primVolumeNb: bigint
  primVolumeNb24: bigint
  primVolumeNb30d: bigint
  primVolumeNb7d: bigint
  primVolumeTz: bigint
  primVolumeTz24: bigint
  primVolumeTz30d: bigint
  primVolumeTz7d: bigint
  secVolumeNb: bigint
  secVolumeNb24: bigint
  secVolumeNb30d: bigint
  secVolumeNb7d: bigint
  secVolumeTz: bigint
  secVolumeTz24: bigint
  secVolumeTz30d: bigint
  secVolumeTz7d: bigint
  to: timestamptz
  user: user_obj_rel_insert_input
  userId: String
}

"""aggregate max on columns"""
type user_stats_max_fields {
  from: timestamptz
  primVolumeNb: bigint
  primVolumeNb24: bigint
  primVolumeNb30d: bigint
  primVolumeNb7d: bigint
  primVolumeTz: bigint
  primVolumeTz24: bigint
  primVolumeTz30d: bigint
  primVolumeTz7d: bigint
  secVolumeNb: bigint
  secVolumeNb24: bigint
  secVolumeNb30d: bigint
  secVolumeNb7d: bigint
  secVolumeTz: bigint
  secVolumeTz24: bigint
  secVolumeTz30d: bigint
  secVolumeTz7d: bigint
  to: timestamptz
  userId: String
}

"""aggregate min on columns"""
type user_stats_min_fields {
  from: timestamptz
  primVolumeNb: bigint
  primVolumeNb24: bigint
  primVolumeNb30d: bigint
  primVolumeNb7d: bigint
  primVolumeTz: bigint
  primVolumeTz24: bigint
  primVolumeTz30d: bigint
  primVolumeTz7d: bigint
  secVolumeNb: bigint
  secVolumeNb24: bigint
  secVolumeNb30d: bigint
  secVolumeNb7d: bigint
  secVolumeTz: bigint
  secVolumeTz24: bigint
  secVolumeTz30d: bigint
  secVolumeTz7d: bigint
  to: timestamptz
  userId: String
}

"""
response of any mutation on the table "user_stats"
"""
type user_stats_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [user_stats!]!
}

"""
input type for inserting object relation for remote table "user_stats"
"""
input user_stats_obj_rel_insert_input {
  data: user_stats_insert_input!

  """upsert condition"""
  on_conflict: user_stats_on_conflict
}

"""
on_conflict condition type for table "user_stats"
"""
input user_stats_on_conflict {
  constraint: user_stats_constraint!
  update_columns: [user_stats_update_column!]! = []
  where: user_stats_bool_exp
}

"""Ordering options when selecting data from "user_stats"."""
input user_stats_order_by {
  from: order_by
  primVolumeNb: order_by
  primVolumeNb24: order_by
  primVolumeNb30d: order_by
  primVolumeNb7d: order_by
  primVolumeTz: order_by
  primVolumeTz24: order_by
  primVolumeTz30d: order_by
  primVolumeTz7d: order_by
  secVolumeNb: order_by
  secVolumeNb24: order_by
  secVolumeNb30d: order_by
  secVolumeNb7d: order_by
  secVolumeTz: order_by
  secVolumeTz24: order_by
  secVolumeTz30d: order_by
  secVolumeTz7d: order_by
  to: order_by
  user: user_order_by
  userId: order_by
}

"""primary key columns input for table: user_stats"""
input user_stats_pk_columns_input {
  userId: String!
}

"""
select columns of table "user_stats"
"""
enum user_stats_select_column {
  """column name"""
  from

  """column name"""
  primVolumeNb

  """column name"""
  primVolumeNb24

  """column name"""
  primVolumeNb30d

  """column name"""
  primVolumeNb7d

  """column name"""
  primVolumeTz

  """column name"""
  primVolumeTz24

  """column name"""
  primVolumeTz30d

  """column name"""
  primVolumeTz7d

  """column name"""
  secVolumeNb

  """column name"""
  secVolumeNb24

  """column name"""
  secVolumeNb30d

  """column name"""
  secVolumeNb7d

  """column name"""
  secVolumeTz

  """column name"""
  secVolumeTz24

  """column name"""
  secVolumeTz30d

  """column name"""
  secVolumeTz7d

  """column name"""
  to

  """column name"""
  userId
}

"""
input type for updating data in table "user_stats"
"""
input user_stats_set_input {
  from: timestamptz
  primVolumeNb: bigint
  primVolumeNb24: bigint
  primVolumeNb30d: bigint
  primVolumeNb7d: bigint
  primVolumeTz: bigint
  primVolumeTz24: bigint
  primVolumeTz30d: bigint
  primVolumeTz7d: bigint
  secVolumeNb: bigint
  secVolumeNb24: bigint
  secVolumeNb30d: bigint
  secVolumeNb7d: bigint
  secVolumeTz: bigint
  secVolumeTz24: bigint
  secVolumeTz30d: bigint
  secVolumeTz7d: bigint
  to: timestamptz
  userId: String
}

"""aggregate stddev on columns"""
type user_stats_stddev_fields {
  primVolumeNb: Float
  primVolumeNb24: Float
  primVolumeNb30d: Float
  primVolumeNb7d: Float
  primVolumeTz: Float
  primVolumeTz24: Float
  primVolumeTz30d: Float
  primVolumeTz7d: Float
  secVolumeNb: Float
  secVolumeNb24: Float
  secVolumeNb30d: Float
  secVolumeNb7d: Float
  secVolumeTz: Float
  secVolumeTz24: Float
  secVolumeTz30d: Float
  secVolumeTz7d: Float
}

"""aggregate stddev_pop on columns"""
type user_stats_stddev_pop_fields {
  primVolumeNb: Float
  primVolumeNb24: Float
  primVolumeNb30d: Float
  primVolumeNb7d: Float
  primVolumeTz: Float
  primVolumeTz24: Float
  primVolumeTz30d: Float
  primVolumeTz7d: Float
  secVolumeNb: Float
  secVolumeNb24: Float
  secVolumeNb30d: Float
  secVolumeNb7d: Float
  secVolumeTz: Float
  secVolumeTz24: Float
  secVolumeTz30d: Float
  secVolumeTz7d: Float
}

"""aggregate stddev_samp on columns"""
type user_stats_stddev_samp_fields {
  primVolumeNb: Float
  primVolumeNb24: Float
  primVolumeNb30d: Float
  primVolumeNb7d: Float
  primVolumeTz: Float
  primVolumeTz24: Float
  primVolumeTz30d: Float
  primVolumeTz7d: Float
  secVolumeNb: Float
  secVolumeNb24: Float
  secVolumeNb30d: Float
  secVolumeNb7d: Float
  secVolumeTz: Float
  secVolumeTz24: Float
  secVolumeTz30d: Float
  secVolumeTz7d: Float
}

"""
Streaming cursor of the table "user_stats"
"""
input user_stats_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: user_stats_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input user_stats_stream_cursor_value_input {
  from: timestamptz
  primVolumeNb: bigint
  primVolumeNb24: bigint
  primVolumeNb30d: bigint
  primVolumeNb7d: bigint
  primVolumeTz: bigint
  primVolumeTz24: bigint
  primVolumeTz30d: bigint
  primVolumeTz7d: bigint
  secVolumeNb: bigint
  secVolumeNb24: bigint
  secVolumeNb30d: bigint
  secVolumeNb7d: bigint
  secVolumeTz: bigint
  secVolumeTz24: bigint
  secVolumeTz30d: bigint
  secVolumeTz7d: bigint
  to: timestamptz
  userId: String
}

"""aggregate sum on columns"""
type user_stats_sum_fields {
  primVolumeNb: bigint
  primVolumeNb24: bigint
  primVolumeNb30d: bigint
  primVolumeNb7d: bigint
  primVolumeTz: bigint
  primVolumeTz24: bigint
  primVolumeTz30d: bigint
  primVolumeTz7d: bigint
  secVolumeNb: bigint
  secVolumeNb24: bigint
  secVolumeNb30d: bigint
  secVolumeNb7d: bigint
  secVolumeTz: bigint
  secVolumeTz24: bigint
  secVolumeTz30d: bigint
  secVolumeTz7d: bigint
}

"""
update columns of table "user_stats"
"""
enum user_stats_update_column {
  """column name"""
  from

  """column name"""
  primVolumeNb

  """column name"""
  primVolumeNb24

  """column name"""
  primVolumeNb30d

  """column name"""
  primVolumeNb7d

  """column name"""
  primVolumeTz

  """column name"""
  primVolumeTz24

  """column name"""
  primVolumeTz30d

  """column name"""
  primVolumeTz7d

  """column name"""
  secVolumeNb

  """column name"""
  secVolumeNb24

  """column name"""
  secVolumeNb30d

  """column name"""
  secVolumeNb7d

  """column name"""
  secVolumeTz

  """column name"""
  secVolumeTz24

  """column name"""
  secVolumeTz30d

  """column name"""
  secVolumeTz7d

  """column name"""
  to

  """column name"""
  userId
}

input user_stats_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: user_stats_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: user_stats_set_input

  """filter the rows which have to be updated"""
  where: user_stats_bool_exp!
}

"""aggregate var_pop on columns"""
type user_stats_var_pop_fields {
  primVolumeNb: Float
  primVolumeNb24: Float
  primVolumeNb30d: Float
  primVolumeNb7d: Float
  primVolumeTz: Float
  primVolumeTz24: Float
  primVolumeTz30d: Float
  primVolumeTz7d: Float
  secVolumeNb: Float
  secVolumeNb24: Float
  secVolumeNb30d: Float
  secVolumeNb7d: Float
  secVolumeTz: Float
  secVolumeTz24: Float
  secVolumeTz30d: Float
  secVolumeTz7d: Float
}

"""aggregate var_samp on columns"""
type user_stats_var_samp_fields {
  primVolumeNb: Float
  primVolumeNb24: Float
  primVolumeNb30d: Float
  primVolumeNb7d: Float
  primVolumeTz: Float
  primVolumeTz24: Float
  primVolumeTz30d: Float
  primVolumeTz7d: Float
  secVolumeNb: Float
  secVolumeNb24: Float
  secVolumeNb30d: Float
  secVolumeNb7d: Float
  secVolumeTz: Float
  secVolumeTz24: Float
  secVolumeTz30d: Float
  secVolumeTz7d: Float
}

"""aggregate variance on columns"""
type user_stats_variance_fields {
  primVolumeNb: Float
  primVolumeNb24: Float
  primVolumeNb30d: Float
  primVolumeNb7d: Float
  primVolumeTz: Float
  primVolumeTz24: Float
  primVolumeTz30d: Float
  primVolumeTz7d: Float
  secVolumeNb: Float
  secVolumeNb24: Float
  secVolumeNb30d: Float
  secVolumeNb7d: Float
  secVolumeTz: Float
  secVolumeTz24: Float
  secVolumeTz30d: Float
  secVolumeTz7d: Float
}

"""
Streaming cursor of the table "user"
"""
input user_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: user_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input user_stream_cursor_value_input {
  authorizations: _int2
  avatarMediaId: bpchar
  avatarUri: String
  createdAt: timestamptz
  description: String
  flag: user_flag_enum
  id: String
  metadata: jsonb
  metadataUri: String
  moderationReasonId: String
  name: String
  type: user_type_enum
  updatedAt: timestamptz
}

scalar user_type_enum

"""
Boolean expression to compare columns of type "user_type_enum". All fields are combined with logical 'AND'.
"""
input user_type_enum_comparison_exp {
  _eq: user_type_enum
  _gt: user_type_enum
  _gte: user_type_enum
  _in: [user_type_enum!]
  _is_null: Boolean
  _lt: user_type_enum
  _lte: user_type_enum
  _neq: user_type_enum
  _nin: [user_type_enum!]
}

"""
update columns of table "user"
"""
enum user_update_column {
  """column name"""
  authorizations

  """column name"""
  avatarMediaId

  """column name"""
  avatarUri

  """column name"""
  createdAt

  """column name"""
  description

  """column name"""
  flag

  """column name"""
  id

  """column name"""
  metadata

  """column name"""
  metadataUri

  """column name"""
  moderationReasonId

  """column name"""
  name

  """column name"""
  type

  """column name"""
  updatedAt
}

input user_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: user_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: user_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: user_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: user_delete_key_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: user_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: user_set_input

  """filter the rows which have to be updated"""
  where: user_bool_exp!
}

scalar uuid

"""
Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'.
"""
input uuid_comparison_exp {
  _eq: uuid
  _gt: uuid
  _gte: uuid
  _in: [uuid!]
  _is_null: Boolean
  _lt: uuid
  _lte: uuid
  _neq: uuid
  _nin: [uuid!]
}

